name: Workflows Docker Build

on:
  workflow_call:

env:
  REGISTRY: ghcr.io

jobs:
  list-images:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.set-matrix.outputs.images }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: set matrix
        id: set-matrix
        run: echo "images=$(find docker -maxdepth 1 -mindepth 1 | jq --raw-input --slurp --compact-output 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  build-images:
    needs: list-images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(needs.list-images.outputs.images) }}
    steps:
      - uses: actions/checkout@v3
      - name: Set Env
        run: |
          echo "TOOL=$(jq -r .name ${{ matrix.image }}/package.json)" >> $GITHUB_ENV
          echo "SEMVER=$(jq -r .version ${{ matrix.image }}/package.json)" >> $GITHUB_ENV
          echo "REVISION=$(jq -r .revision ${{ matrix.image }}/package.json)" >> $GITHUB_ENV
          echo "GH_REF=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Set Main Tag
        if: github.ref == 'refs/heads/main'
        run: |
          if [ ${{ env.REVISION }} != "null" ]; then
            echo "IMAGE_TAG=${{ env.SEMVER }}-${{ env.REVISION }}" >> $GITHUB_ENV
            echo "TAG_TO_CHECK=${{ env.SEMVER }}-${{ env.REVISION }}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=${{ env.SEMVER }}" >> $GITHUB_ENV
            echo "TAG_TO_CHECK=${{ env.SEMVER }}" >> $GITHUB_ENV
          fi
      - name: Set Branch Tag
        if: github.ref != 'refs/heads/main'
        run: |
          if [ ${{ env.REVISION }} != "null" ]; then
            echo "IMAGE_TAG=branch-${{ env.GH_REF }}-${{ env.SEMVER }}-${{ env.REVISION }}" >> $GITHUB_ENV
            echo "TAG_TO_CHECK=${{ env.SEMVER }}-${{ env.REVISION }}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=branch-${{ env.GH_REF }}-${{ env.SEMVER }}" >> $GITHUB_ENV
            echo "TAG_TO_CHECK=${{ env.SEMVER }}" >> $GITHUB_ENV
          fi
      - name: Log in to the Container registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} --username ${{ github.actor }} --password-stdin
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v4
        id: build
        with:
          context: ${{ matrix.image }}
          build-contexts: scripts=./scripts
          push: false
          load: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.TOOL }}:local
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.TOOL }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.TOOL }}:buildcache,mode=max
      - name: Check digest
        run: |
          docker pull ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.TOOL }}:${{ env.TAG_TO_CHECK }} || true
          remote_digest=$(docker inspect ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.TOOL }}:${{ env.TAG_TO_CHECK }} --format='{{index .RepoDigests 0}}' | cut -d '@' -f 2 || true)
          local_digest=$(docker inspect ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.TOOL }}:local --format='{{index .RepoDigests 0}}' | cut -d '@' -f 2 || true)
          # below check "in english": we should fail if remote_digest is populated and does not equal local_digest, OR if local_digest is empty and remote_digest is populated
          if [ "$remote_digest" != "" ] && [ "$remote_digest" != "$local_digest" ] || [ "$local_digest" == "" ] && [ "$remote_digest" != "" ]; then
            echo "Digests do not match!"
            echo "Remote: $remote_digest"
            echo "Local: $local_digest"
            echo "Should you increment the version number?"
            exit 1
          fi
      - name: Run Snyk to check Docker image for vulnerabilities
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@0.4.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.TOOL }}:local
          args: --file=${{ matrix.image }}/Dockerfile
      - name: Clean Snyk SARIF file
        continue-on-error: true
        run: |
          sed -i 's/"security-severity": "null"/"security-severity": "0"/g' snyk.sarif
      - name: Upload result to GitHub Code Scanning
        continue-on-error: true
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
      - name: Push image
        run: |
          docker tag ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.TOOL }}:local ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.TOOL }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.TOOL }}:${{ env.IMAGE_TAG }}
