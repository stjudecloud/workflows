{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This repository contains all bioinformatics workflows used on the St. Jude Cloud project. Officially, the repository is in beta \u2014 the project is adding workflows as they are developed and put into production. Resources requirements have been optimized to minimize failures in our computing environment, but they may not reflect the best settings for your use case. Please ensure that you tailor these parameters to fit your needs. \ud83c\udfe0 Homepage Getting Started At the time of writing, all workflows are written in WDL and are tested using Cromwell . We use Oliver to easily interact with the Cromwell server to perform various tasks. Although we do not test outside of Cromwell, we expect that the workflows will work just as well using other runners. The easiest way to get started is to install bioconda and the run the following commands: conda create -n workflows-dev -c conda-forge cromwell -y conda activate workflows-dev git clone git@github.com:stjudecloud/workflows.git cd workflows Any of the workflows in the workflows folder is a good place to start, e.g. cromwell run workflows/qc/make-qc-reference.wdl Repository Structure The repository is laid out as follows: bin - Scripts used by Cromwell configuration settings. Add this to $PATH prior to using configurations in conf with Cromwell. conf - Cromwell configuration files created for various environments that we use across our team. Feel free to use/fork/suggest improvements. docker - Dockerfiles used in our workflows. All docker images are published to the GitHub Container Registy as a part of our CI and are versioned. tools - All tools we have wrapped as individual WDL tasks. workflows - Directory containing all end-to-end bioinformatics workflows. Workflows Available The current workflows exist in this repo with the following statuses: Name Version Description Specification Workflow Status RNA-Seq Standard v2.0.0 Standard RNA-Seq harmonization pipeline. Specification Realign BAM Workflow , FASTQ Workflow Build STAR References N/A Build STAR aligner reference files used in RNA-Seq Standard harmonization pipelines. None Workflow Quality Check Standard v1.0.0 Perform ~10 different QC analyses on a BAM file and compile the results using MultiQC . Specification Workflow ESTIMATE v1.0.0 ( beta ) Runs the ESTIMATE software package on a feature counts file. None Workflow Calculate Gene Lengths N/A Produces a gene length file from a GTF. None Workflow Build BWA References N/A Builds reference files used by the BWA aligner . None Workflow BAM to FASTQs v1.0.0 Split a BAM file into read groups, then read 1 FASTQs and read 2 FASTQs. None Workflow Author \ud83d\udc64 St. Jude Cloud Team Website: https://stjude.cloud Github: @stjudecloud Twitter: @StJudeResearch Tests Given that this repo is still new, there are no tests. When we add tests, we will update the README. \ud83e\udd1d Contributing Contributions, issues and feature requests are welcome! Feel free to check issues page . You can also take a look at the contributing guide . \ud83d\udcdd License Copyright \u00a9 2020-Present St. Jude Cloud Team . This project is MIT licensed.","title":"Home"},{"location":"#homepage","text":"","title":"\ud83c\udfe0 Homepage"},{"location":"#getting-started","text":"At the time of writing, all workflows are written in WDL and are tested using Cromwell . We use Oliver to easily interact with the Cromwell server to perform various tasks. Although we do not test outside of Cromwell, we expect that the workflows will work just as well using other runners. The easiest way to get started is to install bioconda and the run the following commands: conda create -n workflows-dev -c conda-forge cromwell -y conda activate workflows-dev git clone git@github.com:stjudecloud/workflows.git cd workflows Any of the workflows in the workflows folder is a good place to start, e.g. cromwell run workflows/qc/make-qc-reference.wdl","title":"Getting Started"},{"location":"#repository-structure","text":"The repository is laid out as follows: bin - Scripts used by Cromwell configuration settings. Add this to $PATH prior to using configurations in conf with Cromwell. conf - Cromwell configuration files created for various environments that we use across our team. Feel free to use/fork/suggest improvements. docker - Dockerfiles used in our workflows. All docker images are published to the GitHub Container Registy as a part of our CI and are versioned. tools - All tools we have wrapped as individual WDL tasks. workflows - Directory containing all end-to-end bioinformatics workflows.","title":"Repository Structure"},{"location":"#workflows-available","text":"The current workflows exist in this repo with the following statuses: Name Version Description Specification Workflow Status RNA-Seq Standard v2.0.0 Standard RNA-Seq harmonization pipeline. Specification Realign BAM Workflow , FASTQ Workflow Build STAR References N/A Build STAR aligner reference files used in RNA-Seq Standard harmonization pipelines. None Workflow Quality Check Standard v1.0.0 Perform ~10 different QC analyses on a BAM file and compile the results using MultiQC . Specification Workflow ESTIMATE v1.0.0 ( beta ) Runs the ESTIMATE software package on a feature counts file. None Workflow Calculate Gene Lengths N/A Produces a gene length file from a GTF. None Workflow Build BWA References N/A Builds reference files used by the BWA aligner . None Workflow BAM to FASTQs v1.0.0 Split a BAM file into read groups, then read 1 FASTQs and read 2 FASTQs. None Workflow","title":"Workflows Available"},{"location":"#author","text":"\ud83d\udc64 St. Jude Cloud Team Website: https://stjude.cloud Github: @stjudecloud Twitter: @StJudeResearch","title":"Author"},{"location":"#tests","text":"Given that this repo is still new, there are no tests. When we add tests, we will update the README.","title":"Tests"},{"location":"#contributing","text":"Contributions, issues and feature requests are welcome! Feel free to check issues page . You can also take a look at the contributing guide .","title":"\ud83e\udd1d Contributing"},{"location":"#license","text":"Copyright \u00a9 2020-Present St. Jude Cloud Team . This project is MIT licensed.","title":"\ud83d\udcdd License"},{"location":"build_for_dnanexus/","text":"Building WDL workflows for DNAnexus Obtain dxWDL JAR Retrieve the latest dxWDL JAR release from GitHub: https://github.com/dnanexus/dxWDL/releases Optional workflow parameters for dxWDL -project - Specify a project to compile the workflow. This is optional and otherwise uses the currently selected project. -archive - Archive older versions of the workflow and applets -defaults - Set default options for certain parameters -verbose - Detailed build information -locked - Creates a one stage worklfow that is cleaner in the interface -extras - JSON formatted file with options primarily for the DNAnexus platform settings Build Interactive t-SNE workflow for DNAnexus Commands for building the t-SNE workflows are included below. Your version of dxWDL may differ from the version included below. Several optional parameters are included. -defaults specifies DNAnexus paths to reference data for the workflow. -extras specifies that tasks should be retried by default on failure. Build workflow running htseq-count on BAM input java -jar dxWDL-v1.46.2.jar compile workflows/interactive-tsne/interactive_tsne_from_bams.wdl -project project-FjFfvV89F80QvvxJ8131yzpB -archive -verbose -defaults workflows/interactive-tsne/inputs/defaults_bam.json -extras workflows/interactive-tsne/inputs/extras.json -locked Build workflow from HTSeq counts data java -jar dxWDL-v1.46.2.jar compile workflows/interactive-tsne/interactive_tsne_from_counts.wdl -project project-FjFfvV89F80QvvxJ8131yzpB -archive -verbose -defaults workflows/interactive-tsne/inputs/defaults_counts.json -extras workflows/interactive-tsne/inputs/extras.json -locked Build workflow with RNA-Seq V2 remapping of BAM input java -jar dxWDL-v1.46.2.jar compile workflows/interactive-tsne/interactive-tsne.wdl -project project-FjFfvV89F80QvvxJ8131yzpB -archive -verbose -defaults workflows/interactive-tsne/inputs/defaults.json -extras workflows/interactive-tsne/inputs/extras.json -locked","title":"Building WDL workflows for DNAnexus"},{"location":"build_for_dnanexus/#building-wdl-workflows-for-dnanexus","text":"","title":"Building WDL workflows for DNAnexus"},{"location":"build_for_dnanexus/#obtain-dxwdl-jar","text":"Retrieve the latest dxWDL JAR release from GitHub: https://github.com/dnanexus/dxWDL/releases","title":"Obtain dxWDL JAR"},{"location":"build_for_dnanexus/#optional-workflow-parameters-for-dxwdl","text":"-project - Specify a project to compile the workflow. This is optional and otherwise uses the currently selected project. -archive - Archive older versions of the workflow and applets -defaults - Set default options for certain parameters -verbose - Detailed build information -locked - Creates a one stage worklfow that is cleaner in the interface -extras - JSON formatted file with options primarily for the DNAnexus platform settings","title":"Optional workflow parameters for dxWDL"},{"location":"build_for_dnanexus/#build-interactive-t-sne-workflow-for-dnanexus","text":"Commands for building the t-SNE workflows are included below. Your version of dxWDL may differ from the version included below. Several optional parameters are included. -defaults specifies DNAnexus paths to reference data for the workflow. -extras specifies that tasks should be retried by default on failure.","title":"Build Interactive t-SNE workflow for DNAnexus"},{"location":"build_for_dnanexus/#build-workflow-running-htseq-count-on-bam-input","text":"java -jar dxWDL-v1.46.2.jar compile workflows/interactive-tsne/interactive_tsne_from_bams.wdl -project project-FjFfvV89F80QvvxJ8131yzpB -archive -verbose -defaults workflows/interactive-tsne/inputs/defaults_bam.json -extras workflows/interactive-tsne/inputs/extras.json -locked","title":"Build workflow running htseq-count on BAM input"},{"location":"build_for_dnanexus/#build-workflow-from-htseq-counts-data","text":"java -jar dxWDL-v1.46.2.jar compile workflows/interactive-tsne/interactive_tsne_from_counts.wdl -project project-FjFfvV89F80QvvxJ8131yzpB -archive -verbose -defaults workflows/interactive-tsne/inputs/defaults_counts.json -extras workflows/interactive-tsne/inputs/extras.json -locked","title":"Build workflow from HTSeq counts data"},{"location":"build_for_dnanexus/#build-workflow-with-rna-seq-v2-remapping-of-bam-input","text":"java -jar dxWDL-v1.46.2.jar compile workflows/interactive-tsne/interactive-tsne.wdl -project project-FjFfvV89F80QvvxJ8131yzpB -archive -verbose -defaults workflows/interactive-tsne/inputs/defaults.json -extras workflows/interactive-tsne/inputs/extras.json -locked","title":"Build workflow with RNA-Seq V2 remapping of BAM input"},{"location":"tasks/bwa/","text":"Homepage bwa_aln description Maps single-end FASTQ files to BAM format using bwa aln outputs {'bam': 'Aligned BAM format file'} Inputs Required _runtime (Any, required ) bwa_db_tar_gz (File, required ): Gzipped tar archive of the bwa reference files. Files should be at the root of the archive. fastq (File, required ): Input FASTQ file to align with bwa Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=5): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=sub(basename(fastq),\"([_.][rR][12])?(.subsampled)?.(fastq|fq)(.gz)?$\",\"\")): Prefix for the BAM file. The extension .bam will be added. read_group (String, default=\"\"): Read group information for BWA to insert into the header. BWA format: '@RG ID:foo SM:bar' use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs bam (File) bwa_aln_pe description Maps paired-end FASTQ files to BAM format using bwa aln outputs {'bam': 'Aligned BAM format file'} Inputs Required _runtime (Any, required ) bwa_db_tar_gz (File, required ): Gzipped tar archive of the bwa reference files. Files should be at the root of the archive. read_one_fastq_gz (File, required ): Input gzipped FASTQ read one file to align with bwa read_two_fastq_gz (File, required ): Input gzipped FASTQ read two file to align with bwa Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=5): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=sub(basename(read_one_fastq_gz),\"([_.][rR][12])?(.subsampled)?.(fastq|fq)(.gz)?$\",\"\")): Prefix for the BAM file. The extension .bam will be added. read_group (String, default=\"\"): Read group information for BWA to insert into the header. BWA format: '@RG ID:foo SM:bar' use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs bam (File) bwa_mem description Maps FASTQ files to BAM format using bwa mem outputs {'bam': 'Aligned BAM format file'} Inputs Required _runtime (Any, required ) bwa_db_tar_gz (File, required ): Gzipped tar archive of the bwa reference files. Files should be at the root of the archive. read_one_fastq_gz (File, required ): Input gzipped FASTQ read one file to align with bwa Optional read_two_fastq_gz (File?): Input gzipped FASTQ read two file to align with bwa Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=10): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=sub(basename(read_one_fastq_gz),\"([_.][rR][12])?(.subsampled)?.(fastq|fq)(.gz)?$\",\"\")): Prefix for the BAM file. The extension .bam will be added. read_group (String, default=\"\"): Read group information for BWA to insert into the header. BWA format: '@RG ID:foo SM:bar' use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs bam (File) build_bwa_db description Creates a BWA index and returns it as a compressed tar archive outputs {'bwa_db_tar_gz': 'Tarballed bwa reference files'} Inputs Required _runtime (Any, required ) reference_fasta (File, required ): Input reference Fasta file to index with bwa. Should be compressed with gzip. Defaults db_name (String, default=\"bwa_db\"): Name of the output gzipped tar archive of the bwa reference files. The extension .tar.gz will be added. max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=5): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. Outputs bwa_db_tar_gz (File)","title":"Bwa"},{"location":"tasks/bwa/#bwa_aln","text":"description Maps single-end FASTQ files to BAM format using bwa aln outputs {'bam': 'Aligned BAM format file'}","title":"bwa_aln"},{"location":"tasks/bwa/#inputs","text":"","title":"Inputs"},{"location":"tasks/bwa/#required","text":"_runtime (Any, required ) bwa_db_tar_gz (File, required ): Gzipped tar archive of the bwa reference files. Files should be at the root of the archive. fastq (File, required ): Input FASTQ file to align with bwa","title":"Required"},{"location":"tasks/bwa/#defaults","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=5): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=sub(basename(fastq),\"([_.][rR][12])?(.subsampled)?.(fastq|fq)(.gz)?$\",\"\")): Prefix for the BAM file. The extension .bam will be added. read_group (String, default=\"\"): Read group information for BWA to insert into the header. BWA format: '@RG ID:foo SM:bar' use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/bwa/#outputs","text":"bam (File)","title":"Outputs"},{"location":"tasks/bwa/#bwa_aln_pe","text":"description Maps paired-end FASTQ files to BAM format using bwa aln outputs {'bam': 'Aligned BAM format file'}","title":"bwa_aln_pe"},{"location":"tasks/bwa/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/bwa/#required_1","text":"_runtime (Any, required ) bwa_db_tar_gz (File, required ): Gzipped tar archive of the bwa reference files. Files should be at the root of the archive. read_one_fastq_gz (File, required ): Input gzipped FASTQ read one file to align with bwa read_two_fastq_gz (File, required ): Input gzipped FASTQ read two file to align with bwa","title":"Required"},{"location":"tasks/bwa/#defaults_1","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=5): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=sub(basename(read_one_fastq_gz),\"([_.][rR][12])?(.subsampled)?.(fastq|fq)(.gz)?$\",\"\")): Prefix for the BAM file. The extension .bam will be added. read_group (String, default=\"\"): Read group information for BWA to insert into the header. BWA format: '@RG ID:foo SM:bar' use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/bwa/#outputs_1","text":"bam (File)","title":"Outputs"},{"location":"tasks/bwa/#bwa_mem","text":"description Maps FASTQ files to BAM format using bwa mem outputs {'bam': 'Aligned BAM format file'}","title":"bwa_mem"},{"location":"tasks/bwa/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/bwa/#required_2","text":"_runtime (Any, required ) bwa_db_tar_gz (File, required ): Gzipped tar archive of the bwa reference files. Files should be at the root of the archive. read_one_fastq_gz (File, required ): Input gzipped FASTQ read one file to align with bwa","title":"Required"},{"location":"tasks/bwa/#optional","text":"read_two_fastq_gz (File?): Input gzipped FASTQ read two file to align with bwa","title":"Optional"},{"location":"tasks/bwa/#defaults_2","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=10): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=sub(basename(read_one_fastq_gz),\"([_.][rR][12])?(.subsampled)?.(fastq|fq)(.gz)?$\",\"\")): Prefix for the BAM file. The extension .bam will be added. read_group (String, default=\"\"): Read group information for BWA to insert into the header. BWA format: '@RG ID:foo SM:bar' use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/bwa/#outputs_2","text":"bam (File)","title":"Outputs"},{"location":"tasks/bwa/#build_bwa_db","text":"description Creates a BWA index and returns it as a compressed tar archive outputs {'bwa_db_tar_gz': 'Tarballed bwa reference files'}","title":"build_bwa_db"},{"location":"tasks/bwa/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/bwa/#required_3","text":"_runtime (Any, required ) reference_fasta (File, required ): Input reference Fasta file to index with bwa. Should be compressed with gzip.","title":"Required"},{"location":"tasks/bwa/#defaults_3","text":"db_name (String, default=\"bwa_db\"): Name of the output gzipped tar archive of the bwa reference files. The extension .tar.gz will be added. max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=5): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB.","title":"Defaults"},{"location":"tasks/bwa/#outputs_3","text":"bwa_db_tar_gz (File)","title":"Outputs"},{"location":"tasks/cellranger/","text":"Cell Ranger This WDL file wrap the 10x Genomics Cell Ranger tool. Cell Ranger is a tool for handling scRNA-Seq data. count description This WDL task runs Cell Ranger count to generate an aligned BAM and feature counts from scRNA-Seq data. Inputs Required _runtime (Any, required ) fastqs_tar_gz (File, required ): Path to the FASTQ folder archive in .tar.gz format id (String, required ): A unique run ID transcriptome_tar_gz (File, required ): Path to Cell Ranger-compatible transcriptome reference in .tar.gz format Defaults max_retries (Int, default=1) memory_gb (Int, default=16) modify_disk_size_gb (Int, default=0) ncpu (Int, default=1) use_all_cores (Boolean, default=false) Outputs bam (File) bam_index (File) qc (File) barcodes (File) features (File) matrix (File) filtered_gene_h5 (File) raw_gene_h5 (File) raw_barcodes (File) raw_features (File) raw_matrix (File) mol_info_h5 (File) web_summary (File) cloupe (File) bamtofastq description This WDL task runs the 10x bamtofastq tool to convert Cell Ranger generated BAM files back to FASTQ files Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM to convert to Cell Ranger compatible fastqs Defaults cellranger11 (Boolean, default=false): Convert a BAM produced by Cell Ranger 1.0-1.1 gemcode (Boolean, default=false): Convert a BAM produced from GemCode data (Longranger 1.0 - 1.3) longranger20 (Boolean, default=false): Convert a BAM produced by Longranger 2.0 max_retries (Int, default=1) memory_gb (Int, default=40) modify_disk_size_gb (Int, default=0) ncpu (Int, default=1) use_all_cores (Boolean, default=false) Outputs fastqs (Array[File]) fastqs_archive (File) read_one_fastq_gz (Array[File]) read_two_fastq_gz (Array[File])","title":"Cellranger"},{"location":"tasks/cellranger/#count","text":"description This WDL task runs Cell Ranger count to generate an aligned BAM and feature counts from scRNA-Seq data.","title":"count"},{"location":"tasks/cellranger/#inputs","text":"","title":"Inputs"},{"location":"tasks/cellranger/#required","text":"_runtime (Any, required ) fastqs_tar_gz (File, required ): Path to the FASTQ folder archive in .tar.gz format id (String, required ): A unique run ID transcriptome_tar_gz (File, required ): Path to Cell Ranger-compatible transcriptome reference in .tar.gz format","title":"Required"},{"location":"tasks/cellranger/#defaults","text":"max_retries (Int, default=1) memory_gb (Int, default=16) modify_disk_size_gb (Int, default=0) ncpu (Int, default=1) use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/cellranger/#outputs","text":"bam (File) bam_index (File) qc (File) barcodes (File) features (File) matrix (File) filtered_gene_h5 (File) raw_gene_h5 (File) raw_barcodes (File) raw_features (File) raw_matrix (File) mol_info_h5 (File) web_summary (File) cloupe (File)","title":"Outputs"},{"location":"tasks/cellranger/#bamtofastq","text":"description This WDL task runs the 10x bamtofastq tool to convert Cell Ranger generated BAM files back to FASTQ files","title":"bamtofastq"},{"location":"tasks/cellranger/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/cellranger/#required_1","text":"_runtime (Any, required ) bam (File, required ): Input BAM to convert to Cell Ranger compatible fastqs","title":"Required"},{"location":"tasks/cellranger/#defaults_1","text":"cellranger11 (Boolean, default=false): Convert a BAM produced by Cell Ranger 1.0-1.1 gemcode (Boolean, default=false): Convert a BAM produced from GemCode data (Longranger 1.0 - 1.3) longranger20 (Boolean, default=false): Convert a BAM produced by Longranger 2.0 max_retries (Int, default=1) memory_gb (Int, default=40) modify_disk_size_gb (Int, default=0) ncpu (Int, default=1) use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/cellranger/#outputs_1","text":"fastqs (Array[File]) fastqs_archive (File) read_one_fastq_gz (Array[File]) read_two_fastq_gz (Array[File])","title":"Outputs"},{"location":"tasks/deeptools/","text":"Homepage bam_coverage description Generates a BigWig coverage track using bamCoverage from DeepTools outputs {'bigwig': 'BigWig format coverage file'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to generate coverage for bam_index (File, required ): BAM index file corresponding to the input BAM Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=basename(bam,\".bam\")): Prefix for the BigWig file. The extension .bw will be added. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs bigwig (File)","title":"Deeptools"},{"location":"tasks/deeptools/#bam_coverage","text":"description Generates a BigWig coverage track using bamCoverage from DeepTools outputs {'bigwig': 'BigWig format coverage file'}","title":"bam_coverage"},{"location":"tasks/deeptools/#inputs","text":"","title":"Inputs"},{"location":"tasks/deeptools/#required","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to generate coverage for bam_index (File, required ): BAM index file corresponding to the input BAM","title":"Required"},{"location":"tasks/deeptools/#defaults","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=basename(bam,\".bam\")): Prefix for the BigWig file. The extension .bw will be added. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/deeptools/#outputs","text":"bigwig (File)","title":"Outputs"},{"location":"tasks/estimate/","text":"Homepage calc_tpm description Given a gene counts file and a gene lengths file, calculate Transcripts Per Million (TPM) outputs {'tpm_file': 'Transcripts Per Million (TPM) file. A two column headered TSV file.'} Inputs Required _runtime (Any, required ) counts (File, required ): A two column headerless TSV file with gene names in the first column and counts (as integers) in the second column. Entries starting with '__' will be discarded. Can be generated with htseq.wdl . gene_lengths (File, required ): A two column headered TSV file with gene names (matching those in the counts file) in the first column and feature lengths (as integers) in the second column. Can be generated with calc-gene-lengths.wdl . Defaults disk_size_gb (Int, default=10): Disk space to allocate for task, specified in GB max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB prefix (String, default=basename(counts,\".feature-counts.txt\")): Prefix for the TPM file. The extension .TPM.txt will be added. Outputs tpm_file (File) run_estimate description Given a gene expression file, run the ESTIMATE software package outputs {'estimate_file': 'The results file of the ESTIMATE software package'} Inputs Required _runtime (Any, required ) gene_expression_file (File, required ): A 2 column headered TSV file with 'Gene name' in the first column and gene expression values (as floats) in the second column. Can be generated with the calc_tpm task. Defaults disk_size_gb (Int, default=10): Disk space to allocate for task, specified in GB max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB outfile_name (String, default=basename(gene_expression_file,\".TPM.txt\") + \".ESTIMATE.gct\"): Name of the ESTIMATE output file Outputs estimate_file (File)","title":"Estimate"},{"location":"tasks/estimate/#calc_tpm","text":"description Given a gene counts file and a gene lengths file, calculate Transcripts Per Million (TPM) outputs {'tpm_file': 'Transcripts Per Million (TPM) file. A two column headered TSV file.'}","title":"calc_tpm"},{"location":"tasks/estimate/#inputs","text":"","title":"Inputs"},{"location":"tasks/estimate/#required","text":"_runtime (Any, required ) counts (File, required ): A two column headerless TSV file with gene names in the first column and counts (as integers) in the second column. Entries starting with '__' will be discarded. Can be generated with htseq.wdl . gene_lengths (File, required ): A two column headered TSV file with gene names (matching those in the counts file) in the first column and feature lengths (as integers) in the second column. Can be generated with calc-gene-lengths.wdl .","title":"Required"},{"location":"tasks/estimate/#defaults","text":"disk_size_gb (Int, default=10): Disk space to allocate for task, specified in GB max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB prefix (String, default=basename(counts,\".feature-counts.txt\")): Prefix for the TPM file. The extension .TPM.txt will be added.","title":"Defaults"},{"location":"tasks/estimate/#outputs","text":"tpm_file (File)","title":"Outputs"},{"location":"tasks/estimate/#run_estimate","text":"description Given a gene expression file, run the ESTIMATE software package outputs {'estimate_file': 'The results file of the ESTIMATE software package'}","title":"run_estimate"},{"location":"tasks/estimate/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/estimate/#required_1","text":"_runtime (Any, required ) gene_expression_file (File, required ): A 2 column headered TSV file with 'Gene name' in the first column and gene expression values (as floats) in the second column. Can be generated with the calc_tpm task.","title":"Required"},{"location":"tasks/estimate/#defaults_1","text":"disk_size_gb (Int, default=10): Disk space to allocate for task, specified in GB max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB outfile_name (String, default=basename(gene_expression_file,\".TPM.txt\") + \".ESTIMATE.gct\"): Name of the ESTIMATE output file","title":"Defaults"},{"location":"tasks/estimate/#outputs_1","text":"estimate_file (File)","title":"Outputs"},{"location":"tasks/fastqc/","text":"Homepage fastqc description Generates a FastQC quality control metrics report for the input BAM file outputs {'raw_data': 'A zip archive of raw FastQC data. Can be parsed by MultiQC.', 'results': 'A gzipped tar archive of all FastQC output files'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to run FastQC on Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=basename(bam,\".bam\") + \".fastqc_results\"): Prefix for the FastQC results directory. The extension .tar.gz will be added. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs raw_data (File) results (File)","title":"Fastqc"},{"location":"tasks/fastqc/#fastqc","text":"description Generates a FastQC quality control metrics report for the input BAM file outputs {'raw_data': 'A zip archive of raw FastQC data. Can be parsed by MultiQC.', 'results': 'A gzipped tar archive of all FastQC output files'}","title":"fastqc"},{"location":"tasks/fastqc/#inputs","text":"","title":"Inputs"},{"location":"tasks/fastqc/#required","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to run FastQC on","title":"Required"},{"location":"tasks/fastqc/#defaults","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=basename(bam,\".bam\") + \".fastqc_results\"): Prefix for the FastQC results directory. The extension .tar.gz will be added. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/fastqc/#outputs","text":"raw_data (File) results (File)","title":"Outputs"},{"location":"tasks/fq/","text":"Homepage fqlint description Performs quality control on the input FASTQs to ensure proper formatting outputs {'validated_read1': 'The unmodified input read one FASTQ after it has been successfully validated', 'validated_read2': 'The unmodified input read two FASTQ after it has been successfully validated'} Inputs Required _runtime (Any, required ) read_one_fastq (File, required ): Input FASTQ with read one. Can be gzipped or uncompressed. Optional read_two_fastq (File?): Input FASTQ with read two. Can be gzipped or uncompressed. Defaults disable_validator_codes (Array[String], default=[]); description : Array of codes to disable specific validators; choices : {'S001': \"Plus line starts with a '+'\", 'S002': \"All characters in sequence line are one of 'ACGTN', case-insensitive\", 'S003': \"Name line starts with an '@'\", 'S004': 'All four record lines (name, sequence, plus line, and quality) are present', 'S005': 'Sequence and quality lengths are the same', 'S006': \"All characters in quality line are between '!' and '~' (ordinal values)\", 'S007': 'All record names are unique', 'P001': 'Each paired read name is the same, excluding interleave'} max_retries (Int, default=1): Number of times to retry in case of failure modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by the size of the inputs. Specified in GB. paired_read_validation_level (String, default=\"high\"); description : Only use paired read validators up to a given level; choices : ['low', 'medium', 'high'] panic (Boolean, default=true): Panic on first error (true) or log all errors (false)? single_read_validation_level (String, default=\"high\"); description : Only use single read validators up to a given level; choices : ['low', 'medium', 'high'] Outputs validated_read1 (File) validated_read2 (File?) subsample description Subsamples the input FASTQ(s) outputs {'subsampled_read1': 'Gzipped FASTQ file containing subsampled read1', 'subsampled_read2': 'Gzipped FASTQ file containing subsampled read2'} Inputs Required _runtime (Any, required ) read_one_fastq (File, required ): Input FASTQ with read one. Can be gzipped or uncompressed. Optional read_two_fastq (File?): Input FASTQ with read two. Can be gzipped or uncompressed. Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=sub(basename(read_one_fastq),\"([_.][rR][12])?(.subsampled)?.(fastq|fq)(.gz)?$\",\"\")): Prefix for the output FASTQ file(s). The extension _R1.subsampled.fastq.gz and _R2.subsampled.fastq.gz will be added. probability (Float, default=1.0): The probability a record is kept, as a decimal (0.0, 1.0). Cannot be used with record-count . Any probability<=0.0 or probability>=1.0 to disable. record_count (Int, default=-1): The exact number of records to keep. Cannot be used with probability . Any record_count<=0 to disable. Outputs subsampled_read1 (File) subsampled_read2 (File?)","title":"Fq"},{"location":"tasks/fq/#fqlint","text":"description Performs quality control on the input FASTQs to ensure proper formatting outputs {'validated_read1': 'The unmodified input read one FASTQ after it has been successfully validated', 'validated_read2': 'The unmodified input read two FASTQ after it has been successfully validated'}","title":"fqlint"},{"location":"tasks/fq/#inputs","text":"","title":"Inputs"},{"location":"tasks/fq/#required","text":"_runtime (Any, required ) read_one_fastq (File, required ): Input FASTQ with read one. Can be gzipped or uncompressed.","title":"Required"},{"location":"tasks/fq/#optional","text":"read_two_fastq (File?): Input FASTQ with read two. Can be gzipped or uncompressed.","title":"Optional"},{"location":"tasks/fq/#defaults","text":"disable_validator_codes (Array[String], default=[]); description : Array of codes to disable specific validators; choices : {'S001': \"Plus line starts with a '+'\", 'S002': \"All characters in sequence line are one of 'ACGTN', case-insensitive\", 'S003': \"Name line starts with an '@'\", 'S004': 'All four record lines (name, sequence, plus line, and quality) are present', 'S005': 'Sequence and quality lengths are the same', 'S006': \"All characters in quality line are between '!' and '~' (ordinal values)\", 'S007': 'All record names are unique', 'P001': 'Each paired read name is the same, excluding interleave'} max_retries (Int, default=1): Number of times to retry in case of failure modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by the size of the inputs. Specified in GB. paired_read_validation_level (String, default=\"high\"); description : Only use paired read validators up to a given level; choices : ['low', 'medium', 'high'] panic (Boolean, default=true): Panic on first error (true) or log all errors (false)? single_read_validation_level (String, default=\"high\"); description : Only use single read validators up to a given level; choices : ['low', 'medium', 'high']","title":"Defaults"},{"location":"tasks/fq/#outputs","text":"validated_read1 (File) validated_read2 (File?)","title":"Outputs"},{"location":"tasks/fq/#subsample","text":"description Subsamples the input FASTQ(s) outputs {'subsampled_read1': 'Gzipped FASTQ file containing subsampled read1', 'subsampled_read2': 'Gzipped FASTQ file containing subsampled read2'}","title":"subsample"},{"location":"tasks/fq/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/fq/#required_1","text":"_runtime (Any, required ) read_one_fastq (File, required ): Input FASTQ with read one. Can be gzipped or uncompressed.","title":"Required"},{"location":"tasks/fq/#optional_1","text":"read_two_fastq (File?): Input FASTQ with read two. Can be gzipped or uncompressed.","title":"Optional"},{"location":"tasks/fq/#defaults_1","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=sub(basename(read_one_fastq),\"([_.][rR][12])?(.subsampled)?.(fastq|fq)(.gz)?$\",\"\")): Prefix for the output FASTQ file(s). The extension _R1.subsampled.fastq.gz and _R2.subsampled.fastq.gz will be added. probability (Float, default=1.0): The probability a record is kept, as a decimal (0.0, 1.0). Cannot be used with record-count . Any probability<=0.0 or probability>=1.0 to disable. record_count (Int, default=-1): The exact number of records to keep. Cannot be used with probability . Any record_count<=0 to disable.","title":"Defaults"},{"location":"tasks/fq/#outputs_1","text":"subsampled_read1 (File) subsampled_read2 (File?)","title":"Outputs"},{"location":"tasks/htseq/","text":"Homepage count description Performs read counting for a set of features in the input BAM file outputs {'feature_counts': 'A two column headerless TSV file. First column is feature names and second column is counts.'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to generate coverage for gtf (File, required ): Input genomic features in gzipped GTF format to count reads for strandedness (String, required ); description : Strandedness protocol of the RNA-Seq experiment; external_help : https://htseq.readthedocs.io/en/latest/htseqcount.html#cmdoption-htseq-count-s; choices : ['yes', 'reverse', 'no'] Defaults feature_type (String, default=\"exon\"): Feature type (3rd column in GTF file) to be used, all features of other type are ignored idattr (String, default=\"gene_name\"): GFF attribute to be used as feature ID max_retries (Int, default=1): Number of times to retry in case of failure minaqual (Int, default=10): Skip all reads with alignment quality lower than the given minimum value mode (String, default=\"union\"); description : Mode to handle reads overlapping more than one feature. union is recommended for most use-cases.; external_help : https://htseq.readthedocs.io/en/latest/htseqcount.html#htseq-count-counting-reads-within-features; choices : ['union', 'intersection-strict', 'intersection-nonempty'] modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by the size of the inputs. Specified in GB. nonunique (Boolean, default=false): Score reads that align to or are assigned to more than one feature? outfile_name (String, default=basename(bam,\".bam\") + \".feature-counts.txt\"): Name of the feature count file pos_sorted (Boolean, default=true): Is the BAM position sorted (true) or name sorted (false)? secondary_alignments (Boolean, default=false): Score secondary alignments (SAM flag 0x100)? supplementary_alignments (Boolean, default=false): Score supplementary/chimeric alignments (SAM flag 0x800)? Outputs feature_counts (File)","title":"Htseq"},{"location":"tasks/htseq/#count","text":"description Performs read counting for a set of features in the input BAM file outputs {'feature_counts': 'A two column headerless TSV file. First column is feature names and second column is counts.'}","title":"count"},{"location":"tasks/htseq/#inputs","text":"","title":"Inputs"},{"location":"tasks/htseq/#required","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to generate coverage for gtf (File, required ): Input genomic features in gzipped GTF format to count reads for strandedness (String, required ); description : Strandedness protocol of the RNA-Seq experiment; external_help : https://htseq.readthedocs.io/en/latest/htseqcount.html#cmdoption-htseq-count-s; choices : ['yes', 'reverse', 'no']","title":"Required"},{"location":"tasks/htseq/#defaults","text":"feature_type (String, default=\"exon\"): Feature type (3rd column in GTF file) to be used, all features of other type are ignored idattr (String, default=\"gene_name\"): GFF attribute to be used as feature ID max_retries (Int, default=1): Number of times to retry in case of failure minaqual (Int, default=10): Skip all reads with alignment quality lower than the given minimum value mode (String, default=\"union\"); description : Mode to handle reads overlapping more than one feature. union is recommended for most use-cases.; external_help : https://htseq.readthedocs.io/en/latest/htseqcount.html#htseq-count-counting-reads-within-features; choices : ['union', 'intersection-strict', 'intersection-nonempty'] modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by the size of the inputs. Specified in GB. nonunique (Boolean, default=false): Score reads that align to or are assigned to more than one feature? outfile_name (String, default=basename(bam,\".bam\") + \".feature-counts.txt\"): Name of the feature count file pos_sorted (Boolean, default=true): Is the BAM position sorted (true) or name sorted (false)? secondary_alignments (Boolean, default=false): Score secondary alignments (SAM flag 0x100)? supplementary_alignments (Boolean, default=false): Score supplementary/chimeric alignments (SAM flag 0x800)?","title":"Defaults"},{"location":"tasks/htseq/#outputs","text":"feature_counts (File)","title":"Outputs"},{"location":"tasks/kraken2/","text":"Homepage download_taxonomy description Downloads the NCBI taxonomy which Kraken2 uses to create a tree and taxon map during the database build outputs {'taxonomy': 'The NCBI taxonomy, which is needed by the build_db task. This output is not human-readable or meant for anything other than building a Kraken2 database.'} Inputs Required _runtime (Any, required ) Defaults disk_size_gb (Int, default=60): Disk space to allocate for task max_retries (Int, default=3): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task protein (Boolean, default=false): Construct a protein database? Outputs taxonomy (File) download_library description Downloads a predefined library of reference genomes from NCBI. Detailed organism list for libraries (except nt) available here outputs {'library': 'A library of reference genomes, which is needed by the build_db task. This output is not human-readable or meant for anything other than building a Kraken2 database.'} Inputs Required _runtime (Any, required ) library_name (String, required ); description : Library to download. Note that protein must equal true if downloading the nr library, and protein must equal false if downloading the UniVec or UniVec_Core library.; choices : ['archaea', 'bacteria', 'plasmid', 'viral', 'human', 'fungi', 'plant', 'protozoa', 'nt', 'nr', 'UniVec', 'UniVec_Core'] Defaults max_retries (Int, default=3): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation, specified in GB. Default disk size is determined dynamically based on library_name . Note that the default sizes are adequate as of April 2023, but new genomes are constantly being added to the NCBI database. More disk space may be required depending on when in the future this task is run. protein (Boolean, default=false): Construct a protein database? Outputs library (File) create_library_from_fastas description Adds custom entries from FASTA files to a Kraken2 DB outputs {'custom_library': 'Kraken2 compatible library, which is needed by the build_db task. This output is not human-readable or meant for anything other than building a Kraken2 database.'} Inputs Required _runtime (Any, required ) fastas_gz (Array[File], required ): Array of gzipped FASTA files. Each FASTA sequence ID must contain either an NCBI accession number or an explicit assignment of the taxonomy ID using kraken:taxid Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. protein (Boolean, default=false): Construct a protein database? Outputs custom_library (File) build_db description Builds a custom Kraken2 database outputs {'built_db': 'A complete Kraken2 database'} Inputs Required _runtime (Any, required ) tarballs (Array[File], required ): Tarballs containing the NCBI taxonomy (generated by the download_taxonomy task) and at least one library (generated by the download_library or create_library_from_fastas task). Tarballs must not have a root directory. Defaults db_name (String, default=\"kraken2_db\"): Name for output in compressed, archived format. The suffix .tar.gz will be added. kmer_len (Int, default=if protein then 15 else 35): K-mer length in bp that will be used to build the database max_db_size_gb (Int, default=-1): Maximum number of GBs for Kraken 2 hash table; if the Kraken 2 estimator determines more would normally be needed, the reference library will be downsampled to fit. max_retries (Int, default=1): Number of times to retry in case of failure minimizer_len (Int, default=if protein then 12 else 31): Minimizer length in bp that will be used to build the database minimizer_spaces (Int, default=if protein then 0 else 7): Number of characters in minimizer that are ignored in comparisons modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task protein (Boolean, default=false): Construct a protein database? use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs built_db (File) kraken description Runs Kraken2 on a pair of fastq files outputs {'report': {'description': 'A Kraken2 summary report', 'external_help': 'https://github.com/DerrickWood/kraken2/blob/master/docs/MANUAL.markdown#sample-report-output-format'}, 'sequences': {'description': 'Detailed Kraken2 output that has been gzipped', 'external_help': 'https://github.com/DerrickWood/kraken2/blob/master/docs/MANUAL.markdown#standard-kraken-output-format'}} Inputs Required _runtime (Any, required ) db (File, required ): Kraken2 database. Can be generated with make-qc-reference.wdl . Must be a tarball without a root directory. read_one_fastq_gz (File, required ): Gzipped FASTQ file with 1st reads in pair read_two_fastq_gz (File, required ): Gzipped FASTQ file with 2nd reads in pair Defaults max_retries (Int, default=1): Number of times to retry in case of failure min_base_quality (Int, default=0): Minimum base quality used in classification modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=sub(basename(read_one_fastq_gz),\"([_.][rR][12])?(.subsampled)?.(fastq|fq)(.gz)?$\",\"\")): Prefix for the Kraken2 output files. The extensions .kraken2.txt and .kraken2.sequences.txt.gz will be added. store_sequences (Boolean, default=false): Store and output main Kraken2 output in addition to the summary report? use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. use_names (Boolean, default=true): Print scientific names instead of just taxids? Outputs report (File) sequences (File?)","title":"Kraken2"},{"location":"tasks/kraken2/#download_taxonomy","text":"description Downloads the NCBI taxonomy which Kraken2 uses to create a tree and taxon map during the database build outputs {'taxonomy': 'The NCBI taxonomy, which is needed by the build_db task. This output is not human-readable or meant for anything other than building a Kraken2 database.'}","title":"download_taxonomy"},{"location":"tasks/kraken2/#inputs","text":"","title":"Inputs"},{"location":"tasks/kraken2/#required","text":"_runtime (Any, required )","title":"Required"},{"location":"tasks/kraken2/#defaults","text":"disk_size_gb (Int, default=60): Disk space to allocate for task max_retries (Int, default=3): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task protein (Boolean, default=false): Construct a protein database?","title":"Defaults"},{"location":"tasks/kraken2/#outputs","text":"taxonomy (File)","title":"Outputs"},{"location":"tasks/kraken2/#download_library","text":"description Downloads a predefined library of reference genomes from NCBI. Detailed organism list for libraries (except nt) available here outputs {'library': 'A library of reference genomes, which is needed by the build_db task. This output is not human-readable or meant for anything other than building a Kraken2 database.'}","title":"download_library"},{"location":"tasks/kraken2/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/kraken2/#required_1","text":"_runtime (Any, required ) library_name (String, required ); description : Library to download. Note that protein must equal true if downloading the nr library, and protein must equal false if downloading the UniVec or UniVec_Core library.; choices : ['archaea', 'bacteria', 'plasmid', 'viral', 'human', 'fungi', 'plant', 'protozoa', 'nt', 'nr', 'UniVec', 'UniVec_Core']","title":"Required"},{"location":"tasks/kraken2/#defaults_1","text":"max_retries (Int, default=3): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation, specified in GB. Default disk size is determined dynamically based on library_name . Note that the default sizes are adequate as of April 2023, but new genomes are constantly being added to the NCBI database. More disk space may be required depending on when in the future this task is run. protein (Boolean, default=false): Construct a protein database?","title":"Defaults"},{"location":"tasks/kraken2/#outputs_1","text":"library (File)","title":"Outputs"},{"location":"tasks/kraken2/#create_library_from_fastas","text":"description Adds custom entries from FASTA files to a Kraken2 DB outputs {'custom_library': 'Kraken2 compatible library, which is needed by the build_db task. This output is not human-readable or meant for anything other than building a Kraken2 database.'}","title":"create_library_from_fastas"},{"location":"tasks/kraken2/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/kraken2/#required_2","text":"_runtime (Any, required ) fastas_gz (Array[File], required ): Array of gzipped FASTA files. Each FASTA sequence ID must contain either an NCBI accession number or an explicit assignment of the taxonomy ID using kraken:taxid","title":"Required"},{"location":"tasks/kraken2/#defaults_2","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. protein (Boolean, default=false): Construct a protein database?","title":"Defaults"},{"location":"tasks/kraken2/#outputs_2","text":"custom_library (File)","title":"Outputs"},{"location":"tasks/kraken2/#build_db","text":"description Builds a custom Kraken2 database outputs {'built_db': 'A complete Kraken2 database'}","title":"build_db"},{"location":"tasks/kraken2/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/kraken2/#required_3","text":"_runtime (Any, required ) tarballs (Array[File], required ): Tarballs containing the NCBI taxonomy (generated by the download_taxonomy task) and at least one library (generated by the download_library or create_library_from_fastas task). Tarballs must not have a root directory.","title":"Required"},{"location":"tasks/kraken2/#defaults_3","text":"db_name (String, default=\"kraken2_db\"): Name for output in compressed, archived format. The suffix .tar.gz will be added. kmer_len (Int, default=if protein then 15 else 35): K-mer length in bp that will be used to build the database max_db_size_gb (Int, default=-1): Maximum number of GBs for Kraken 2 hash table; if the Kraken 2 estimator determines more would normally be needed, the reference library will be downsampled to fit. max_retries (Int, default=1): Number of times to retry in case of failure minimizer_len (Int, default=if protein then 12 else 31): Minimizer length in bp that will be used to build the database minimizer_spaces (Int, default=if protein then 0 else 7): Number of characters in minimizer that are ignored in comparisons modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task protein (Boolean, default=false): Construct a protein database? use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/kraken2/#outputs_3","text":"built_db (File)","title":"Outputs"},{"location":"tasks/kraken2/#kraken","text":"description Runs Kraken2 on a pair of fastq files outputs {'report': {'description': 'A Kraken2 summary report', 'external_help': 'https://github.com/DerrickWood/kraken2/blob/master/docs/MANUAL.markdown#sample-report-output-format'}, 'sequences': {'description': 'Detailed Kraken2 output that has been gzipped', 'external_help': 'https://github.com/DerrickWood/kraken2/blob/master/docs/MANUAL.markdown#standard-kraken-output-format'}}","title":"kraken"},{"location":"tasks/kraken2/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/kraken2/#required_4","text":"_runtime (Any, required ) db (File, required ): Kraken2 database. Can be generated with make-qc-reference.wdl . Must be a tarball without a root directory. read_one_fastq_gz (File, required ): Gzipped FASTQ file with 1st reads in pair read_two_fastq_gz (File, required ): Gzipped FASTQ file with 2nd reads in pair","title":"Required"},{"location":"tasks/kraken2/#defaults_4","text":"max_retries (Int, default=1): Number of times to retry in case of failure min_base_quality (Int, default=0): Minimum base quality used in classification modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=sub(basename(read_one_fastq_gz),\"([_.][rR][12])?(.subsampled)?.(fastq|fq)(.gz)?$\",\"\")): Prefix for the Kraken2 output files. The extensions .kraken2.txt and .kraken2.sequences.txt.gz will be added. store_sequences (Boolean, default=false): Store and output main Kraken2 output in addition to the summary report? use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. use_names (Boolean, default=true): Print scientific names instead of just taxids?","title":"Defaults"},{"location":"tasks/kraken2/#outputs_4","text":"report (File) sequences (File?)","title":"Outputs"},{"location":"tasks/md5sum/","text":"Homepage compute_checksum description Generates an MD5 checksum for the input file outputs {'md5sum': 'STDOUT of the md5sum command that has been redirected to a file'} Inputs Required _runtime (Any, required ) file (File, required ): Input file to generate MD5 checksum for Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. Outputs md5sum (File)","title":"Md5sum"},{"location":"tasks/md5sum/#compute_checksum","text":"description Generates an MD5 checksum for the input file outputs {'md5sum': 'STDOUT of the md5sum command that has been redirected to a file'}","title":"compute_checksum"},{"location":"tasks/md5sum/#inputs","text":"","title":"Inputs"},{"location":"tasks/md5sum/#required","text":"_runtime (Any, required ) file (File, required ): Input file to generate MD5 checksum for","title":"Required"},{"location":"tasks/md5sum/#defaults","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB.","title":"Defaults"},{"location":"tasks/md5sum/#outputs","text":"md5sum (File)","title":"Outputs"},{"location":"tasks/mosdepth/","text":"Homepage coverage description Runs the Mosdepth tool for calculating coverage outputs {'summary': 'A summary of mean depths per chromosome and within specified regions per chromosome', 'global_dist': 'The $prefix.mosdepth.global.dist.txt file contains a cumulative distribution indicating the proportion of total bases that were covered for at least a given coverage value. It does this for each chromosome, and for the whole genome.', 'region_dist': 'The $prefix.mosdepth.region.dist.txt file contains a cumulative distribution indicating the proportion of total bases in the region(s) defined by coverage_bed that were covered for at least a given coverage value'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to calculate coverage for bam_index (File, required ): BAM index file corresponding to the input BAM Optional coverage_bed (File?): BED file to pass to the -b flag of mosdepth . This will restrict coverage analysis to regions defined by the BED file. Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=8): RAM to allocate for task, specified in GB min_mapping_quality (Int, default=20): Minimum mapping quality to pass to the -Q flag of mosdepth modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,'.bam')): Prefix for the mosdepth report files. The extensions .mosdepth.summary.txt , .mosdepth.global.dist.txt and .mosdepth.region.dist.txt will be added. use_fast_mode (Boolean, default=true): Use Mosdepth's 'fast mode'? This enables the -x flag. Outputs summary (File) global_dist (File) region_dist (File?)","title":"Mosdepth"},{"location":"tasks/mosdepth/#coverage","text":"description Runs the Mosdepth tool for calculating coverage outputs {'summary': 'A summary of mean depths per chromosome and within specified regions per chromosome', 'global_dist': 'The $prefix.mosdepth.global.dist.txt file contains a cumulative distribution indicating the proportion of total bases that were covered for at least a given coverage value. It does this for each chromosome, and for the whole genome.', 'region_dist': 'The $prefix.mosdepth.region.dist.txt file contains a cumulative distribution indicating the proportion of total bases in the region(s) defined by coverage_bed that were covered for at least a given coverage value'}","title":"coverage"},{"location":"tasks/mosdepth/#inputs","text":"","title":"Inputs"},{"location":"tasks/mosdepth/#required","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to calculate coverage for bam_index (File, required ): BAM index file corresponding to the input BAM","title":"Required"},{"location":"tasks/mosdepth/#optional","text":"coverage_bed (File?): BED file to pass to the -b flag of mosdepth . This will restrict coverage analysis to regions defined by the BED file.","title":"Optional"},{"location":"tasks/mosdepth/#defaults","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=8): RAM to allocate for task, specified in GB min_mapping_quality (Int, default=20): Minimum mapping quality to pass to the -Q flag of mosdepth modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,'.bam')): Prefix for the mosdepth report files. The extensions .mosdepth.summary.txt , .mosdepth.global.dist.txt and .mosdepth.region.dist.txt will be added. use_fast_mode (Boolean, default=true): Use Mosdepth's 'fast mode'? This enables the -x flag.","title":"Defaults"},{"location":"tasks/mosdepth/#outputs","text":"summary (File) global_dist (File) region_dist (File?)","title":"Outputs"},{"location":"tasks/multiqc/","text":"Homepage multiqc description Generates a MultiQC quality control metrics report summary from input QC result files outputs {'multiqc_report': 'A gzipped tar archive of all MultiQC output files'} Inputs Required _runtime (Any, required ) input_files (Array[File], required ): An array of files for MultiQC to compile into a report. Invalid files will be gracefully ignored by MultiQC. prefix (String, required ): A string for the MultiQC output directory: / and .tar.gz Optional config (File?): YAML file for configuring generated report Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. Outputs multiqc_report (File)","title":"Multiqc"},{"location":"tasks/multiqc/#multiqc","text":"description Generates a MultiQC quality control metrics report summary from input QC result files outputs {'multiqc_report': 'A gzipped tar archive of all MultiQC output files'}","title":"multiqc"},{"location":"tasks/multiqc/#inputs","text":"","title":"Inputs"},{"location":"tasks/multiqc/#required","text":"_runtime (Any, required ) input_files (Array[File], required ): An array of files for MultiQC to compile into a report. Invalid files will be gracefully ignored by MultiQC. prefix (String, required ): A string for the MultiQC output directory: / and .tar.gz","title":"Required"},{"location":"tasks/multiqc/#optional","text":"config (File?): YAML file for configuring generated report","title":"Optional"},{"location":"tasks/multiqc/#defaults","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB.","title":"Defaults"},{"location":"tasks/multiqc/#outputs","text":"multiqc_report (File)","title":"Outputs"},{"location":"tasks/ngsderive/","text":"Homepage strandedness description Derives the experimental strandedness protocol used to generate the input RNA-Seq BAM file. Reports evidence supporting final results. outputs {'strandedness_file': 'TSV file containing the ngsderive strandedness report', 'strandedness': 'The derived strandedness, in string format'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to derive strandedness for bam_index (File, required ): BAM index file corresponding to the input BAM gene_model (File, required ): Gene model as a GFF/GTF file Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB min_mapq (Int, default=30): Minimum MAPQ to consider for supporting reads min_reads_per_gene (Int, default=10): Filter any genes that don't have at least min_reads_per_gene reads mapping to them modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. num_genes (Int, default=1000): How many genes to sample outfile_name (String, default=basename(bam,\".bam\") + \".strandedness.tsv\"): Name for the strandedness TSV file split_by_rg (Boolean, default=false): Contain one entry in the output TSV per read group, in addition to an overall entry Outputs strandedness (String) strandedness_file (File) instrument description Derives the instrument used to sequence the input BAM file. Reports evidence supporting final results. outputs {'instrument_file': 'TSV file containing the ngsderive isntrument report for the input BAM file'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to derive instrument for Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. num_reads (Int, default=10000): How many reads to analyze from the start of the file. Any n < 1 to parse whole file. outfile_name (String, default=basename(bam,\".bam\") + \".instrument.tsv\"): Name for the instrument TSV file Outputs instrument_file (File) read_length description Derives the original experimental read length of the input BAM. Reports evidence supporting final results. outputs {'read_length_file': 'TSV file containing the ngsderive readlen report for the input BAM file'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to derive read length for bam_index (File, required ) Defaults majority_vote_cutoff (Float, default=0.7): To call a majority readlen, the maximum read length must have at least majority-vote-cutoff % reads in support max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. num_reads (Int, default=-1): How many reads to analyze from the start of the file. Any n < 1 to parse whole file. outfile_name (String, default=basename(bam,\".bam\") + \".readlength.tsv\"): Name for the readlen TSV file Outputs read_length_file (File) encoding description Derives the encoding of the input NGS file(s). Reports evidence supporting final results. outputs {'encoding_file': 'TSV file containing the ngsderive encoding report for all input files', 'inferred_encoding': 'The most permissive encoding found among the input files, in string format'} Inputs Required _runtime (Any, required ) ngs_files (Array[File], required ): An array of FASTQs and/or BAMs for which to derive encoding outfile_name (String, required ): Name for the encoding TSV file Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. num_reads (Int, default=1000000): How many reads to analyze from the start of the file(s). Any n < 1 to parse whole file(s). Outputs inferred_encoding (String) encoding_file (File) junction_annotation description Annotates junctions found in an RNA-Seq BAM as known, novel, or partially novel external_help https://stjudecloud.github.io/ngsderive/subcommands/junction_annotation/ outputs {'junction_summary': 'TSV file containing the ngsderive junction-annotation summary', 'junctions': 'TSV file containing a detailed list of annotated junctions'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to annotate junctions for bam_index (File, required ): BAM index file corresponding to the input BAM gene_model (File, required ): Gene model as a GFF/GTF file Defaults fuzzy_junction_match_range (Int, default=0): Consider found splices within +-k bases of a known splice event annotated max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=56): RAM to allocate for task, specified in GB min_intron (Int, default=50): Minimum size of intron to be considered a splice min_mapq (Int, default=30): Minimum MAPQ to consider for supporting reads min_reads (Int, default=2): Filter any junctions that don't have at least min_reads reads supporting them modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\")): Prefix for the summary TSV and junction files. The extensions .junction_summary.tsv and .junctions.tsv will be added. Outputs junction_summary (File) junctions (File) endedness description Derives the endedness of the input BAM file. Reports evidence for final result. outputs {'endedness_file': 'TSV file containing the ngsderive endedness report'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to derive endedness from Defaults calc_rpt (Boolean, default=false): Calculate and output Reads-Per-Template. This will produce a more sophisticated estimate for endedness, but uses substantially more memory (can reach up to 200% of BAM size in memory consumption for some inputs). lenient (Boolean, default=false): Return a zero exit code on unknown results max_retries (Int, default=1): Number of times to retry in case of failure modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by value of calc_rpt and the size of the input. Specified in GB. num_reads (Int, default=-1): How many reads to analyze from the start of the file. Any n < 1 to parse whole file. outfile_name (String, default=basename(bam,\".bam\") + \".endedness.tsv\"): Name for the endedness TSV file paired_deviance (Float, default=0.0): Distance from 0.5 split between number of f+l- reads and f-l+ reads allowed to be called 'Paired-End'. Default of 0.0 only appropriate if the whole file is being processed. round_rpt (Boolean, default=false): Round RPT to the nearest INT before comparing to expected values. Appropriate if using --num-reads > 0. split_by_rg (Boolean, default=false): Contain one entry per read group Outputs endedness_file (File)","title":"Ngsderive"},{"location":"tasks/ngsderive/#strandedness","text":"description Derives the experimental strandedness protocol used to generate the input RNA-Seq BAM file. Reports evidence supporting final results. outputs {'strandedness_file': 'TSV file containing the ngsderive strandedness report', 'strandedness': 'The derived strandedness, in string format'}","title":"strandedness"},{"location":"tasks/ngsderive/#inputs","text":"","title":"Inputs"},{"location":"tasks/ngsderive/#required","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to derive strandedness for bam_index (File, required ): BAM index file corresponding to the input BAM gene_model (File, required ): Gene model as a GFF/GTF file","title":"Required"},{"location":"tasks/ngsderive/#defaults","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB min_mapq (Int, default=30): Minimum MAPQ to consider for supporting reads min_reads_per_gene (Int, default=10): Filter any genes that don't have at least min_reads_per_gene reads mapping to them modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. num_genes (Int, default=1000): How many genes to sample outfile_name (String, default=basename(bam,\".bam\") + \".strandedness.tsv\"): Name for the strandedness TSV file split_by_rg (Boolean, default=false): Contain one entry in the output TSV per read group, in addition to an overall entry","title":"Defaults"},{"location":"tasks/ngsderive/#outputs","text":"strandedness (String) strandedness_file (File)","title":"Outputs"},{"location":"tasks/ngsderive/#instrument","text":"description Derives the instrument used to sequence the input BAM file. Reports evidence supporting final results. outputs {'instrument_file': 'TSV file containing the ngsderive isntrument report for the input BAM file'}","title":"instrument"},{"location":"tasks/ngsderive/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/ngsderive/#required_1","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to derive instrument for","title":"Required"},{"location":"tasks/ngsderive/#defaults_1","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. num_reads (Int, default=10000): How many reads to analyze from the start of the file. Any n < 1 to parse whole file. outfile_name (String, default=basename(bam,\".bam\") + \".instrument.tsv\"): Name for the instrument TSV file","title":"Defaults"},{"location":"tasks/ngsderive/#outputs_1","text":"instrument_file (File)","title":"Outputs"},{"location":"tasks/ngsderive/#read_length","text":"description Derives the original experimental read length of the input BAM. Reports evidence supporting final results. outputs {'read_length_file': 'TSV file containing the ngsderive readlen report for the input BAM file'}","title":"read_length"},{"location":"tasks/ngsderive/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/ngsderive/#required_2","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to derive read length for bam_index (File, required )","title":"Required"},{"location":"tasks/ngsderive/#defaults_2","text":"majority_vote_cutoff (Float, default=0.7): To call a majority readlen, the maximum read length must have at least majority-vote-cutoff % reads in support max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. num_reads (Int, default=-1): How many reads to analyze from the start of the file. Any n < 1 to parse whole file. outfile_name (String, default=basename(bam,\".bam\") + \".readlength.tsv\"): Name for the readlen TSV file","title":"Defaults"},{"location":"tasks/ngsderive/#outputs_2","text":"read_length_file (File)","title":"Outputs"},{"location":"tasks/ngsderive/#encoding","text":"description Derives the encoding of the input NGS file(s). Reports evidence supporting final results. outputs {'encoding_file': 'TSV file containing the ngsderive encoding report for all input files', 'inferred_encoding': 'The most permissive encoding found among the input files, in string format'}","title":"encoding"},{"location":"tasks/ngsderive/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/ngsderive/#required_3","text":"_runtime (Any, required ) ngs_files (Array[File], required ): An array of FASTQs and/or BAMs for which to derive encoding outfile_name (String, required ): Name for the encoding TSV file","title":"Required"},{"location":"tasks/ngsderive/#defaults_3","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. num_reads (Int, default=1000000): How many reads to analyze from the start of the file(s). Any n < 1 to parse whole file(s).","title":"Defaults"},{"location":"tasks/ngsderive/#outputs_3","text":"inferred_encoding (String) encoding_file (File)","title":"Outputs"},{"location":"tasks/ngsderive/#junction_annotation","text":"description Annotates junctions found in an RNA-Seq BAM as known, novel, or partially novel external_help https://stjudecloud.github.io/ngsderive/subcommands/junction_annotation/ outputs {'junction_summary': 'TSV file containing the ngsderive junction-annotation summary', 'junctions': 'TSV file containing a detailed list of annotated junctions'}","title":"junction_annotation"},{"location":"tasks/ngsderive/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/ngsderive/#required_4","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to annotate junctions for bam_index (File, required ): BAM index file corresponding to the input BAM gene_model (File, required ): Gene model as a GFF/GTF file","title":"Required"},{"location":"tasks/ngsderive/#defaults_4","text":"fuzzy_junction_match_range (Int, default=0): Consider found splices within +-k bases of a known splice event annotated max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=56): RAM to allocate for task, specified in GB min_intron (Int, default=50): Minimum size of intron to be considered a splice min_mapq (Int, default=30): Minimum MAPQ to consider for supporting reads min_reads (Int, default=2): Filter any junctions that don't have at least min_reads reads supporting them modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\")): Prefix for the summary TSV and junction files. The extensions .junction_summary.tsv and .junctions.tsv will be added.","title":"Defaults"},{"location":"tasks/ngsderive/#outputs_4","text":"junction_summary (File) junctions (File)","title":"Outputs"},{"location":"tasks/ngsderive/#endedness","text":"description Derives the endedness of the input BAM file. Reports evidence for final result. outputs {'endedness_file': 'TSV file containing the ngsderive endedness report'}","title":"endedness"},{"location":"tasks/ngsderive/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/ngsderive/#required_5","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to derive endedness from","title":"Required"},{"location":"tasks/ngsderive/#defaults_5","text":"calc_rpt (Boolean, default=false): Calculate and output Reads-Per-Template. This will produce a more sophisticated estimate for endedness, but uses substantially more memory (can reach up to 200% of BAM size in memory consumption for some inputs). lenient (Boolean, default=false): Return a zero exit code on unknown results max_retries (Int, default=1): Number of times to retry in case of failure modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by value of calc_rpt and the size of the input. Specified in GB. num_reads (Int, default=-1): How many reads to analyze from the start of the file. Any n < 1 to parse whole file. outfile_name (String, default=basename(bam,\".bam\") + \".endedness.tsv\"): Name for the endedness TSV file paired_deviance (Float, default=0.0): Distance from 0.5 split between number of f+l- reads and f-l+ reads allowed to be called 'Paired-End'. Default of 0.0 only appropriate if the whole file is being processed. round_rpt (Boolean, default=false): Round RPT to the nearest INT before comparing to expected values. Appropriate if using --num-reads > 0. split_by_rg (Boolean, default=false): Contain one entry per read group","title":"Defaults"},{"location":"tasks/ngsderive/#outputs_5","text":"endedness_file (File)","title":"Outputs"},{"location":"tasks/picard/","text":"Homepage mark_duplicates description Marks duplicate reads in the input BAM file using Picard external_help https://gatk.broadinstitute.org/hc/en-us/articles/360037052812-MarkDuplicates-Picard- outputs {'duplicate_marked_bam': 'The input BAM with computationally determined duplicates marked.', 'duplicate_marked_bam_index': 'The .bai BAM index file associated with duplicate_marked_bam ', 'duplicate_marked_bam_md5': 'The md5sum of duplicate_marked_bam ', 'mark_duplicates_metrics': {'description': 'The METRICS_FILE result of picard MarkDuplicates ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#DuplicationMetrics'}} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file in which to mark duplicates Defaults create_bam (Boolean, default=true): Enable BAM creation (true)? Or only output MarkDuplicates metrics (false)? max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=50): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".MarkDuplicates\"): Prefix for the MarkDuplicates result files. The extensions .bam , .bam.bai , .bam.md5 , and .metrics.txt will be added. Outputs duplicate_marked_bam (File?) duplicate_marked_bam_index (File?) duplicate_marked_bam_md5 (File?) mark_duplicates_metrics (File) validate_bam description Validates the input BAM file for correct formatting using Picard external_help https://gatk.broadinstitute.org/hc/en-us/articles/360057440611-ValidateSamFile-Picard- outputs {'validate_report': 'Validation report produced by picard ValidateSamFile . Validation warnings and errors are logged.', 'validated_bam': 'The unmodified input BAM after it has been succesfully validated'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to validate Optional reference_fasta (File?): Reference genome in FASTA format. Presence of the reference FASTA allows for NM tag validation. Defaults ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]); description : List of Picard errors and warnings to ignore. Possible values can be found on the GATK website (see external_help ).; external_help : https://gatk.broadinstitute.org/hc/en-us/articles/360035891231-Errors-in-SAM-or-BAM-files-can-be-diagnosed-with-ValidateSamFile index_validation_stringency_less_exhaustive (Boolean, default=false): Set INDEX_VALIDATION_STRINGENCY=LESS_EXHAUSTIVE ? max_errors (Int, default=2147483647): Set the value of MAX_OUTPUT for picard ValidateSamFile . The Picard default is 100, a lower number can enable fast fail behavior max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=16): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\"): Name for the ValidateSamFile report file succeed_on_errors (Boolean, default=false): Succeed the task even if errors and/or warnings are detected succeed_on_warnings (Boolean, default=true): Succeed the task if warnings are detected and there are no errors. Overridden by succeed_on_errors summary_mode (Boolean, default=false): Enable SUMMARY mode? Outputs validate_report (File) validated_bam (File) sort description Sorts the input BAM file external_help https://gatk.broadinstitute.org/hc/en-us/articles/360036510732-SortSam-Picard- outputs {'sorted_bam': 'The input BAM after it has been sorted according to sort_order ', 'sorted_bam_index': 'The .bai BAM index file associated with sorted_bam ', 'sorted_bam_md5': 'The md5sum of sorted_bam '} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to sort Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=25): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".sorted\"): Prefix for the sorted BAM file and accessory files. The extensions .bam , .bam.bai , and .bam.md5 will be added. sort_order (String, default=\"coordinate\"); description : Order by which to sort the input BAM; choices : ['queryname', 'coordinate', 'duplicate'] Outputs sorted_bam (File) sorted_bam_index (File) sorted_bam_md5 (File) merge_sam_files description Merges the input BAM files into a single BAM file. All input BAMs are assumed to be sorted according to sort_order . external_help https://gatk.broadinstitute.org/hc/en-us/articles/360057440751-MergeSamFiles-Picard- outputs {'merged_bam': 'The BAM resulting from merging all the input BAMs', 'merged_bam_index': 'The .bai BAM index file associated with merged_bam ', 'merged_bam_md5': 'The md5sum of merged_bam '} Inputs Required _runtime (Any, required ) bams (Array[File], required ): Input BAMs to merge. All BAMs are assumed to be sorted according to sort_order . prefix (String, required ): Prefix for the merged BAM file and accessory files. The extensions .bam , .bam.bai , and .bam.md5 will be added. Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=40): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. sort_order (String, default=\"coordinate\"); description : Sort order for the output merged BAM. It is assumed all input BAMs share this order.; choices : ['unsorted', 'queryname', 'coordinate', 'duplicate', 'unknown'] threading (Boolean, default=true): Option to create a background thread to encode, compress and write to disk the output file. The threaded version uses about 20% more CPU and decreases runtime by ~20% when writing out a compressed BAM file. Outputs merged_bam (File) merged_bam_index (File) merged_bam_md5 (File) clean_sam description Cleans the input BAM file. Cleans soft-clipping beyond end-of-reference, sets MAPQ=0 for unmapped reads. external_help https://gatk.broadinstitute.org/hc/en-us/articles/360036885571-CleanSam-Picard- outputs {'cleaned_bam': 'A cleaned version of the input BAM', 'cleaned_bam_index': 'The .bai BAM index file associated with cleaned_bam ', 'cleaned_bam_md5': 'The md5sum of cleaned_bam '} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to clean Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=25): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".cleaned\"): Prefix for the cleaned BAM file and accessory files. The extensions .bam , .bam.bai , and .bam.md5 will be added. Outputs cleaned_bam (File) cleaned_bam_index (File) cleaned_bam_md5 (File) collect_wgs_metrics description Runs picard CollectWgsMetrics to collect metrics about the fractions of reads that pass base- and mapping-quality filters as well as coverage (read-depth) levels external_help https://gatk.broadinstitute.org/hc/en-us/articles/360037226132-CollectWgsMetrics-Picard- outputs {'wgs_metrics': {'description': 'Output report of picard CollectWgsMetrics ', 'external_help': 'https://broadinstitute.github.io/picard/picard-metric-definitions.html#CollectWgsMetrics.WgsMetrics'}} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file for which to calculate WGS metrics reference_fasta (File, required ): Gzipped reference genome in FASTA format Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=12): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. outfile_name (String, default=basename(bam,\".bam\") + \".CollectWgsMetrics.txt\"): Name for the metrics result file Outputs wgs_metrics (File) collect_alignment_summary_metrics description Runs picard CollectAlignmentSummaryMetrics to calculate metrics detailing the quality of the read alignments as well as the proportion of the reads that passed machine signal-to-noise threshold quality filters external_help https://gatk.broadinstitute.org/hc/en-us/articles/360040507751-CollectAlignmentSummaryMetrics-Picard- outputs {'alignment_metrics': {'description': 'The text file output of CollectAlignmentSummaryMetrics ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#AlignmentSummaryMetrics'}, 'alignment_metrics_pdf': 'The PDF file output of CollectAlignmentSummaryMetrics '} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file for which to calculate alignment metrics Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=8): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".CollectAlignmentSummaryMetrics\"): Prefix for the output report files. The extensions .txt and .pdf will be added. Outputs alignment_metrics (File) alignment_metrics_pdf (File) collect_gc_bias_metrics description Runs picard CollectGcBiasMetrics to collect information about the relative proportions of guanine (G) and cytosine (C) nucleotides external_help https://gatk.broadinstitute.org/hc/en-us/articles/360037593931-CollectGcBiasMetrics-Picard- outputs {'gc_bias_metrics': {'description': 'The full text file output of CollectGcBiasMetrics ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#GcBiasDetailMetrics'}, 'gc_bias_metrics_summary': {'description': 'The summary text file output of CollectGcBiasMetrics ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#GcBiasSummaryMetrics'}, 'gc_bias_metrics_pdf': 'The PDF file output of CollectGcBiasMetrics '} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file for which to calculate GC bias metrics reference_fasta (File, required ): Reference sequences in FASTA format Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=8): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".CollectGcBiasMetrics\"): Prefix for the output report files. The extensions .txt , .summary.txt , and .pdf will be added. Outputs gc_bias_metrics (File) gc_bias_metrics_summary (File) gc_bias_metrics_pdf (File) collect_insert_size_metrics description Runs picard CollectInsertSizeMetrics to collect metrics for validating library construction including the insert size distribution and read orientation of paired-end libraries external_help https://gatk.broadinstitute.org/hc/en-us/articles/360037055772-CollectInsertSizeMetrics-Picard- outputs {'insert_size_metrics': {'description': 'The text file output of CollectInsertSizeMetrics ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#InsertSizeMetrics'}, 'insert_size_metrics_pdf': 'The PDF file output of CollectInsertSizeMetrics '} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file for which to calculate insert size metrics Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=8): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".CollectInsertSizeMetrics\"): Prefix for the output report files. The extensions .txt and .pdf will be added. Outputs insert_size_metrics (File) insert_size_metrics_pdf (File) quality_score_distribution description Runs picard QualityScoreDistribution to calculate the range of quality scores and creates an accompanying chart external_help https://gatk.broadinstitute.org/hc/en-us/articles/360037057312-QualityScoreDistribution-Picard- outputs {'quality_score_distribution_txt': 'The text file output of QualityScoreDistribution ', 'quality_score_distribution_pdf': 'The PDF file output of QualityScoreDistribution '} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file for which to calculate quality score distribution Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=8): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".QualityScoreDistribution\"): Prefix for the output report files. The extensions .txt and .pdf will be added. Outputs quality_score_distribution_txt (File) quality_score_distribution_pdf (File) bam_to_fastq description [Deprecated] This WDL task converts the input BAM file into FASTQ format files. This task has been deprecated in favor of samtools.collate_to_fastq which is more performant and doesn't error on 'illegal mate states'. deprecated true Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to convert to FASTQ Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=56): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. paired (Boolean, default=true): Is the data paired-end (true) or single-end (false)? prefix (String, default=basename(bam,\".bam\")) Outputs read_one_fastq_gz (File) read_two_fastq_gz (File?)","title":"Picard"},{"location":"tasks/picard/#mark_duplicates","text":"description Marks duplicate reads in the input BAM file using Picard external_help https://gatk.broadinstitute.org/hc/en-us/articles/360037052812-MarkDuplicates-Picard- outputs {'duplicate_marked_bam': 'The input BAM with computationally determined duplicates marked.', 'duplicate_marked_bam_index': 'The .bai BAM index file associated with duplicate_marked_bam ', 'duplicate_marked_bam_md5': 'The md5sum of duplicate_marked_bam ', 'mark_duplicates_metrics': {'description': 'The METRICS_FILE result of picard MarkDuplicates ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#DuplicationMetrics'}}","title":"mark_duplicates"},{"location":"tasks/picard/#inputs","text":"","title":"Inputs"},{"location":"tasks/picard/#required","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file in which to mark duplicates","title":"Required"},{"location":"tasks/picard/#defaults","text":"create_bam (Boolean, default=true): Enable BAM creation (true)? Or only output MarkDuplicates metrics (false)? max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=50): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".MarkDuplicates\"): Prefix for the MarkDuplicates result files. The extensions .bam , .bam.bai , .bam.md5 , and .metrics.txt will be added.","title":"Defaults"},{"location":"tasks/picard/#outputs","text":"duplicate_marked_bam (File?) duplicate_marked_bam_index (File?) duplicate_marked_bam_md5 (File?) mark_duplicates_metrics (File)","title":"Outputs"},{"location":"tasks/picard/#validate_bam","text":"description Validates the input BAM file for correct formatting using Picard external_help https://gatk.broadinstitute.org/hc/en-us/articles/360057440611-ValidateSamFile-Picard- outputs {'validate_report': 'Validation report produced by picard ValidateSamFile . Validation warnings and errors are logged.', 'validated_bam': 'The unmodified input BAM after it has been succesfully validated'}","title":"validate_bam"},{"location":"tasks/picard/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/picard/#required_1","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to validate","title":"Required"},{"location":"tasks/picard/#optional","text":"reference_fasta (File?): Reference genome in FASTA format. Presence of the reference FASTA allows for NM tag validation.","title":"Optional"},{"location":"tasks/picard/#defaults_1","text":"ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]); description : List of Picard errors and warnings to ignore. Possible values can be found on the GATK website (see external_help ).; external_help : https://gatk.broadinstitute.org/hc/en-us/articles/360035891231-Errors-in-SAM-or-BAM-files-can-be-diagnosed-with-ValidateSamFile index_validation_stringency_less_exhaustive (Boolean, default=false): Set INDEX_VALIDATION_STRINGENCY=LESS_EXHAUSTIVE ? max_errors (Int, default=2147483647): Set the value of MAX_OUTPUT for picard ValidateSamFile . The Picard default is 100, a lower number can enable fast fail behavior max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=16): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\"): Name for the ValidateSamFile report file succeed_on_errors (Boolean, default=false): Succeed the task even if errors and/or warnings are detected succeed_on_warnings (Boolean, default=true): Succeed the task if warnings are detected and there are no errors. Overridden by succeed_on_errors summary_mode (Boolean, default=false): Enable SUMMARY mode?","title":"Defaults"},{"location":"tasks/picard/#outputs_1","text":"validate_report (File) validated_bam (File)","title":"Outputs"},{"location":"tasks/picard/#sort","text":"description Sorts the input BAM file external_help https://gatk.broadinstitute.org/hc/en-us/articles/360036510732-SortSam-Picard- outputs {'sorted_bam': 'The input BAM after it has been sorted according to sort_order ', 'sorted_bam_index': 'The .bai BAM index file associated with sorted_bam ', 'sorted_bam_md5': 'The md5sum of sorted_bam '}","title":"sort"},{"location":"tasks/picard/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/picard/#required_2","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to sort","title":"Required"},{"location":"tasks/picard/#defaults_2","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=25): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".sorted\"): Prefix for the sorted BAM file and accessory files. The extensions .bam , .bam.bai , and .bam.md5 will be added. sort_order (String, default=\"coordinate\"); description : Order by which to sort the input BAM; choices : ['queryname', 'coordinate', 'duplicate']","title":"Defaults"},{"location":"tasks/picard/#outputs_2","text":"sorted_bam (File) sorted_bam_index (File) sorted_bam_md5 (File)","title":"Outputs"},{"location":"tasks/picard/#merge_sam_files","text":"description Merges the input BAM files into a single BAM file. All input BAMs are assumed to be sorted according to sort_order . external_help https://gatk.broadinstitute.org/hc/en-us/articles/360057440751-MergeSamFiles-Picard- outputs {'merged_bam': 'The BAM resulting from merging all the input BAMs', 'merged_bam_index': 'The .bai BAM index file associated with merged_bam ', 'merged_bam_md5': 'The md5sum of merged_bam '}","title":"merge_sam_files"},{"location":"tasks/picard/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/picard/#required_3","text":"_runtime (Any, required ) bams (Array[File], required ): Input BAMs to merge. All BAMs are assumed to be sorted according to sort_order . prefix (String, required ): Prefix for the merged BAM file and accessory files. The extensions .bam , .bam.bai , and .bam.md5 will be added.","title":"Required"},{"location":"tasks/picard/#defaults_3","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=40): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. sort_order (String, default=\"coordinate\"); description : Sort order for the output merged BAM. It is assumed all input BAMs share this order.; choices : ['unsorted', 'queryname', 'coordinate', 'duplicate', 'unknown'] threading (Boolean, default=true): Option to create a background thread to encode, compress and write to disk the output file. The threaded version uses about 20% more CPU and decreases runtime by ~20% when writing out a compressed BAM file.","title":"Defaults"},{"location":"tasks/picard/#outputs_3","text":"merged_bam (File) merged_bam_index (File) merged_bam_md5 (File)","title":"Outputs"},{"location":"tasks/picard/#clean_sam","text":"description Cleans the input BAM file. Cleans soft-clipping beyond end-of-reference, sets MAPQ=0 for unmapped reads. external_help https://gatk.broadinstitute.org/hc/en-us/articles/360036885571-CleanSam-Picard- outputs {'cleaned_bam': 'A cleaned version of the input BAM', 'cleaned_bam_index': 'The .bai BAM index file associated with cleaned_bam ', 'cleaned_bam_md5': 'The md5sum of cleaned_bam '}","title":"clean_sam"},{"location":"tasks/picard/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/picard/#required_4","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to clean","title":"Required"},{"location":"tasks/picard/#defaults_4","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=25): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".cleaned\"): Prefix for the cleaned BAM file and accessory files. The extensions .bam , .bam.bai , and .bam.md5 will be added.","title":"Defaults"},{"location":"tasks/picard/#outputs_4","text":"cleaned_bam (File) cleaned_bam_index (File) cleaned_bam_md5 (File)","title":"Outputs"},{"location":"tasks/picard/#collect_wgs_metrics","text":"description Runs picard CollectWgsMetrics to collect metrics about the fractions of reads that pass base- and mapping-quality filters as well as coverage (read-depth) levels external_help https://gatk.broadinstitute.org/hc/en-us/articles/360037226132-CollectWgsMetrics-Picard- outputs {'wgs_metrics': {'description': 'Output report of picard CollectWgsMetrics ', 'external_help': 'https://broadinstitute.github.io/picard/picard-metric-definitions.html#CollectWgsMetrics.WgsMetrics'}}","title":"collect_wgs_metrics"},{"location":"tasks/picard/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/picard/#required_5","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file for which to calculate WGS metrics reference_fasta (File, required ): Gzipped reference genome in FASTA format","title":"Required"},{"location":"tasks/picard/#defaults_5","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=12): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. outfile_name (String, default=basename(bam,\".bam\") + \".CollectWgsMetrics.txt\"): Name for the metrics result file","title":"Defaults"},{"location":"tasks/picard/#outputs_5","text":"wgs_metrics (File)","title":"Outputs"},{"location":"tasks/picard/#collect_alignment_summary_metrics","text":"description Runs picard CollectAlignmentSummaryMetrics to calculate metrics detailing the quality of the read alignments as well as the proportion of the reads that passed machine signal-to-noise threshold quality filters external_help https://gatk.broadinstitute.org/hc/en-us/articles/360040507751-CollectAlignmentSummaryMetrics-Picard- outputs {'alignment_metrics': {'description': 'The text file output of CollectAlignmentSummaryMetrics ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#AlignmentSummaryMetrics'}, 'alignment_metrics_pdf': 'The PDF file output of CollectAlignmentSummaryMetrics '}","title":"collect_alignment_summary_metrics"},{"location":"tasks/picard/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/picard/#required_6","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file for which to calculate alignment metrics","title":"Required"},{"location":"tasks/picard/#defaults_6","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=8): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".CollectAlignmentSummaryMetrics\"): Prefix for the output report files. The extensions .txt and .pdf will be added.","title":"Defaults"},{"location":"tasks/picard/#outputs_6","text":"alignment_metrics (File) alignment_metrics_pdf (File)","title":"Outputs"},{"location":"tasks/picard/#collect_gc_bias_metrics","text":"description Runs picard CollectGcBiasMetrics to collect information about the relative proportions of guanine (G) and cytosine (C) nucleotides external_help https://gatk.broadinstitute.org/hc/en-us/articles/360037593931-CollectGcBiasMetrics-Picard- outputs {'gc_bias_metrics': {'description': 'The full text file output of CollectGcBiasMetrics ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#GcBiasDetailMetrics'}, 'gc_bias_metrics_summary': {'description': 'The summary text file output of CollectGcBiasMetrics ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#GcBiasSummaryMetrics'}, 'gc_bias_metrics_pdf': 'The PDF file output of CollectGcBiasMetrics '}","title":"collect_gc_bias_metrics"},{"location":"tasks/picard/#inputs_7","text":"","title":"Inputs"},{"location":"tasks/picard/#required_7","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file for which to calculate GC bias metrics reference_fasta (File, required ): Reference sequences in FASTA format","title":"Required"},{"location":"tasks/picard/#defaults_7","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=8): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".CollectGcBiasMetrics\"): Prefix for the output report files. The extensions .txt , .summary.txt , and .pdf will be added.","title":"Defaults"},{"location":"tasks/picard/#outputs_7","text":"gc_bias_metrics (File) gc_bias_metrics_summary (File) gc_bias_metrics_pdf (File)","title":"Outputs"},{"location":"tasks/picard/#collect_insert_size_metrics","text":"description Runs picard CollectInsertSizeMetrics to collect metrics for validating library construction including the insert size distribution and read orientation of paired-end libraries external_help https://gatk.broadinstitute.org/hc/en-us/articles/360037055772-CollectInsertSizeMetrics-Picard- outputs {'insert_size_metrics': {'description': 'The text file output of CollectInsertSizeMetrics ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#InsertSizeMetrics'}, 'insert_size_metrics_pdf': 'The PDF file output of CollectInsertSizeMetrics '}","title":"collect_insert_size_metrics"},{"location":"tasks/picard/#inputs_8","text":"","title":"Inputs"},{"location":"tasks/picard/#required_8","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file for which to calculate insert size metrics","title":"Required"},{"location":"tasks/picard/#defaults_8","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=8): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".CollectInsertSizeMetrics\"): Prefix for the output report files. The extensions .txt and .pdf will be added.","title":"Defaults"},{"location":"tasks/picard/#outputs_8","text":"insert_size_metrics (File) insert_size_metrics_pdf (File)","title":"Outputs"},{"location":"tasks/picard/#quality_score_distribution","text":"description Runs picard QualityScoreDistribution to calculate the range of quality scores and creates an accompanying chart external_help https://gatk.broadinstitute.org/hc/en-us/articles/360037057312-QualityScoreDistribution-Picard- outputs {'quality_score_distribution_txt': 'The text file output of QualityScoreDistribution ', 'quality_score_distribution_pdf': 'The PDF file output of QualityScoreDistribution '}","title":"quality_score_distribution"},{"location":"tasks/picard/#inputs_9","text":"","title":"Inputs"},{"location":"tasks/picard/#required_9","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file for which to calculate quality score distribution","title":"Required"},{"location":"tasks/picard/#defaults_9","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=8): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".QualityScoreDistribution\"): Prefix for the output report files. The extensions .txt and .pdf will be added.","title":"Defaults"},{"location":"tasks/picard/#outputs_9","text":"quality_score_distribution_txt (File) quality_score_distribution_pdf (File)","title":"Outputs"},{"location":"tasks/picard/#bam_to_fastq","text":"description [Deprecated] This WDL task converts the input BAM file into FASTQ format files. This task has been deprecated in favor of samtools.collate_to_fastq which is more performant and doesn't error on 'illegal mate states'. deprecated true","title":"bam_to_fastq"},{"location":"tasks/picard/#inputs_10","text":"","title":"Inputs"},{"location":"tasks/picard/#required_10","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to convert to FASTQ","title":"Required"},{"location":"tasks/picard/#defaults_10","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=56): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. paired (Boolean, default=true): Is the data paired-end (true) or single-end (false)? prefix (String, default=basename(bam,\".bam\"))","title":"Defaults"},{"location":"tasks/picard/#outputs_10","text":"read_one_fastq_gz (File) read_two_fastq_gz (File?)","title":"Outputs"},{"location":"tasks/qualimap/","text":"Homepage rnaseq description Generates runs QualiMap's rnaseq tool on the input BAM file. Note that we don't expose the -p parameter. This is used to set strandedness protocol of the sample, however in practice it only disables certain calculations. We do not expose the parameter so that the full suite of calculations is always performed. outputs {'raw_summary': \"Raw text summary of QualiMap's results. Can be parsed by MultiQC.\", 'raw_coverage': \"Raw text of QualiMap's coverage analysis results. Can be parsed by MultiQC.\", 'results': 'Gzipped tar archive of all QualiMap output files'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to run qualimap rnaseq on gtf (File, required ): GTF features file. Gzipped or uncompressed. Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=16): RAM to allocate for task modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. name_sorted (Boolean, default=false): Is the BAM name sorted? QualiMap has an inefficient sorting algorithm. In order to save resources we recommend collating your input BAM before QualiMap and setting this parameter to true. paired_end (Boolean, default=true): Is the BAM paired end? prefix (String, default=basename(bam,\".bam\") + \".qualimap_rnaseq_results\"): Prefix for the results directory and output tarball. The extension .qualimap_rnaseq_results.tar.gz will be added. Outputs raw_summary (File) raw_coverage (File) results (File) bamqc description [Deprecated] This WDL task runs QualiMap's bamqc tool on the input BAM file. This task has been deprecated due to memory leak issues. Use at your own risk, for some samples can consume over 1TB of RAM. deprecated true Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to run qualimap bamqc on Defaults max_retries (Int, default=1) memory_gb (Int, default=32) modify_disk_size_gb (Int, default=0) ncpu (Int, default=1) prefix (String, default=basename(bam,\".bam\")) use_all_cores (Boolean, default=false) Outputs results (File)","title":"Qualimap"},{"location":"tasks/qualimap/#rnaseq","text":"description Generates runs QualiMap's rnaseq tool on the input BAM file. Note that we don't expose the -p parameter. This is used to set strandedness protocol of the sample, however in practice it only disables certain calculations. We do not expose the parameter so that the full suite of calculations is always performed. outputs {'raw_summary': \"Raw text summary of QualiMap's results. Can be parsed by MultiQC.\", 'raw_coverage': \"Raw text of QualiMap's coverage analysis results. Can be parsed by MultiQC.\", 'results': 'Gzipped tar archive of all QualiMap output files'}","title":"rnaseq"},{"location":"tasks/qualimap/#inputs","text":"","title":"Inputs"},{"location":"tasks/qualimap/#required","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to run qualimap rnaseq on gtf (File, required ): GTF features file. Gzipped or uncompressed.","title":"Required"},{"location":"tasks/qualimap/#defaults","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=16): RAM to allocate for task modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. name_sorted (Boolean, default=false): Is the BAM name sorted? QualiMap has an inefficient sorting algorithm. In order to save resources we recommend collating your input BAM before QualiMap and setting this parameter to true. paired_end (Boolean, default=true): Is the BAM paired end? prefix (String, default=basename(bam,\".bam\") + \".qualimap_rnaseq_results\"): Prefix for the results directory and output tarball. The extension .qualimap_rnaseq_results.tar.gz will be added.","title":"Defaults"},{"location":"tasks/qualimap/#outputs","text":"raw_summary (File) raw_coverage (File) results (File)","title":"Outputs"},{"location":"tasks/qualimap/#bamqc","text":"description [Deprecated] This WDL task runs QualiMap's bamqc tool on the input BAM file. This task has been deprecated due to memory leak issues. Use at your own risk, for some samples can consume over 1TB of RAM. deprecated true","title":"bamqc"},{"location":"tasks/qualimap/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/qualimap/#required_1","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to run qualimap bamqc on","title":"Required"},{"location":"tasks/qualimap/#defaults_1","text":"max_retries (Int, default=1) memory_gb (Int, default=32) modify_disk_size_gb (Int, default=0) ncpu (Int, default=1) prefix (String, default=basename(bam,\".bam\")) use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/qualimap/#outputs_1","text":"results (File)","title":"Outputs"},{"location":"tasks/samtools/","text":"Homepage quickcheck description Runs Samtools quickcheck on the input BAM file. This checks that the BAM file appears to be intact, e.g. header exists, at least one sequence is present, and the end-of-file marker exists. outputs {'checked_bam': 'The unmodfied input BAM after it has been successfully quickchecked'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to quickcheck Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. Outputs checked_bam (File) split description Runs Samtools split on the input BAM file. This splits the BAM by read group into one or more output files. It optionally errors if there are reads present that do not belong to a read group. Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to split Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=basename(bam,\".bam\")): Prefix for the split BAM files. The extensions will contain read group IDs, and will end in .bam . reject_unaccounted (Boolean, default=true): If true, error if there are reads present that do not have read group information. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs split_bams (Array[File]) flagstat description Produces a samtools flagstat report containing statistics about the alignments based on the bit flags set in the BAM outputs {'flagstat_report': ' samtools flagstat STDOUT redirected to a file'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to generate flagstat for Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=5): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task outfile_name (String, default=basename(bam,\".bam\") + \".flagstat.txt\"): Name for the flagstat report file use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs flagstat_report (File) index description Creates a .bai BAM index for the input BAM outputs {'bam_index': \"A .bai BAM index associated with the input BAM. Filename will be basename(bam) + '.bai' .\"} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to index Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs bam_index (File) subsample description Randomly subsamples the input BAM. Sampling is probabalistic and will be approximate to desired_reads . Read count will not be exact. A sampled_bam will not be produced if the input BAM read count is less than or equal to desired_reads . outputs {'orig_read_count': 'A TSV report containing the original read count before subsampling', 'sampled_bam': 'The subsampled input BAM.'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to subsample desired_reads (Int, required ): How many reads should be in the ouput BAM? Output BAM read count will be approximate to this value. Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=basename(bam,\".bam\")): Prefix for the BAM file. The extension .subsampled.bam will be added. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs orig_read_count (File) sampled_bam (File?) merge description Merges multiple sorted BAMs into a single BAM outputs {'merged_bam': 'The BAM resulting from merging all the input BAMs'} Inputs Required _runtime (Any, required ) bams (Array[File], required ): An array of BAMs to merge into one combined BAM prefix (String, required ): Prefix for the BAM file. The extension .bam will be added. Optional new_header (File?): Use the lines of FILE as @ headers to be copied to the merged BAM, replacing any header lines that would otherwise be copied from the first BAM file in the list. (File may actually be in SAM format, though any alignment records it may contain are ignored.) Defaults attach_rg (Boolean, default=true): Attach an RG tag to each alignment. The tag value is inferred from file names. combine_pg (Boolean, default=true): Similarly to combine_rg : for each @PG ID in the set of files to merge, use the @PG line of the first file we find that ID in rather than adding a suffix to differentiate similar IDs. combine_rg (Boolean, default=true): When several input files contain @RG headers with the same ID, emit only one of them (namely, the header line from the first file we find that ID in) to the merged output file. Combining these similar headers is usually the right thing to do when the files being merged originated from the same file. Without -c , all @RG headers appear in the output file, with random suffixes added to their IDs where necessary to differentiate them. max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. name_sorted (Boolean, default=false): Are all input BAMs queryname sorted (true)? Or are all input BAMs coordinate sorted (false)? ncpu (Int, default=1): Number of cores to allocate for task region (String, default=\"\"): Merge files in the specified region (Format: chr:start-end ) use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs merged_bam (File) addreplacerg description Adds or replaces read group tags outputs {'tagged_bam': 'The transformed input BAM after read group modifications have been applied'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to add read group information Optional read_group_id (String?): Allows you to specify the read group ID of an existing @RG line and applies it to the reads specified by the orphan_only option Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task orphan_only (Boolean, default=true): Only add RG tags to orphans (true)? Or also overwrite all existing RG tags (including any in the header) (false)? overwrite_header_record (Boolean, default=false): Overwrite an existing @RG line, if a new one with the same ID value is provided? prefix (String, default=basename(bam,\".bam\") + \".addreplacerg\"): Prefix for the BAM file. The extension .bam will be added. read_group_line (Array[String], default=[]): Allows you to specify a read group line to append to (or replace in) the header and applies it to the reads specified by the orphan_only option. Each String in the Array should correspond to one field of the read group line. Tab literals will be inserted between each entry in the final BAM. Only one read group line can be supplied per invocation of this task. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs tagged_bam (File) collate description Runs samtools collate on the input BAM file. Shuffles and groups reads together by their names. outputs {'collated_bam': 'A collated BAM (reads sharing a name next to each other, no other guarantee of sort order)'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to collate Defaults fast_mode (Boolean, default=true): Use fast mode (output primary alignments only)? max_retries (Int, default=1): Number of times to retry in case of failure modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=basename(bam,\".bam\") + \".collated\"): Prefix for the collated BAM file. The extension .bam will be added. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs collated_bam (File) bam_to_fastq description Runs samtools fastq on the input BAM file. Splits the BAM into FASTQ files. Assumes either a name sorted or collated BAM. For splitting a position sorted BAM see collate_to_fastq . outputs {'read_one_fastq_gz': 'Gzipped FASTQ file with 1st reads in pair', 'read_two_fastq_gz': 'Gzipped FASTQ file with 2nd reads in pair', 'singleton_reads_fastq_gz': 'A gzipped FASTQ containing singleton reads', 'interleaved_reads_fastq_gz': 'An interleaved gzipped paired-end FASTQ'} Inputs Required _runtime (Any, required ) bam (File, required ): Input name sorted or collated BAM format file to convert into FASTQ(s) Defaults F (String, default=\"0x900\"): Do not output alignments with any bits set in INT present in the FLAG field. INT can be specified in hex by beginning with 0x (i.e. /^0x[0-9A-F]+/) or in octal by beginning with 0 (i.e. /^0[0-7]+/). This defaults to 0x900 representing filtering of secondary and supplementary alignments. G (String, default=\"0\"): Only EXCLUDE reads with all of the bits set in INT present in the FLAG field. INT can be specified in hex by beginning with 0x (i.e. /^0x[0-9A-F]+/) or in octal by beginning with 0 (i.e. /^0[0-7]+/). f (String, default=\"0\"): Only output alignments with all bits set in INT present in the FLAG field. INT can be specified in hex by beginning with 0x (i.e. /^0x[0-9A-F]+/) or in octal by beginning with 0 (i.e. /^0[0-7]+/). fail_on_unexpected_reads (Boolean, default=false): The definition of 'unexpected' depends on whether the values of paired_end and output_singletons are true or false. In any case, reads that have neither or both first and last bits set are considered unexpected. If paired_end is true and output_singletons is false , singleton reads are considered unexpected. A singleton read is a read with either the first or the last bit set and that possesses a unique QNAME; i.e. it is a read without a pair when all reads are expected to be paired. But if output_singletons is true , these singleton reads will be output as their own FASTQ instead of causing the task to fail. If paired_end is false , a read with only the last bit set is considered unexpected. This is because only reads with the first bit set should be present in a Single-End BAM. If fail_on_unexpected_reads is false , then all the above cases will be ignored. Any 'unexpected' reads will be silently discarded.; description : Should the task fail if reads with an unexpected first / last bit setting are discovered? interleaved (Boolean, default=false): Create an interleaved FASTQ file from paired-end data? max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task output_singletons (Boolean, default=false): Output singleton reads as their own FASTQ? paired_end (Boolean, default=true): Is the data paired-end? prefix (String, default=basename(bam,\".bam\")): Prefix for output FASTQ(s). Extensions [,.R1,.R2,.singleton].fastq.gz will be added depending on other options. use_all_cores (Boolean, default=false): Use all available cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs read_one_fastq_gz (File?) read_two_fastq_gz (File?) singleton_reads_fastq_gz (File?) interleaved_reads_fastq_gz (File?) collate_to_fastq description Runs samtools collate on the input BAM file then converts it into FASTQ(s) using samtools fastq outputs {'collated_bam': 'A collated BAM (reads sharing a name next to each other, no other guarantee of sort order)', 'read_one_fastq_gz': 'Gzipped FASTQ file with 1st reads in pair', 'read_two_fastq_gz': 'Gzipped FASTQ file with 2nd reads in pair', 'singleton_reads_fastq_gz': 'Gzipped FASTQ containing singleton reads', 'interleaved_reads_fastq_gz': 'Interleaved gzipped paired-end FASTQ'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to collate and convert to FASTQ(s) Defaults F (String, default=\"0x900\"): Do not output alignments with any bits set in INT present in the FLAG field. INT can be specified in hex by beginning with 0x (i.e. /^0x[0-9A-F]+/) or in octal by beginning with 0 (i.e. /^0[0-7]+/). This defaults to 0x900 representing filtering of secondary and supplementary alignments. G (String, default=\"0\"): Only EXCLUDE reads with all of the bits set in INT present in the FLAG field. INT can be specified in hex by beginning with 0x (i.e. /^0x[0-9A-F]+/) or in octal by beginning with 0 (i.e. /^0[0-7]+/). f (String, default=\"0\"): Only output alignments with all bits set in INT present in the FLAG field. INT can be specified in hex by beginning with 0x (i.e. /^0x[0-9A-F]+/) or in octal by beginning with 0 (i.e. /^0[0-7]+/). fail_on_unexpected_reads (Boolean, default=false): The definition of 'unexpected' depends on whether the values of paired_end and output_singletons are true or false. In any case, reads that have neither or both first and last bits set are considered unexpected. If paired_end is true and output_singletons is false , singleton reads are considered unexpected. A singleton read is a read with either the first or the last bit set and that possesses a unique QNAME; i.e. it is a read without a pair when all reads are expected to be paired. But if output_singletons is true , these singleton reads will be output as their own FASTQ instead of causing the task to fail. If paired_end is false , a read with only the last bit set is considered unexpected. This is because only reads with the first bit set should be present in a Single-End BAM. If fail_on_unexpected_reads is false , then all the above cases will be ignored. Any 'unexpected' reads will be silently discarded.; description : Should the task fail if reads with an unexpected first / last bit setting are discovered? fast_mode (Boolean, default=true): Fast mode for samtools collate (primary alignments only) interleaved (Boolean, default=false): Create an interleaved FASTQ file from paired-end data? max_retries (Int, default=1): Number of times to retry in case of failure modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task output_singletons (Boolean, default=false): Output singleton reads as their own FASTQ? paired_end (Boolean, default=true): Is the data paired-end? prefix (String, default=basename(bam,\".bam\")): Prefix for the collated BAM and FASTQ files. The extensions .collated.bam and [,.R1,.R2,.singleton].fastq.gz will be added. store_collated_bam (Boolean, default=false): Save the collated BAM (true) or delete it after FASTQ split (false)? use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs collated_bam (File?) read_one_fastq_gz (File?) read_two_fastq_gz (File?) singleton_reads_fastq_gz (File?) interleaved_reads_fastq_gz (File?)","title":"Samtools"},{"location":"tasks/samtools/#quickcheck","text":"description Runs Samtools quickcheck on the input BAM file. This checks that the BAM file appears to be intact, e.g. header exists, at least one sequence is present, and the end-of-file marker exists. outputs {'checked_bam': 'The unmodfied input BAM after it has been successfully quickchecked'}","title":"quickcheck"},{"location":"tasks/samtools/#inputs","text":"","title":"Inputs"},{"location":"tasks/samtools/#required","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to quickcheck","title":"Required"},{"location":"tasks/samtools/#defaults","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB.","title":"Defaults"},{"location":"tasks/samtools/#outputs","text":"checked_bam (File)","title":"Outputs"},{"location":"tasks/samtools/#split","text":"description Runs Samtools split on the input BAM file. This splits the BAM by read group into one or more output files. It optionally errors if there are reads present that do not belong to a read group.","title":"split"},{"location":"tasks/samtools/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_1","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to split","title":"Required"},{"location":"tasks/samtools/#defaults_1","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=basename(bam,\".bam\")): Prefix for the split BAM files. The extensions will contain read group IDs, and will end in .bam . reject_unaccounted (Boolean, default=true): If true, error if there are reads present that do not have read group information. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/samtools/#outputs_1","text":"split_bams (Array[File])","title":"Outputs"},{"location":"tasks/samtools/#flagstat","text":"description Produces a samtools flagstat report containing statistics about the alignments based on the bit flags set in the BAM outputs {'flagstat_report': ' samtools flagstat STDOUT redirected to a file'}","title":"flagstat"},{"location":"tasks/samtools/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_2","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to generate flagstat for","title":"Required"},{"location":"tasks/samtools/#defaults_2","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=5): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task outfile_name (String, default=basename(bam,\".bam\") + \".flagstat.txt\"): Name for the flagstat report file use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/samtools/#outputs_2","text":"flagstat_report (File)","title":"Outputs"},{"location":"tasks/samtools/#index","text":"description Creates a .bai BAM index for the input BAM outputs {'bam_index': \"A .bai BAM index associated with the input BAM. Filename will be basename(bam) + '.bai' .\"}","title":"index"},{"location":"tasks/samtools/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_3","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to index","title":"Required"},{"location":"tasks/samtools/#defaults_3","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/samtools/#outputs_3","text":"bam_index (File)","title":"Outputs"},{"location":"tasks/samtools/#subsample","text":"description Randomly subsamples the input BAM. Sampling is probabalistic and will be approximate to desired_reads . Read count will not be exact. A sampled_bam will not be produced if the input BAM read count is less than or equal to desired_reads . outputs {'orig_read_count': 'A TSV report containing the original read count before subsampling', 'sampled_bam': 'The subsampled input BAM.'}","title":"subsample"},{"location":"tasks/samtools/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_4","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to subsample desired_reads (Int, required ): How many reads should be in the ouput BAM? Output BAM read count will be approximate to this value.","title":"Required"},{"location":"tasks/samtools/#defaults_4","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=basename(bam,\".bam\")): Prefix for the BAM file. The extension .subsampled.bam will be added. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/samtools/#outputs_4","text":"orig_read_count (File) sampled_bam (File?)","title":"Outputs"},{"location":"tasks/samtools/#merge","text":"description Merges multiple sorted BAMs into a single BAM outputs {'merged_bam': 'The BAM resulting from merging all the input BAMs'}","title":"merge"},{"location":"tasks/samtools/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_5","text":"_runtime (Any, required ) bams (Array[File], required ): An array of BAMs to merge into one combined BAM prefix (String, required ): Prefix for the BAM file. The extension .bam will be added.","title":"Required"},{"location":"tasks/samtools/#optional","text":"new_header (File?): Use the lines of FILE as @ headers to be copied to the merged BAM, replacing any header lines that would otherwise be copied from the first BAM file in the list. (File may actually be in SAM format, though any alignment records it may contain are ignored.)","title":"Optional"},{"location":"tasks/samtools/#defaults_5","text":"attach_rg (Boolean, default=true): Attach an RG tag to each alignment. The tag value is inferred from file names. combine_pg (Boolean, default=true): Similarly to combine_rg : for each @PG ID in the set of files to merge, use the @PG line of the first file we find that ID in rather than adding a suffix to differentiate similar IDs. combine_rg (Boolean, default=true): When several input files contain @RG headers with the same ID, emit only one of them (namely, the header line from the first file we find that ID in) to the merged output file. Combining these similar headers is usually the right thing to do when the files being merged originated from the same file. Without -c , all @RG headers appear in the output file, with random suffixes added to their IDs where necessary to differentiate them. max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. name_sorted (Boolean, default=false): Are all input BAMs queryname sorted (true)? Or are all input BAMs coordinate sorted (false)? ncpu (Int, default=1): Number of cores to allocate for task region (String, default=\"\"): Merge files in the specified region (Format: chr:start-end ) use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/samtools/#outputs_5","text":"merged_bam (File)","title":"Outputs"},{"location":"tasks/samtools/#addreplacerg","text":"description Adds or replaces read group tags outputs {'tagged_bam': 'The transformed input BAM after read group modifications have been applied'}","title":"addreplacerg"},{"location":"tasks/samtools/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_6","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to add read group information","title":"Required"},{"location":"tasks/samtools/#optional_1","text":"read_group_id (String?): Allows you to specify the read group ID of an existing @RG line and applies it to the reads specified by the orphan_only option","title":"Optional"},{"location":"tasks/samtools/#defaults_6","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task orphan_only (Boolean, default=true): Only add RG tags to orphans (true)? Or also overwrite all existing RG tags (including any in the header) (false)? overwrite_header_record (Boolean, default=false): Overwrite an existing @RG line, if a new one with the same ID value is provided? prefix (String, default=basename(bam,\".bam\") + \".addreplacerg\"): Prefix for the BAM file. The extension .bam will be added. read_group_line (Array[String], default=[]): Allows you to specify a read group line to append to (or replace in) the header and applies it to the reads specified by the orphan_only option. Each String in the Array should correspond to one field of the read group line. Tab literals will be inserted between each entry in the final BAM. Only one read group line can be supplied per invocation of this task. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/samtools/#outputs_6","text":"tagged_bam (File)","title":"Outputs"},{"location":"tasks/samtools/#collate","text":"description Runs samtools collate on the input BAM file. Shuffles and groups reads together by their names. outputs {'collated_bam': 'A collated BAM (reads sharing a name next to each other, no other guarantee of sort order)'}","title":"collate"},{"location":"tasks/samtools/#inputs_7","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_7","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to collate","title":"Required"},{"location":"tasks/samtools/#defaults_7","text":"fast_mode (Boolean, default=true): Use fast mode (output primary alignments only)? max_retries (Int, default=1): Number of times to retry in case of failure modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task prefix (String, default=basename(bam,\".bam\") + \".collated\"): Prefix for the collated BAM file. The extension .bam will be added. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/samtools/#outputs_7","text":"collated_bam (File)","title":"Outputs"},{"location":"tasks/samtools/#bam_to_fastq","text":"description Runs samtools fastq on the input BAM file. Splits the BAM into FASTQ files. Assumes either a name sorted or collated BAM. For splitting a position sorted BAM see collate_to_fastq . outputs {'read_one_fastq_gz': 'Gzipped FASTQ file with 1st reads in pair', 'read_two_fastq_gz': 'Gzipped FASTQ file with 2nd reads in pair', 'singleton_reads_fastq_gz': 'A gzipped FASTQ containing singleton reads', 'interleaved_reads_fastq_gz': 'An interleaved gzipped paired-end FASTQ'}","title":"bam_to_fastq"},{"location":"tasks/samtools/#inputs_8","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_8","text":"_runtime (Any, required ) bam (File, required ): Input name sorted or collated BAM format file to convert into FASTQ(s)","title":"Required"},{"location":"tasks/samtools/#defaults_8","text":"F (String, default=\"0x900\"): Do not output alignments with any bits set in INT present in the FLAG field. INT can be specified in hex by beginning with 0x (i.e. /^0x[0-9A-F]+/) or in octal by beginning with 0 (i.e. /^0[0-7]+/). This defaults to 0x900 representing filtering of secondary and supplementary alignments. G (String, default=\"0\"): Only EXCLUDE reads with all of the bits set in INT present in the FLAG field. INT can be specified in hex by beginning with 0x (i.e. /^0x[0-9A-F]+/) or in octal by beginning with 0 (i.e. /^0[0-7]+/). f (String, default=\"0\"): Only output alignments with all bits set in INT present in the FLAG field. INT can be specified in hex by beginning with 0x (i.e. /^0x[0-9A-F]+/) or in octal by beginning with 0 (i.e. /^0[0-7]+/). fail_on_unexpected_reads (Boolean, default=false): The definition of 'unexpected' depends on whether the values of paired_end and output_singletons are true or false. In any case, reads that have neither or both first and last bits set are considered unexpected. If paired_end is true and output_singletons is false , singleton reads are considered unexpected. A singleton read is a read with either the first or the last bit set and that possesses a unique QNAME; i.e. it is a read without a pair when all reads are expected to be paired. But if output_singletons is true , these singleton reads will be output as their own FASTQ instead of causing the task to fail. If paired_end is false , a read with only the last bit set is considered unexpected. This is because only reads with the first bit set should be present in a Single-End BAM. If fail_on_unexpected_reads is false , then all the above cases will be ignored. Any 'unexpected' reads will be silently discarded.; description : Should the task fail if reads with an unexpected first / last bit setting are discovered? interleaved (Boolean, default=false): Create an interleaved FASTQ file from paired-end data? max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task output_singletons (Boolean, default=false): Output singleton reads as their own FASTQ? paired_end (Boolean, default=true): Is the data paired-end? prefix (String, default=basename(bam,\".bam\")): Prefix for output FASTQ(s). Extensions [,.R1,.R2,.singleton].fastq.gz will be added depending on other options. use_all_cores (Boolean, default=false): Use all available cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/samtools/#outputs_8","text":"read_one_fastq_gz (File?) read_two_fastq_gz (File?) singleton_reads_fastq_gz (File?) interleaved_reads_fastq_gz (File?)","title":"Outputs"},{"location":"tasks/samtools/#collate_to_fastq","text":"description Runs samtools collate on the input BAM file then converts it into FASTQ(s) using samtools fastq outputs {'collated_bam': 'A collated BAM (reads sharing a name next to each other, no other guarantee of sort order)', 'read_one_fastq_gz': 'Gzipped FASTQ file with 1st reads in pair', 'read_two_fastq_gz': 'Gzipped FASTQ file with 2nd reads in pair', 'singleton_reads_fastq_gz': 'Gzipped FASTQ containing singleton reads', 'interleaved_reads_fastq_gz': 'Interleaved gzipped paired-end FASTQ'}","title":"collate_to_fastq"},{"location":"tasks/samtools/#inputs_9","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_9","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to collate and convert to FASTQ(s)","title":"Required"},{"location":"tasks/samtools/#defaults_9","text":"F (String, default=\"0x900\"): Do not output alignments with any bits set in INT present in the FLAG field. INT can be specified in hex by beginning with 0x (i.e. /^0x[0-9A-F]+/) or in octal by beginning with 0 (i.e. /^0[0-7]+/). This defaults to 0x900 representing filtering of secondary and supplementary alignments. G (String, default=\"0\"): Only EXCLUDE reads with all of the bits set in INT present in the FLAG field. INT can be specified in hex by beginning with 0x (i.e. /^0x[0-9A-F]+/) or in octal by beginning with 0 (i.e. /^0[0-7]+/). f (String, default=\"0\"): Only output alignments with all bits set in INT present in the FLAG field. INT can be specified in hex by beginning with 0x (i.e. /^0x[0-9A-F]+/) or in octal by beginning with 0 (i.e. /^0[0-7]+/). fail_on_unexpected_reads (Boolean, default=false): The definition of 'unexpected' depends on whether the values of paired_end and output_singletons are true or false. In any case, reads that have neither or both first and last bits set are considered unexpected. If paired_end is true and output_singletons is false , singleton reads are considered unexpected. A singleton read is a read with either the first or the last bit set and that possesses a unique QNAME; i.e. it is a read without a pair when all reads are expected to be paired. But if output_singletons is true , these singleton reads will be output as their own FASTQ instead of causing the task to fail. If paired_end is false , a read with only the last bit set is considered unexpected. This is because only reads with the first bit set should be present in a Single-End BAM. If fail_on_unexpected_reads is false , then all the above cases will be ignored. Any 'unexpected' reads will be silently discarded.; description : Should the task fail if reads with an unexpected first / last bit setting are discovered? fast_mode (Boolean, default=true): Fast mode for samtools collate (primary alignments only) interleaved (Boolean, default=false): Create an interleaved FASTQ file from paired-end data? max_retries (Int, default=1): Number of times to retry in case of failure modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. modify_memory_gb (Int, default=0): Add to or subtract from dynamic memory allocation. Default memory is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task output_singletons (Boolean, default=false): Output singleton reads as their own FASTQ? paired_end (Boolean, default=true): Is the data paired-end? prefix (String, default=basename(bam,\".bam\")): Prefix for the collated BAM and FASTQ files. The extensions .collated.bam and [,.R1,.R2,.singleton].fastq.gz will be added. store_collated_bam (Boolean, default=false): Save the collated BAM (true) or delete it after FASTQ split (false)? use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/samtools/#outputs_9","text":"collated_bam (File?) read_one_fastq_gz (File?) read_two_fastq_gz (File?) singleton_reads_fastq_gz (File?) interleaved_reads_fastq_gz (File?)","title":"Outputs"},{"location":"tasks/star/","text":"Homepage build_star_db description Runs STAR's build command to generate a STAR format reference for alignment outputs {'star_db': 'A gzipped TAR file containing the STAR reference files. Suitable as the star_db_tar_gz input to the alignment task.'} Inputs Required _runtime (Any, required ) gtf (File, required ): GTF format feature file reference_fasta (File, required ): The FASTA format reference file for the genome Defaults db_name (String, default=\"star_db\"): Name for output in compressed, archived format. The suffix .tar.gz will be added. genomeChrBinNbits (Int, default=18): =log2(chrBin), where chrBin is the size of the bins for genome storage: each chromosome will occupy an integer number of bins. For a genome with large number of contigs, it is recommended to scale this parameter as min(18, log2[max(GenomeLength/NumberOfReferences,ReadLength)]). genomeSAindexNbases (Int, default=14): length (bases) of the SA pre-indexing string. Typically between 10 and 15. Longer strings will use much more memory, but allow faster searches. For small genomes, the parameter --genomeSAindexNbases must be scaled down to min(14, log2(GenomeLength)/2 - 1) . genomeSAsparseD (Int, default=1): suffix array sparsity, i.e. distance between indices: use bigger numbers to decrease needed RAM at the cost of mapping speed reduction. genomeSuffixLengthMax (Int, default=-1): maximum length of the suffixes, has to be longer than read length. -1 = infinite. max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=50): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task sjdbGTFchrPrefix (String, default=\"-\"): prefix for chromosome names in a GTF file (e.g. 'chr' for using ENSMEBL annotations with UCSC genomes) sjdbGTFfeatureExon (String, default=\"exon\"): feature type in GTF file to be used as exons for building transcripts sjdbGTFtagExonParentGene (String, default=\"gene_id\"): GTF attribute name for parent gene ID sjdbGTFtagExonParentGeneName (String, default=\"gene_name\"): GTF attrbute name for parent gene name sjdbGTFtagExonParentGeneType (String, default=\"gene_type gene_biotype\"): GTF attrbute name for parent gene type sjdbGTFtagExonParentTranscript (String, default=\"transcript_id\"): GTF attribute name for parent transcript ID sjdbOverhang (Int, default=125): length of the donor/acceptor sequence on each side of the junctions, ideally = (mate_length - 1). [STAR default] : 100 . [WDL default] : 125 . use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. Outputs star_db (File) alignment description Runs the STAR aligner on a set of RNA-Seq FASTQ files external_help https://github.com/alexdobin/STAR/blob/2.7.10a/doc/STARmanual.pdf outputs {'star_log': 'Summary mapping statistics after mapping job is complete. The statistics are calculated for each read (single- or paired-end) and then summed or averaged over all reads. Note that STAR counts a paired-end read as one read. Most of the information is collected about the UNIQUE mappers. Each splicing is counted in the numbers of splices, which would correspond to summing the counts in SJ.out.tab. The mismatch/indel error rates are calculated on a per base basis, i.e. as total number of mismatches/indels in all unique mappers divided by the total number of mapped bases.', 'star_bam': 'STAR aligned BAM', 'star_junctions': {'description': 'File contains high confidence collapsed splice junctions in tab-delimited format. Note that STAR defines the junction start/end as intronic bases, while many other software define them as exonic bases. See meta.external_help for file specification.'}, 'star_chimeric_junctions': {'description': 'Tab delimited file containing chimeric reads and associated metadata. See meta.external_help for file specification.'}} Inputs Required _runtime (Any, required ) prefix (String, required ): Prefix for the BAM and other STAR files. The extensions .Aligned.out.bam , .Log.final.out , .SJ.out.tab , and .Chimeric.out.junction will be added. read_one_fastqs_gz (Array[File], required ): An array of gzipped FASTQ files containing read one information star_db_tar_gz (File, required ): A gzipped TAR file containing the STAR reference files. The name of the root directory which was archived must match the archive's filename without the .tar.gz extension. Optional read_groups (String?): A string containing the read group information to output in the BAM file. If including multiple read group fields per-read group, they should be space delimited. Read groups should be comma separated, with a space on each side (i.e. ' , '). The ID field must come first for each read group and must be contained in the basename of a FASTQ file or pair of FASTQ files if Paired-End. Example: ID:rg1 PU:flowcell1.lane1 SM:sample1 PL:illumina LB:sample1_lib1 , ID:rg2 PU:flowcell1.lane2 SM:sample1 PL:illumina LB:sample1_lib1 . These two read groups could be associated with the following four FASTQs: sample1.rg1_R1.fastq,sample1.rg2_R1.fastq and sample1.rg1_R2.fastq,sample1.rg2_R2.fastq Defaults alignEndsProtrude (Pair[Int,String], default=(0, \"ConcordantPair\")); description : allow protrusion of alignment ends, i.e. start (end) of the +strand mate downstream of the start (end) of the -strand mate. left : maximum number of protrusion bases allowed. right : see choices below.; choices : {'ConcordantPair': 'report alignments with non-zero protrusion as concordant pairs', 'DiscordantPair': 'report alignments with non-zero protrusion as discordant pairs'} alignEndsType (String, default=\"Local\"); description : type of read ends alignment; choices : {'Local': 'standard local alignment with soft-clipping allowed', 'EndToEnd': 'force end-to-end read alignment, do not soft-clip', 'Extend5pOfRead1': 'fully extend only the 5p of the read1, all other ends: local alignment', 'Extend5pOfReads12': 'fully extend only the 5p of the both read1 and read2, all other ends: local alignment'} alignInsertionFlush (String, default=\"None\"); description : how to flush ambiguous insertion positions; choices : {'None': 'insertions are not flushed', 'Right': 'insertions are flushed to the right'} alignIntronMax (Int, default=500000): maximum intron size, if 0, max intron size will be determined by (2^winBinNbits) winAnchorDistNbins. [STAR default] : 0 . [WDL default] *: 500000 . alignIntronMin (Int, default=21): minimum intron size: genomic gap is considered intron if its length>=alignIntronMin, otherwise it is considered Deletion alignMatesGapMax (Int, default=1000000): maximum gap between two mates, if 0, max intron gap will be determined by (2^winBinNbits) winAnchorDistNbins. [STAR default] : 0 . [WDL default] *: 1000000 alignSJDBoverhangMin (Int, default=1): minimum overhang (i.e. block size) for annotated (sjdb) spliced alignments. [STAR default] : 3 . [WDL default] : 1 . alignSJoverhangMin (Int, default=5): minimum overhang (i.e. block size) for spliced alignments alignSJstitchMismatchNmax (SJ_Motifs, default={\"noncanonical_motifs\": 0, \"GT_AG_and_CT_AC_motif\": -1, \"GC_AG_and_CT_GC_motif\": 0, \"AT_AC_and_GT_AT_motif\": 0}): maximum number of mismatches for stitching of the splice junctions (-1: no limit) for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif alignSoftClipAtReferenceEnds (String, default=\"Yes\"); description : allow the soft-clipping of the alignments past the end of the chromosomes; choices : {'Yes': 'allow', 'No': 'prohibit, useful for compatibility with Cufflinks'} alignSplicedMateMapLmin (Int, default=0): minimum mapped length for a read mate that is spliced alignSplicedMateMapLminOverLmate (Float, default=0.66): alignSplicedMateMapLmin normalized to mate length alignTranscriptsPerReadNmax (Int, default=10000): max number of different alignments per read to consider alignTranscriptsPerWindowNmax (Int, default=100): max number of transcripts per window alignWindowsPerReadNmax (Int, default=10000): max number of windows per read chimFilter (String, default=\"banGenomicN\"); description : different filters for chimeric alignments; choices : {'None': 'no filtering', 'banGenomicN': 'Ns are not allowed in the genome sequence around the chimeric junction'} chimJunctionOverhangMin (Int, default=20): minimum overhang for a chimeric junction chimMainSegmentMultNmax (Int, default=10): maximum number of multi-alignments for the main chimeric segment. =1 will prohibit multimapping main segments. chimMultimapNmax (Int, default=0): maximum number of chimeric multi-alignments. 0 : use the old scheme for chimeric detection which only considered unique alignments chimMultimapScoreRange (Int, default=1): the score range for multi-mapping chimeras below the best chimeric score. Only works with --chimMultimapNmax > 1. chimNonchimScoreDropMin (Int, default=20): to trigger chimeric detection, the drop in the best non-chimeric alignment score with respect to the read length has to be greater than this value chimOutJunctionFormat (String, default=\"plain\"); description : formatting type for the Chimeric.out.junction file; choices : {'plain': 'no comment lines/headers', 'comments': 'comment lines at the end of the file: command line and Nreads: total, unique/multi-mapping'} chimOutType (String, default=\"Junctions\"); description : type of chimeric output; choices : {'Junctions': 'Chimeric.out.junction', 'WithinBAM_HardClip': 'output into main aligned BAM files (Aligned. .bam). Hard-clipping in the CIGAR for supplemental chimeric alignments.', 'WithinBAM_SoftClip': 'output into main aligned BAM files (Aligned. .bam). Soft-clipping in the CIGAR for supplemental chimeric alignments.'} chimScoreDropMax (Int, default=20): max drop (difference) of chimeric score (the sum of scores of all chimeric segments) from the read length chimScoreJunctionNonGTAG (Int, default=-1): penalty for a non-GT/AG chimeric junction chimScoreMin (Int, default=0): minimum total (summed) score of the chimeric segments chimScoreSeparation (Int, default=10): minimum difference (separation) between the best chimeric score and the next one chimSegmentMin (Int, default=0): minimum length of chimeric segment length, if ==0, no chimeric output chimSegmentReadGapMax (Int, default=0): maximum gap in the read sequence between chimeric segments clip3pAdapterMMp (Pair[Float,Float], default=(0.1, 0.1)): max proportion of mismatches for 3p adapter clipping for each mate. left applies to read one and right applies to read two. clip3pAdapterSeq (Pair[String,String], default=(\"None\", \"None\")); description : adapter sequences to clip from 3p of each mate. left applies to read one and right applies to read two.; choices : {'None': 'No 3p adapter trimming will be performed', 'sequence': 'A nucleotide sequence string of any length, matching the regex /[ATCG]+/ ', 'polyA': 'polyA sequence with the length equal to read length'} clip3pAfterAdapterNbases (Pair[Int,Int], default=(0, 0)): number of bases to clip from 3p of each mate after the adapter clipping. left applies to read one and right applies to read two. clip3pNbases (Pair[Int,Int], default=(0, 0)): number of bases to clip from 3p of each mate. left applies to read one and right applies to read two. clip5pNbases (Pair[Int,Int], default=(0, 0)): number of bases to clip from 5p of each mate. left applies to read one and right applies to read two. clipAdapterType (String, default=\"Hamming\"); description : adapter clipping type; choices : {'Hamming': 'adapter clipping based on Hamming distance, with the number of mismatches controlled by --clip5pAdapterMMp', 'CellRanger4': '5p and 3p adapter clipping similar to CellRanger4. Utilizes Opal package by Martin \u0160o\u0161i\u0107: https://github.com/Martinsos/opal', 'None': 'no adapter clipping, all other clip* parameters are disregarded'} limitOutSJcollapsed (Int, default=1000000): max number of collapsed junctions limitOutSJoneRead (Int, default=1000): max number of junctions for one read (including all multi-mappers) limitSjdbInsertNsj (Int, default=1000000): maximum number of junction to be inserted to the genome on the fly at the mapping stage, including those from annotations and those detected in the 1st step of the 2-pass run max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=50): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task outFilterIntronMotifs (String, default=\"None\"); description : filter alignment using their motifs; choices : {'None': 'no filtering', 'RemoveNoncanonical': 'filter out alignments that contain non-canonical junctions', 'RemoveNoncanonicalUnannotated': 'filter out alignments that contain non-canonical unannotated junctions when using annotated splice junctions database. The annotated non-canonical junctions will be kept.'} outFilterIntronStrands (String, default=\"RemoveInconsistentStrands\"); description : filter alignments; choices : {'None': 'no filtering', 'RemoveInconsistentStrands': 'remove alignments that have junctions with inconsistent strands'} outFilterMatchNmin (Int, default=0): alignment will be output only if the number of matched bases is higher than or equal to this value outFilterMatchNminOverLread (Float, default=0.66): same as outFilterMatchNmin, but normalized to the read length (sum of mates' lengths for paired-end reads) outFilterMismatchNmax (Int, default=10): alignment will be output only if it has no more mismatches than this value outFilterMismatchNoverLmax (Float, default=0.3): alignment will be output only if its ratio of mismatches to mapped length is less than or equal to this value outFilterMismatchNoverReadLmax (Float, default=1.0): alignment will be output only if its ratio of mismatches to read length is less than or equal to this value outFilterMultimapNmax (Int, default=20): maximum number of loci the read is allowed to map to. Alignments (all of them) will be output only if the read maps to no more loci than this value. Otherwise no alignments will be output, and the read will be counted as 'mapped to too many loci' in the Log.final.out. [STAR default] : 10 . [WDL default] : 20 . outFilterMultimapScoreRange (Int, default=1): the score range below the maximum score for multimapping alignments outFilterScoreMin (Int, default=0): alignment will be output only if its score is higher than or equal to this value outFilterScoreMinOverLread (Float, default=0.66): same as outFilterScoreMin, but normalized to read length (sum of mates' lengths for paired-end reads) outFilterType (String, default=\"Normal\"); description : type of filtering; choices : {'Normal': 'standard filtering using only current alignment', 'BySJout': 'keep only those reads that contain junctions that passed filtering into SJ.out.tab'} outQSconversionAdd (Int, default=0): add this number to the quality score (e.g. to convert from Illumina to Sanger, use -31) outSAMattrIHstart (Int, default=1): start value for the IH attribute. 0 may be required by some downstream software, such as Cufflinks or StringTie. outSAMattributes (String, default=\"NH HI AS nM NM MD XS\"); description : a string of desired SAM attributes, in the order desired for the output SAM. Tags can be listed in any combination/order. [STAR defaults] : NH HI AS nM . [WDL default] : NH HI AS nM NM MD XS .; choices : {'NH': 'number of loci the reads maps to: =1 for unique mappers, >1 for multimappers. Standard SAM tag.', 'HI': 'multiple alignment index, starts with --outSAMattrIHstart (=1 by default). Standard SAM tag.', 'AS': 'local alignment score, +1/-1 for matches/mismateches, score* penalties for indels and gaps. For PE reads, total score for two mates. Standard SAM tag.', 'nM': 'number of mismatches. For PE reads, sum over two mates.', 'NM': 'edit distance to the reference (number of mismatched + inserted + deleted bases) for each mate. Standard SAM tag.', 'MD': 'string encoding mismatched and deleted reference bases (see standard SAM specifications). Standard SAM tag.', 'jM': 'intron motifs for all junctions (i.e. N in CIGAR): 0: non-canonical; 1: GT/AG, 2: CT/AC, 3: GC/AG, 4: CT/GC, 5: AT/AC, 6: GT/AT. If splice junctions database is used, and a junction is annotated, 20 is added to its motif value.', 'jI': 'start and end of introns for all junctions (1-based).', 'XS': 'alignment strand according to --outSAMstrandField.', 'MC': \"mate's CIGAR string. Standard SAM tag.\", 'ch': 'marks all segments of all chimeric alignments for --chimOutType WithinBAM output.', 'cN': \"number of bases clipped from the read ends: 5' and 3'\"} outSAMflagAND (Int, default=65535): 0-65535 : sam FLAG will be bitwise AND'd with this value, i.e. FLAG=FLAG & outSAMflagOR. This is applied after all flags have been set by STAR, but before outSAMflagOR. Can be used to unset specific bits that are not set otherwise. outSAMflagOR (Int, default=0): 0-65535 : sam FLAG will be bitwise OR'd with this value, i.e. FLAG=FLAG | outSAMflagOR. This is applied after all flags have been set by STAR, and after outSAMflagAND. Can be used to set specific bits that are not set otherwise. outSAMmapqUnique (Int, default=255): 0-255 : the MAPQ value for unique mappers outSAMorder (String, default=\"Paired\"); description : type of sorting for the SAM output; choices : {'Paired': 'one mate after the other for all paired alignments', 'PairedKeepInputOrder': 'one mate after the other for all paired alignments, the order is kept the same as in the input FASTQ files'} outSAMreadID (String, default=\"Standard\"); description : read ID record type; choices : {'Standard': 'first word (until space) from the FASTx read ID line, removing /1,/2 from the end', 'Number': 'read number (index) in the FASTx file'} outSAMstrandField (String, default=\"intronMotif\"); description : Cufflinks-like strand field flag; choices : {'None': 'not used', 'intronMotif': 'strand derived from the intron motif. This option changes the output alignments: reads with inconsistent and/or non-canonical introns are filtered out.'} outSAMtlen (String, default=\"left_plus\"); description : calculation method for the TLEN field in the SAM/BAM files; choices : {'left_plus': 'leftmost base of the (+)strand mate to rightmost base of the (-)mate. (+)sign for the (+)strand mate', 'left_any': 'leftmost base of any mate to rightmost base of any mate. (+)sign for the mate with the leftmost base. This is different from left_plus for overlapping mates with protruding ends'} outSAMunmapped (String, default=\"Within\"); description : output of unmapped reads in the SAM format.; choices : {'None': 'no output [STAR default] ', 'Within': 'output unmapped reads within the main SAM file (i.e. Aligned.out.sam) [WDL default] '} outSJfilterCountTotalMin (SJ_Motifs, default={\"noncanonical_motifs\": 3, \"GT_AG_and_CT_AC_motif\": 1, \"GC_AG_and_CT_GC_motif\": 1, \"AT_AC_and_GT_AT_motif\": 1}): minimum total (multi-mapping+unique) read count per junction for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif. Junctions are output if one of outSJfilterCountUniqueMin OR outSJfilterCountTotalMin conditions are satisfied. Does not apply to annotated junctions. outSJfilterCountUniqueMin (SJ_Motifs, default={\"noncanonical_motifs\": 3, \"GT_AG_and_CT_AC_motif\": 1, \"GC_AG_and_CT_GC_motif\": 1, \"AT_AC_and_GT_AT_motif\": 1}): minimum uniquely mapping read count per junction for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif. Junctions are output if one of outSJfilterCountUniqueMin OR outSJfilterCountTotalMin conditions are satisfied. Does not apply to annotated junctions. outSJfilterDistToOtherSJmin (SJ_Motifs, default={\"noncanonical_motifs\": 10, \"GT_AG_and_CT_AC_motif\": 0, \"GC_AG_and_CT_GC_motif\": 5, \"AT_AC_and_GT_AT_motif\": 10}): minimum allowed distance to other junctions' donor/acceptor for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. Does not apply to annotated junctions. outSJfilterIntronMaxVsReadN (Array[Int], default=[50000, 100000, 200000]): maximum gap allowed for junctions supported by 1,2,3,,,N reads. i.e. by default junctions supported by 1 read can have gaps <=50000b, by 2 reads: <=100000b, by 3 reads: <=200000b. by >=4 reads any gap <=alignIntronMax. Does not apply to annotated junctions. outSJfilterOverhangMin (SJ_Motifs, default={\"noncanonical_motifs\": 30, \"GT_AG_and_CT_AC_motif\": 12, \"GC_AG_and_CT_GC_motif\": 12, \"AT_AC_and_GT_AT_motif\": 12}): minimum overhang length for splice junctions on both sides for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif. Does not apply to annotated junctions. outSJfilterReads (String, default=\"All\"); description : which reads to consider for collapsed splice junctions output; choices : {'All': 'all reads, unique- and multi-mappers', 'Unique': 'uniquely mapping reads only'} peOverlapMMp (Float, default=0.01): maximum proportion of mismatched bases in the overlap area peOverlapNbasesMin (Int, default=0): minimum number of overlap bases to trigger mates merging and realignment. Specify >0 value to switch on the 'merging of overlapping mates' algorithm. readMapNumber (Int, default=-1): number of reads to map from the beginning of the file. -1 to map all reads readNameSeparator (String, default=\"/\"): character(s) separating the part of the read names that will be trimmed in output (read name after space is always trimmed) readQualityScoreBase (Int, default=33): number to be subtracted from the ASCII code to get Phred quality score read_two_fastqs_gz (Array[File], default=[]): An array of gzipped FASTQ files containing read two information runRNGseed (Int, default=777): random number generator seed scoreDelBase (Int, default=-2): deletion extension penalty per base (in addition to scoreDelOpen) scoreDelOpen (Int, default=-2): deletion open penalty scoreGap (Int, default=0): splice junction penalty (independent on intron motif) scoreGapATAC (Int, default=-8): AT/AC and GT/AT junction penalty (in addition to scoreGap) scoreGapGCAG (Int, default=-4): GC/AG and CT/GC junction penalty (in addition to scoreGap) scoreGapNoncan (Int, default=-8): non-canonical junction penalty (in addition to scoreGap) scoreGenomicLengthLog2scale (Float, default=-0.25): extra score logarithmically scaled with genomic length of the alignment: scoreGenomicLengthLog2scale*log2(genomicLength) scoreInsBase (Int, default=-2): insertion extension penalty per base (in addition to scoreInsOpen) scoreInsOpen (Int, default=-2): insertion open penalty scoreStitchSJshift (Int, default=1): maximum score reduction while searching for SJ boundaries in the stitching step seedMapMin (Int, default=5): min length of seeds to be mapped seedMultimapNmax (Int, default=10000): only pieces that map fewer than this value are utilized in the stitching procedure seedNoneLociPerWindow (Int, default=10): max number of one seed loci per window seedPerReadNmax (Int, default=1000): max number of seeds per read seedPerWindowNmax (Int, default=50): max number of seeds per window seedSearchLmax (Int, default=0): defines the maximum length of the seeds, if =0 seed length is not limited seedSearchStartLmax (Int, default=50): defines the search start point through the read - the read is split into pieces no longer than this value seedSearchStartLmaxOverLread (Float, default=1.0): seedSearchStartLmax normalized to read length (sum of mates' lengths for paired-end reads) seedSplitMin (Int, default=12): min length of the seed sequences split by Ns or mate gap sjdbScore (Int, default=2): extra alignment score for alignments that cross database junctions twopass1readsN (Int, default=-1): number of reads to process for the 1st step. Use default ( -1 ) to map all reads in the first step twopassMode (String, default=\"Basic\"); description : 2-pass mapping mode; choices : {'None': '1-pass mapping [STAR default] ', 'Basic': 'basic 2-pass mapping, with all 1st pass junctions inserted into the genome indices on the fly [WDL default] '} use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. winAnchorDistNbins (Int, default=9): max number of bins between two anchors that allows aggregation of anchors into one window winAnchorMultimapNmax (Int, default=50): max number of loci anchors are allowed to map to winBinNbits (Int, default=16): =log2(winBin), where winBin is the size of the bin for the windows/clustering, each window will occupy an integer number of bins winFlankNbins (Int, default=4): =log2(winFlank), where winFlank is the size of the left and right flanking regions for each window Outputs star_log (File) star_bam (File) star_junctions (File) star_chimeric_junctions (File?)","title":"Star"},{"location":"tasks/star/#build_star_db","text":"description Runs STAR's build command to generate a STAR format reference for alignment outputs {'star_db': 'A gzipped TAR file containing the STAR reference files. Suitable as the star_db_tar_gz input to the alignment task.'}","title":"build_star_db"},{"location":"tasks/star/#inputs","text":"","title":"Inputs"},{"location":"tasks/star/#required","text":"_runtime (Any, required ) gtf (File, required ): GTF format feature file reference_fasta (File, required ): The FASTA format reference file for the genome","title":"Required"},{"location":"tasks/star/#defaults","text":"db_name (String, default=\"star_db\"): Name for output in compressed, archived format. The suffix .tar.gz will be added. genomeChrBinNbits (Int, default=18): =log2(chrBin), where chrBin is the size of the bins for genome storage: each chromosome will occupy an integer number of bins. For a genome with large number of contigs, it is recommended to scale this parameter as min(18, log2[max(GenomeLength/NumberOfReferences,ReadLength)]). genomeSAindexNbases (Int, default=14): length (bases) of the SA pre-indexing string. Typically between 10 and 15. Longer strings will use much more memory, but allow faster searches. For small genomes, the parameter --genomeSAindexNbases must be scaled down to min(14, log2(GenomeLength)/2 - 1) . genomeSAsparseD (Int, default=1): suffix array sparsity, i.e. distance between indices: use bigger numbers to decrease needed RAM at the cost of mapping speed reduction. genomeSuffixLengthMax (Int, default=-1): maximum length of the suffixes, has to be longer than read length. -1 = infinite. max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=50): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task sjdbGTFchrPrefix (String, default=\"-\"): prefix for chromosome names in a GTF file (e.g. 'chr' for using ENSMEBL annotations with UCSC genomes) sjdbGTFfeatureExon (String, default=\"exon\"): feature type in GTF file to be used as exons for building transcripts sjdbGTFtagExonParentGene (String, default=\"gene_id\"): GTF attribute name for parent gene ID sjdbGTFtagExonParentGeneName (String, default=\"gene_name\"): GTF attrbute name for parent gene name sjdbGTFtagExonParentGeneType (String, default=\"gene_type gene_biotype\"): GTF attrbute name for parent gene type sjdbGTFtagExonParentTranscript (String, default=\"transcript_id\"): GTF attribute name for parent transcript ID sjdbOverhang (Int, default=125): length of the donor/acceptor sequence on each side of the junctions, ideally = (mate_length - 1). [STAR default] : 100 . [WDL default] : 125 . use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments.","title":"Defaults"},{"location":"tasks/star/#outputs","text":"star_db (File)","title":"Outputs"},{"location":"tasks/star/#alignment","text":"description Runs the STAR aligner on a set of RNA-Seq FASTQ files external_help https://github.com/alexdobin/STAR/blob/2.7.10a/doc/STARmanual.pdf outputs {'star_log': 'Summary mapping statistics after mapping job is complete. The statistics are calculated for each read (single- or paired-end) and then summed or averaged over all reads. Note that STAR counts a paired-end read as one read. Most of the information is collected about the UNIQUE mappers. Each splicing is counted in the numbers of splices, which would correspond to summing the counts in SJ.out.tab. The mismatch/indel error rates are calculated on a per base basis, i.e. as total number of mismatches/indels in all unique mappers divided by the total number of mapped bases.', 'star_bam': 'STAR aligned BAM', 'star_junctions': {'description': 'File contains high confidence collapsed splice junctions in tab-delimited format. Note that STAR defines the junction start/end as intronic bases, while many other software define them as exonic bases. See meta.external_help for file specification.'}, 'star_chimeric_junctions': {'description': 'Tab delimited file containing chimeric reads and associated metadata. See meta.external_help for file specification.'}}","title":"alignment"},{"location":"tasks/star/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/star/#required_1","text":"_runtime (Any, required ) prefix (String, required ): Prefix for the BAM and other STAR files. The extensions .Aligned.out.bam , .Log.final.out , .SJ.out.tab , and .Chimeric.out.junction will be added. read_one_fastqs_gz (Array[File], required ): An array of gzipped FASTQ files containing read one information star_db_tar_gz (File, required ): A gzipped TAR file containing the STAR reference files. The name of the root directory which was archived must match the archive's filename without the .tar.gz extension.","title":"Required"},{"location":"tasks/star/#optional","text":"read_groups (String?): A string containing the read group information to output in the BAM file. If including multiple read group fields per-read group, they should be space delimited. Read groups should be comma separated, with a space on each side (i.e. ' , '). The ID field must come first for each read group and must be contained in the basename of a FASTQ file or pair of FASTQ files if Paired-End. Example: ID:rg1 PU:flowcell1.lane1 SM:sample1 PL:illumina LB:sample1_lib1 , ID:rg2 PU:flowcell1.lane2 SM:sample1 PL:illumina LB:sample1_lib1 . These two read groups could be associated with the following four FASTQs: sample1.rg1_R1.fastq,sample1.rg2_R1.fastq and sample1.rg1_R2.fastq,sample1.rg2_R2.fastq","title":"Optional"},{"location":"tasks/star/#defaults_1","text":"alignEndsProtrude (Pair[Int,String], default=(0, \"ConcordantPair\")); description : allow protrusion of alignment ends, i.e. start (end) of the +strand mate downstream of the start (end) of the -strand mate. left : maximum number of protrusion bases allowed. right : see choices below.; choices : {'ConcordantPair': 'report alignments with non-zero protrusion as concordant pairs', 'DiscordantPair': 'report alignments with non-zero protrusion as discordant pairs'} alignEndsType (String, default=\"Local\"); description : type of read ends alignment; choices : {'Local': 'standard local alignment with soft-clipping allowed', 'EndToEnd': 'force end-to-end read alignment, do not soft-clip', 'Extend5pOfRead1': 'fully extend only the 5p of the read1, all other ends: local alignment', 'Extend5pOfReads12': 'fully extend only the 5p of the both read1 and read2, all other ends: local alignment'} alignInsertionFlush (String, default=\"None\"); description : how to flush ambiguous insertion positions; choices : {'None': 'insertions are not flushed', 'Right': 'insertions are flushed to the right'} alignIntronMax (Int, default=500000): maximum intron size, if 0, max intron size will be determined by (2^winBinNbits) winAnchorDistNbins. [STAR default] : 0 . [WDL default] *: 500000 . alignIntronMin (Int, default=21): minimum intron size: genomic gap is considered intron if its length>=alignIntronMin, otherwise it is considered Deletion alignMatesGapMax (Int, default=1000000): maximum gap between two mates, if 0, max intron gap will be determined by (2^winBinNbits) winAnchorDistNbins. [STAR default] : 0 . [WDL default] *: 1000000 alignSJDBoverhangMin (Int, default=1): minimum overhang (i.e. block size) for annotated (sjdb) spliced alignments. [STAR default] : 3 . [WDL default] : 1 . alignSJoverhangMin (Int, default=5): minimum overhang (i.e. block size) for spliced alignments alignSJstitchMismatchNmax (SJ_Motifs, default={\"noncanonical_motifs\": 0, \"GT_AG_and_CT_AC_motif\": -1, \"GC_AG_and_CT_GC_motif\": 0, \"AT_AC_and_GT_AT_motif\": 0}): maximum number of mismatches for stitching of the splice junctions (-1: no limit) for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif alignSoftClipAtReferenceEnds (String, default=\"Yes\"); description : allow the soft-clipping of the alignments past the end of the chromosomes; choices : {'Yes': 'allow', 'No': 'prohibit, useful for compatibility with Cufflinks'} alignSplicedMateMapLmin (Int, default=0): minimum mapped length for a read mate that is spliced alignSplicedMateMapLminOverLmate (Float, default=0.66): alignSplicedMateMapLmin normalized to mate length alignTranscriptsPerReadNmax (Int, default=10000): max number of different alignments per read to consider alignTranscriptsPerWindowNmax (Int, default=100): max number of transcripts per window alignWindowsPerReadNmax (Int, default=10000): max number of windows per read chimFilter (String, default=\"banGenomicN\"); description : different filters for chimeric alignments; choices : {'None': 'no filtering', 'banGenomicN': 'Ns are not allowed in the genome sequence around the chimeric junction'} chimJunctionOverhangMin (Int, default=20): minimum overhang for a chimeric junction chimMainSegmentMultNmax (Int, default=10): maximum number of multi-alignments for the main chimeric segment. =1 will prohibit multimapping main segments. chimMultimapNmax (Int, default=0): maximum number of chimeric multi-alignments. 0 : use the old scheme for chimeric detection which only considered unique alignments chimMultimapScoreRange (Int, default=1): the score range for multi-mapping chimeras below the best chimeric score. Only works with --chimMultimapNmax > 1. chimNonchimScoreDropMin (Int, default=20): to trigger chimeric detection, the drop in the best non-chimeric alignment score with respect to the read length has to be greater than this value chimOutJunctionFormat (String, default=\"plain\"); description : formatting type for the Chimeric.out.junction file; choices : {'plain': 'no comment lines/headers', 'comments': 'comment lines at the end of the file: command line and Nreads: total, unique/multi-mapping'} chimOutType (String, default=\"Junctions\"); description : type of chimeric output; choices : {'Junctions': 'Chimeric.out.junction', 'WithinBAM_HardClip': 'output into main aligned BAM files (Aligned. .bam). Hard-clipping in the CIGAR for supplemental chimeric alignments.', 'WithinBAM_SoftClip': 'output into main aligned BAM files (Aligned. .bam). Soft-clipping in the CIGAR for supplemental chimeric alignments.'} chimScoreDropMax (Int, default=20): max drop (difference) of chimeric score (the sum of scores of all chimeric segments) from the read length chimScoreJunctionNonGTAG (Int, default=-1): penalty for a non-GT/AG chimeric junction chimScoreMin (Int, default=0): minimum total (summed) score of the chimeric segments chimScoreSeparation (Int, default=10): minimum difference (separation) between the best chimeric score and the next one chimSegmentMin (Int, default=0): minimum length of chimeric segment length, if ==0, no chimeric output chimSegmentReadGapMax (Int, default=0): maximum gap in the read sequence between chimeric segments clip3pAdapterMMp (Pair[Float,Float], default=(0.1, 0.1)): max proportion of mismatches for 3p adapter clipping for each mate. left applies to read one and right applies to read two. clip3pAdapterSeq (Pair[String,String], default=(\"None\", \"None\")); description : adapter sequences to clip from 3p of each mate. left applies to read one and right applies to read two.; choices : {'None': 'No 3p adapter trimming will be performed', 'sequence': 'A nucleotide sequence string of any length, matching the regex /[ATCG]+/ ', 'polyA': 'polyA sequence with the length equal to read length'} clip3pAfterAdapterNbases (Pair[Int,Int], default=(0, 0)): number of bases to clip from 3p of each mate after the adapter clipping. left applies to read one and right applies to read two. clip3pNbases (Pair[Int,Int], default=(0, 0)): number of bases to clip from 3p of each mate. left applies to read one and right applies to read two. clip5pNbases (Pair[Int,Int], default=(0, 0)): number of bases to clip from 5p of each mate. left applies to read one and right applies to read two. clipAdapterType (String, default=\"Hamming\"); description : adapter clipping type; choices : {'Hamming': 'adapter clipping based on Hamming distance, with the number of mismatches controlled by --clip5pAdapterMMp', 'CellRanger4': '5p and 3p adapter clipping similar to CellRanger4. Utilizes Opal package by Martin \u0160o\u0161i\u0107: https://github.com/Martinsos/opal', 'None': 'no adapter clipping, all other clip* parameters are disregarded'} limitOutSJcollapsed (Int, default=1000000): max number of collapsed junctions limitOutSJoneRead (Int, default=1000): max number of junctions for one read (including all multi-mappers) limitSjdbInsertNsj (Int, default=1000000): maximum number of junction to be inserted to the genome on the fly at the mapping stage, including those from annotations and those detected in the 1st step of the 2-pass run max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=50): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. ncpu (Int, default=1): Number of cores to allocate for task outFilterIntronMotifs (String, default=\"None\"); description : filter alignment using their motifs; choices : {'None': 'no filtering', 'RemoveNoncanonical': 'filter out alignments that contain non-canonical junctions', 'RemoveNoncanonicalUnannotated': 'filter out alignments that contain non-canonical unannotated junctions when using annotated splice junctions database. The annotated non-canonical junctions will be kept.'} outFilterIntronStrands (String, default=\"RemoveInconsistentStrands\"); description : filter alignments; choices : {'None': 'no filtering', 'RemoveInconsistentStrands': 'remove alignments that have junctions with inconsistent strands'} outFilterMatchNmin (Int, default=0): alignment will be output only if the number of matched bases is higher than or equal to this value outFilterMatchNminOverLread (Float, default=0.66): same as outFilterMatchNmin, but normalized to the read length (sum of mates' lengths for paired-end reads) outFilterMismatchNmax (Int, default=10): alignment will be output only if it has no more mismatches than this value outFilterMismatchNoverLmax (Float, default=0.3): alignment will be output only if its ratio of mismatches to mapped length is less than or equal to this value outFilterMismatchNoverReadLmax (Float, default=1.0): alignment will be output only if its ratio of mismatches to read length is less than or equal to this value outFilterMultimapNmax (Int, default=20): maximum number of loci the read is allowed to map to. Alignments (all of them) will be output only if the read maps to no more loci than this value. Otherwise no alignments will be output, and the read will be counted as 'mapped to too many loci' in the Log.final.out. [STAR default] : 10 . [WDL default] : 20 . outFilterMultimapScoreRange (Int, default=1): the score range below the maximum score for multimapping alignments outFilterScoreMin (Int, default=0): alignment will be output only if its score is higher than or equal to this value outFilterScoreMinOverLread (Float, default=0.66): same as outFilterScoreMin, but normalized to read length (sum of mates' lengths for paired-end reads) outFilterType (String, default=\"Normal\"); description : type of filtering; choices : {'Normal': 'standard filtering using only current alignment', 'BySJout': 'keep only those reads that contain junctions that passed filtering into SJ.out.tab'} outQSconversionAdd (Int, default=0): add this number to the quality score (e.g. to convert from Illumina to Sanger, use -31) outSAMattrIHstart (Int, default=1): start value for the IH attribute. 0 may be required by some downstream software, such as Cufflinks or StringTie. outSAMattributes (String, default=\"NH HI AS nM NM MD XS\"); description : a string of desired SAM attributes, in the order desired for the output SAM. Tags can be listed in any combination/order. [STAR defaults] : NH HI AS nM . [WDL default] : NH HI AS nM NM MD XS .; choices : {'NH': 'number of loci the reads maps to: =1 for unique mappers, >1 for multimappers. Standard SAM tag.', 'HI': 'multiple alignment index, starts with --outSAMattrIHstart (=1 by default). Standard SAM tag.', 'AS': 'local alignment score, +1/-1 for matches/mismateches, score* penalties for indels and gaps. For PE reads, total score for two mates. Standard SAM tag.', 'nM': 'number of mismatches. For PE reads, sum over two mates.', 'NM': 'edit distance to the reference (number of mismatched + inserted + deleted bases) for each mate. Standard SAM tag.', 'MD': 'string encoding mismatched and deleted reference bases (see standard SAM specifications). Standard SAM tag.', 'jM': 'intron motifs for all junctions (i.e. N in CIGAR): 0: non-canonical; 1: GT/AG, 2: CT/AC, 3: GC/AG, 4: CT/GC, 5: AT/AC, 6: GT/AT. If splice junctions database is used, and a junction is annotated, 20 is added to its motif value.', 'jI': 'start and end of introns for all junctions (1-based).', 'XS': 'alignment strand according to --outSAMstrandField.', 'MC': \"mate's CIGAR string. Standard SAM tag.\", 'ch': 'marks all segments of all chimeric alignments for --chimOutType WithinBAM output.', 'cN': \"number of bases clipped from the read ends: 5' and 3'\"} outSAMflagAND (Int, default=65535): 0-65535 : sam FLAG will be bitwise AND'd with this value, i.e. FLAG=FLAG & outSAMflagOR. This is applied after all flags have been set by STAR, but before outSAMflagOR. Can be used to unset specific bits that are not set otherwise. outSAMflagOR (Int, default=0): 0-65535 : sam FLAG will be bitwise OR'd with this value, i.e. FLAG=FLAG | outSAMflagOR. This is applied after all flags have been set by STAR, and after outSAMflagAND. Can be used to set specific bits that are not set otherwise. outSAMmapqUnique (Int, default=255): 0-255 : the MAPQ value for unique mappers outSAMorder (String, default=\"Paired\"); description : type of sorting for the SAM output; choices : {'Paired': 'one mate after the other for all paired alignments', 'PairedKeepInputOrder': 'one mate after the other for all paired alignments, the order is kept the same as in the input FASTQ files'} outSAMreadID (String, default=\"Standard\"); description : read ID record type; choices : {'Standard': 'first word (until space) from the FASTx read ID line, removing /1,/2 from the end', 'Number': 'read number (index) in the FASTx file'} outSAMstrandField (String, default=\"intronMotif\"); description : Cufflinks-like strand field flag; choices : {'None': 'not used', 'intronMotif': 'strand derived from the intron motif. This option changes the output alignments: reads with inconsistent and/or non-canonical introns are filtered out.'} outSAMtlen (String, default=\"left_plus\"); description : calculation method for the TLEN field in the SAM/BAM files; choices : {'left_plus': 'leftmost base of the (+)strand mate to rightmost base of the (-)mate. (+)sign for the (+)strand mate', 'left_any': 'leftmost base of any mate to rightmost base of any mate. (+)sign for the mate with the leftmost base. This is different from left_plus for overlapping mates with protruding ends'} outSAMunmapped (String, default=\"Within\"); description : output of unmapped reads in the SAM format.; choices : {'None': 'no output [STAR default] ', 'Within': 'output unmapped reads within the main SAM file (i.e. Aligned.out.sam) [WDL default] '} outSJfilterCountTotalMin (SJ_Motifs, default={\"noncanonical_motifs\": 3, \"GT_AG_and_CT_AC_motif\": 1, \"GC_AG_and_CT_GC_motif\": 1, \"AT_AC_and_GT_AT_motif\": 1}): minimum total (multi-mapping+unique) read count per junction for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif. Junctions are output if one of outSJfilterCountUniqueMin OR outSJfilterCountTotalMin conditions are satisfied. Does not apply to annotated junctions. outSJfilterCountUniqueMin (SJ_Motifs, default={\"noncanonical_motifs\": 3, \"GT_AG_and_CT_AC_motif\": 1, \"GC_AG_and_CT_GC_motif\": 1, \"AT_AC_and_GT_AT_motif\": 1}): minimum uniquely mapping read count per junction for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif. Junctions are output if one of outSJfilterCountUniqueMin OR outSJfilterCountTotalMin conditions are satisfied. Does not apply to annotated junctions. outSJfilterDistToOtherSJmin (SJ_Motifs, default={\"noncanonical_motifs\": 10, \"GT_AG_and_CT_AC_motif\": 0, \"GC_AG_and_CT_GC_motif\": 5, \"AT_AC_and_GT_AT_motif\": 10}): minimum allowed distance to other junctions' donor/acceptor for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. Does not apply to annotated junctions. outSJfilterIntronMaxVsReadN (Array[Int], default=[50000, 100000, 200000]): maximum gap allowed for junctions supported by 1,2,3,,,N reads. i.e. by default junctions supported by 1 read can have gaps <=50000b, by 2 reads: <=100000b, by 3 reads: <=200000b. by >=4 reads any gap <=alignIntronMax. Does not apply to annotated junctions. outSJfilterOverhangMin (SJ_Motifs, default={\"noncanonical_motifs\": 30, \"GT_AG_and_CT_AC_motif\": 12, \"GC_AG_and_CT_GC_motif\": 12, \"AT_AC_and_GT_AT_motif\": 12}): minimum overhang length for splice junctions on both sides for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif. Does not apply to annotated junctions. outSJfilterReads (String, default=\"All\"); description : which reads to consider for collapsed splice junctions output; choices : {'All': 'all reads, unique- and multi-mappers', 'Unique': 'uniquely mapping reads only'} peOverlapMMp (Float, default=0.01): maximum proportion of mismatched bases in the overlap area peOverlapNbasesMin (Int, default=0): minimum number of overlap bases to trigger mates merging and realignment. Specify >0 value to switch on the 'merging of overlapping mates' algorithm. readMapNumber (Int, default=-1): number of reads to map from the beginning of the file. -1 to map all reads readNameSeparator (String, default=\"/\"): character(s) separating the part of the read names that will be trimmed in output (read name after space is always trimmed) readQualityScoreBase (Int, default=33): number to be subtracted from the ASCII code to get Phred quality score read_two_fastqs_gz (Array[File], default=[]): An array of gzipped FASTQ files containing read two information runRNGseed (Int, default=777): random number generator seed scoreDelBase (Int, default=-2): deletion extension penalty per base (in addition to scoreDelOpen) scoreDelOpen (Int, default=-2): deletion open penalty scoreGap (Int, default=0): splice junction penalty (independent on intron motif) scoreGapATAC (Int, default=-8): AT/AC and GT/AT junction penalty (in addition to scoreGap) scoreGapGCAG (Int, default=-4): GC/AG and CT/GC junction penalty (in addition to scoreGap) scoreGapNoncan (Int, default=-8): non-canonical junction penalty (in addition to scoreGap) scoreGenomicLengthLog2scale (Float, default=-0.25): extra score logarithmically scaled with genomic length of the alignment: scoreGenomicLengthLog2scale*log2(genomicLength) scoreInsBase (Int, default=-2): insertion extension penalty per base (in addition to scoreInsOpen) scoreInsOpen (Int, default=-2): insertion open penalty scoreStitchSJshift (Int, default=1): maximum score reduction while searching for SJ boundaries in the stitching step seedMapMin (Int, default=5): min length of seeds to be mapped seedMultimapNmax (Int, default=10000): only pieces that map fewer than this value are utilized in the stitching procedure seedNoneLociPerWindow (Int, default=10): max number of one seed loci per window seedPerReadNmax (Int, default=1000): max number of seeds per read seedPerWindowNmax (Int, default=50): max number of seeds per window seedSearchLmax (Int, default=0): defines the maximum length of the seeds, if =0 seed length is not limited seedSearchStartLmax (Int, default=50): defines the search start point through the read - the read is split into pieces no longer than this value seedSearchStartLmaxOverLread (Float, default=1.0): seedSearchStartLmax normalized to read length (sum of mates' lengths for paired-end reads) seedSplitMin (Int, default=12): min length of the seed sequences split by Ns or mate gap sjdbScore (Int, default=2): extra alignment score for alignments that cross database junctions twopass1readsN (Int, default=-1): number of reads to process for the 1st step. Use default ( -1 ) to map all reads in the first step twopassMode (String, default=\"Basic\"); description : 2-pass mapping mode; choices : {'None': '1-pass mapping [STAR default] ', 'Basic': 'basic 2-pass mapping, with all 1st pass junctions inserted into the genome indices on the fly [WDL default] '} use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. winAnchorDistNbins (Int, default=9): max number of bins between two anchors that allows aggregation of anchors into one window winAnchorMultimapNmax (Int, default=50): max number of loci anchors are allowed to map to winBinNbits (Int, default=16): =log2(winBin), where winBin is the size of the bin for the windows/clustering, each window will occupy an integer number of bins winFlankNbins (Int, default=4): =log2(winFlank), where winFlank is the size of the left and right flanking regions for each window","title":"Defaults"},{"location":"tasks/star/#outputs_1","text":"star_log (File) star_bam (File) star_junctions (File) star_chimeric_junctions (File?)","title":"Outputs"},{"location":"tasks/util/","text":"Utilities download description Uses wget to download a file from a remote URL to the local filesystem outputs {'downloaded_file': 'File downloaded from provided URL'} Inputs Required _runtime (Any, required ) disk_size_gb (Int, required ): Disk space to allocate for task, specified in GB outfile_name (String, required ): Name of the output file url (String, required ): URL of the file to download Optional md5sum (String?): Optional md5sum to check against downloaded file. Recommended to use in order to catch corruption or an unintentional file swap. Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB Outputs downloaded_file (File) get_read_groups description Gets read group information from a BAM file and writes it out to as a string outputs {'read_groups': 'An array of strings containing read group information. If format_for_star = true , all found read groups are contained in one string ( read_groups[0] ). If format_for_star = false , each found @RG line will be its own entry in output array read_groups .'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to get read groups from Defaults format_for_star (Boolean, default=true): Format read group information for the STAR aligner (true) or output @RG lines of the header without further processing (false)? STAR formatted results will be an array of length 1, where all found read groups are contained in one string ( read_groups[0] ). If no processing is selected, each found @RG line will be its own entry in output array read_groups . max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. Outputs read_groups (Array[String]) split_string description Split a string into an array of strings based on a delimiter outputs {'split_string': 'Split string as an array'} Inputs Required _runtime (Any, required ) input_string (String, required ): String to split on occurences of delimiter Defaults delimiter (String, default=\" , \"): Delimiter on which to split input_string disk_size_gb (Int, default=10): Disk space to allocate for task, specified in GB max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB Outputs split_strings (Array[String]) calc_gene_lengths description Calculate gene lengths from a GTF feature file outputs {'gene_lengths': 'A two column headered TSV file with gene names in the first column and feature lengths (as integers) in the second column'} Inputs Required _runtime (Any, required ) gtf (File, required ): GTF feature file Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=8): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. outfile_name (String, default=basename(gtf,\".gtf.gz\") + \".genelengths.txt\"): Name of the gene lengths file Outputs gene_lengths (File) compression_integrity description Checks the compression integrity of a bgzipped file outputs {'check': 'Dummy output to indicate success and to enable call-caching'} Inputs Required _runtime (Any, required ) bgzipped_file (File, required ): Input bgzipped file to check integrity of Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. Outputs check (String) add_to_bam_header description Adds another line of text to the bottom of a BAM header outputs {'reheadered_bam': 'The BAM after its header has been modified'} Inputs Required _runtime (Any, required ) additional_header (String, required ): A string to add as a new line in the BAM header. No format checking is done, so please ensure you do not invalidate your BAM with this task. Add only spec compliant entries to the header. bam (File, required ): Input BAM format file which will have its header added to Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".reheader\"): Prefix for the reheadered BAM. The extension .bam will be added. Outputs reheadered_bam (File) unpack_tarball description Accepts a .tar.gz archive and converts it into a flat array of files. Any directory structure of the archive is ignored. outputs {'tarball_contents': 'An array of files found in the input tarball'} Inputs Required _runtime (Any, required ) tarball (File, required ): A .tar.gz archive to unpack into individual files Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. Outputs tarball_contents (Array[File]) make_coverage_regions_beds description Takes in a GTF file, converts it to BED, then filters it down to two 3 column BED files: one of only 'exons', one of only 'CDS' regions outputs {'bed': 'Input GTF converted into BED format using the gtf2bed program', 'exon_bed': \"3 column BED file corresponding to all 'exons' found in the input GTF\", 'CDS_bed': \"3 column BED file corresponding to all 'CDS' regions found in the input GTF\"} Inputs Required _runtime (Any, required ) gtf (File, required ): GTF feature file from which to derive coverage regions BED files Defaults max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. Outputs bed (File) exon_bed (File) CDS_bed (File) global_phred_scores description Calculates statistics about PHRED scores of the input BAM outputs {'phred_scores': 'Headered TSV file containing PHRED score statistics'} Inputs Required _runtime (Any, required ) bam (File, required ): Input BAM format file to calculate PHRED score statistics for Defaults fast_mode (Boolean, default=true): Enable fast mode (true) or calculate statistics for every base in the BAM (false)? max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\")): Prefix for the output TSV file. The extension .global_PHRED_scores.tsv will be added. Outputs phred_scores (File) qc_summary description [OUT OF DATE] This WDL task pulls out keys metrics that can provide a high level overview of the sample, without needing to examine the entire MultiQC report. Currently, these key metrics come from Qualimap and ngsderive. Inputs Required _runtime (Any, required ) multiqc_tar_gz (File, required ) Defaults disk_size_gb (Int, default=10) max_retries (Int, default=1) memory_gb (Int, default=4) outfile_name (String, default=basename(multiqc_tar_gz,\".multiqc.tar.gz\") + \".qc_summary.json\") Outputs summary (File)","title":"Utilities"},{"location":"tasks/util/#utilities","text":"","title":"Utilities"},{"location":"tasks/util/#download","text":"description Uses wget to download a file from a remote URL to the local filesystem outputs {'downloaded_file': 'File downloaded from provided URL'}","title":"download"},{"location":"tasks/util/#inputs","text":"","title":"Inputs"},{"location":"tasks/util/#required","text":"_runtime (Any, required ) disk_size_gb (Int, required ): Disk space to allocate for task, specified in GB outfile_name (String, required ): Name of the output file url (String, required ): URL of the file to download","title":"Required"},{"location":"tasks/util/#optional","text":"md5sum (String?): Optional md5sum to check against downloaded file. Recommended to use in order to catch corruption or an unintentional file swap.","title":"Optional"},{"location":"tasks/util/#defaults","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB","title":"Defaults"},{"location":"tasks/util/#outputs","text":"downloaded_file (File)","title":"Outputs"},{"location":"tasks/util/#get_read_groups","text":"description Gets read group information from a BAM file and writes it out to as a string outputs {'read_groups': 'An array of strings containing read group information. If format_for_star = true , all found read groups are contained in one string ( read_groups[0] ). If format_for_star = false , each found @RG line will be its own entry in output array read_groups .'}","title":"get_read_groups"},{"location":"tasks/util/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/util/#required_1","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to get read groups from","title":"Required"},{"location":"tasks/util/#defaults_1","text":"format_for_star (Boolean, default=true): Format read group information for the STAR aligner (true) or output @RG lines of the header without further processing (false)? STAR formatted results will be an array of length 1, where all found read groups are contained in one string ( read_groups[0] ). If no processing is selected, each found @RG line will be its own entry in output array read_groups . max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB.","title":"Defaults"},{"location":"tasks/util/#outputs_1","text":"read_groups (Array[String])","title":"Outputs"},{"location":"tasks/util/#split_string","text":"description Split a string into an array of strings based on a delimiter outputs {'split_string': 'Split string as an array'}","title":"split_string"},{"location":"tasks/util/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/util/#required_2","text":"_runtime (Any, required ) input_string (String, required ): String to split on occurences of delimiter","title":"Required"},{"location":"tasks/util/#defaults_2","text":"delimiter (String, default=\" , \"): Delimiter on which to split input_string disk_size_gb (Int, default=10): Disk space to allocate for task, specified in GB max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB","title":"Defaults"},{"location":"tasks/util/#outputs_2","text":"split_strings (Array[String])","title":"Outputs"},{"location":"tasks/util/#calc_gene_lengths","text":"description Calculate gene lengths from a GTF feature file outputs {'gene_lengths': 'A two column headered TSV file with gene names in the first column and feature lengths (as integers) in the second column'}","title":"calc_gene_lengths"},{"location":"tasks/util/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/util/#required_3","text":"_runtime (Any, required ) gtf (File, required ): GTF feature file","title":"Required"},{"location":"tasks/util/#defaults_3","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=8): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. outfile_name (String, default=basename(gtf,\".gtf.gz\") + \".genelengths.txt\"): Name of the gene lengths file","title":"Defaults"},{"location":"tasks/util/#outputs_3","text":"gene_lengths (File)","title":"Outputs"},{"location":"tasks/util/#compression_integrity","text":"description Checks the compression integrity of a bgzipped file outputs {'check': 'Dummy output to indicate success and to enable call-caching'}","title":"compression_integrity"},{"location":"tasks/util/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/util/#required_4","text":"_runtime (Any, required ) bgzipped_file (File, required ): Input bgzipped file to check integrity of","title":"Required"},{"location":"tasks/util/#defaults_4","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB.","title":"Defaults"},{"location":"tasks/util/#outputs_4","text":"check (String)","title":"Outputs"},{"location":"tasks/util/#add_to_bam_header","text":"description Adds another line of text to the bottom of a BAM header outputs {'reheadered_bam': 'The BAM after its header has been modified'}","title":"add_to_bam_header"},{"location":"tasks/util/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/util/#required_5","text":"_runtime (Any, required ) additional_header (String, required ): A string to add as a new line in the BAM header. No format checking is done, so please ensure you do not invalidate your BAM with this task. Add only spec compliant entries to the header. bam (File, required ): Input BAM format file which will have its header added to","title":"Required"},{"location":"tasks/util/#defaults_5","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\") + \".reheader\"): Prefix for the reheadered BAM. The extension .bam will be added.","title":"Defaults"},{"location":"tasks/util/#outputs_5","text":"reheadered_bam (File)","title":"Outputs"},{"location":"tasks/util/#unpack_tarball","text":"description Accepts a .tar.gz archive and converts it into a flat array of files. Any directory structure of the archive is ignored. outputs {'tarball_contents': 'An array of files found in the input tarball'}","title":"unpack_tarball"},{"location":"tasks/util/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/util/#required_6","text":"_runtime (Any, required ) tarball (File, required ): A .tar.gz archive to unpack into individual files","title":"Required"},{"location":"tasks/util/#defaults_6","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB.","title":"Defaults"},{"location":"tasks/util/#outputs_6","text":"tarball_contents (Array[File])","title":"Outputs"},{"location":"tasks/util/#make_coverage_regions_beds","text":"description Takes in a GTF file, converts it to BED, then filters it down to two 3 column BED files: one of only 'exons', one of only 'CDS' regions outputs {'bed': 'Input GTF converted into BED format using the gtf2bed program', 'exon_bed': \"3 column BED file corresponding to all 'exons' found in the input GTF\", 'CDS_bed': \"3 column BED file corresponding to all 'CDS' regions found in the input GTF\"}","title":"make_coverage_regions_beds"},{"location":"tasks/util/#inputs_7","text":"","title":"Inputs"},{"location":"tasks/util/#required_7","text":"_runtime (Any, required ) gtf (File, required ): GTF feature file from which to derive coverage regions BED files","title":"Required"},{"location":"tasks/util/#defaults_7","text":"max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB.","title":"Defaults"},{"location":"tasks/util/#outputs_7","text":"bed (File) exon_bed (File) CDS_bed (File)","title":"Outputs"},{"location":"tasks/util/#global_phred_scores","text":"description Calculates statistics about PHRED scores of the input BAM outputs {'phred_scores': 'Headered TSV file containing PHRED score statistics'}","title":"global_phred_scores"},{"location":"tasks/util/#inputs_8","text":"","title":"Inputs"},{"location":"tasks/util/#required_8","text":"_runtime (Any, required ) bam (File, required ): Input BAM format file to calculate PHRED score statistics for","title":"Required"},{"location":"tasks/util/#defaults_8","text":"fast_mode (Boolean, default=true): Enable fast mode (true) or calculate statistics for every base in the BAM (false)? max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB modify_disk_size_gb (Int, default=0): Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs. Specified in GB. prefix (String, default=basename(bam,\".bam\")): Prefix for the output TSV file. The extension .global_PHRED_scores.tsv will be added.","title":"Defaults"},{"location":"tasks/util/#outputs_8","text":"phred_scores (File)","title":"Outputs"},{"location":"tasks/util/#qc_summary","text":"description [OUT OF DATE] This WDL task pulls out keys metrics that can provide a high level overview of the sample, without needing to examine the entire MultiQC report. Currently, these key metrics come from Qualimap and ngsderive.","title":"qc_summary"},{"location":"tasks/util/#inputs_9","text":"","title":"Inputs"},{"location":"tasks/util/#required_9","text":"_runtime (Any, required ) multiqc_tar_gz (File, required )","title":"Required"},{"location":"tasks/util/#defaults_9","text":"disk_size_gb (Int, default=10) max_retries (Int, default=1) memory_gb (Int, default=4) outfile_name (String, default=basename(multiqc_tar_gz,\".multiqc.tar.gz\") + \".qc_summary.json\")","title":"Defaults"},{"location":"tasks/util/#outputs_9","text":"summary (File)","title":"Outputs"},{"location":"workflows/10x-bam-to-fastqs/","text":"Cell Ranger BAM to FASTQs This WDL workflow converts an input BAM file to a set of FASTQ files. It performs QC checks along the way to validate the input and output. Output: read1s an array of files with the first read in the pair read2s an array of files with the second read in the pair fastqs an array of files sufficient for localizing in Cell Ranger's expected format fastqs_archive a compressed archive containing the array of FASTQ files LICENSING: MIT License Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. cell_ranger_bam_to_fastqs Inputs Required bam (File, required ): BAM file to split into FASTQs. bamtofastq._runtime (Any, required ) fqlint._runtime (Any, required ) quickcheck._runtime (Any, required ) Optional max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. Defaults cellranger11 (Boolean, default=false): Convert a BAM produced by Cell Ranger 1.0-1.1 gemcode (Boolean, default=false): Convert a BAM produced from GemCode data (Longranger 1.0 - 1.3) longranger20 (Boolean, default=false): Convert a BAM produced by Longranger 2.0 use_all_cores (Boolean, default=false): Use all cores for multi-core steps? bamtofastq.memory_gb (Int, default=40) bamtofastq.modify_disk_size_gb (Int, default=0) bamtofastq.ncpu (Int, default=1) fqlint.disable_validator_codes (Array[String], default=[]) fqlint.modify_disk_size_gb (Int, default=0) fqlint.modify_memory_gb (Int, default=0) fqlint.paired_read_validation_level (String, default=\"high\") fqlint.panic (Boolean, default=true) fqlint.single_read_validation_level (String, default=\"high\") quickcheck.memory_gb (Int, default=4) quickcheck.modify_disk_size_gb (Int, default=0) Outputs fastqs (Array[File]) fastqs_archive (File) read1s (Array[File]) read2s (Array[File]) parse_input Inputs Required _runtime (Any, required ) cellranger11 (Boolean, required ) gemcode (Boolean, required ) longranger20 (Boolean, required ) Defaults disk_size_gb (Int, default=10) max_retries (Int, default=1) memory_gb (Int, default=4) Outputs input_check (String)","title":"Cell Ranger BAM to FASTQs"},{"location":"workflows/10x-bam-to-fastqs/#cell-ranger-bam-to-fastqs","text":"This WDL workflow converts an input BAM file to a set of FASTQ files. It performs QC checks along the way to validate the input and output.","title":"Cell Ranger BAM to FASTQs"},{"location":"workflows/10x-bam-to-fastqs/#output","text":"read1s an array of files with the first read in the pair read2s an array of files with the second read in the pair fastqs an array of files sufficient for localizing in Cell Ranger's expected format fastqs_archive a compressed archive containing the array of FASTQ files","title":"Output:"},{"location":"workflows/10x-bam-to-fastqs/#licensing","text":"","title":"LICENSING:"},{"location":"workflows/10x-bam-to-fastqs/#mit-license","text":"Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"workflows/10x-bam-to-fastqs/#cell_ranger_bam_to_fastqs","text":"","title":"cell_ranger_bam_to_fastqs"},{"location":"workflows/10x-bam-to-fastqs/#inputs","text":"","title":"Inputs"},{"location":"workflows/10x-bam-to-fastqs/#required","text":"bam (File, required ): BAM file to split into FASTQs. bamtofastq._runtime (Any, required ) fqlint._runtime (Any, required ) quickcheck._runtime (Any, required )","title":"Required"},{"location":"workflows/10x-bam-to-fastqs/#optional","text":"max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults.","title":"Optional"},{"location":"workflows/10x-bam-to-fastqs/#defaults","text":"cellranger11 (Boolean, default=false): Convert a BAM produced by Cell Ranger 1.0-1.1 gemcode (Boolean, default=false): Convert a BAM produced from GemCode data (Longranger 1.0 - 1.3) longranger20 (Boolean, default=false): Convert a BAM produced by Longranger 2.0 use_all_cores (Boolean, default=false): Use all cores for multi-core steps? bamtofastq.memory_gb (Int, default=40) bamtofastq.modify_disk_size_gb (Int, default=0) bamtofastq.ncpu (Int, default=1) fqlint.disable_validator_codes (Array[String], default=[]) fqlint.modify_disk_size_gb (Int, default=0) fqlint.modify_memory_gb (Int, default=0) fqlint.paired_read_validation_level (String, default=\"high\") fqlint.panic (Boolean, default=true) fqlint.single_read_validation_level (String, default=\"high\") quickcheck.memory_gb (Int, default=4) quickcheck.modify_disk_size_gb (Int, default=0)","title":"Defaults"},{"location":"workflows/10x-bam-to-fastqs/#outputs","text":"fastqs (Array[File]) fastqs_archive (File) read1s (Array[File]) read2s (Array[File])","title":"Outputs"},{"location":"workflows/10x-bam-to-fastqs/#parse_input","text":"","title":"parse_input"},{"location":"workflows/10x-bam-to-fastqs/#inputs_1","text":"","title":"Inputs"},{"location":"workflows/10x-bam-to-fastqs/#required_1","text":"_runtime (Any, required ) cellranger11 (Boolean, required ) gemcode (Boolean, required ) longranger20 (Boolean, required )","title":"Required"},{"location":"workflows/10x-bam-to-fastqs/#defaults_1","text":"disk_size_gb (Int, default=10) max_retries (Int, default=1) memory_gb (Int, default=4)","title":"Defaults"},{"location":"workflows/10x-bam-to-fastqs/#outputs_1","text":"input_check (String)","title":"Outputs"},{"location":"workflows/ESTIMATE/","text":"estimate description Runs the ESTIMATE software package on a feature counts file external_help https://bioinformatics.mdanderson.org/estimate/ outputs {'tpm': 'Transcripts Per Million file', 'estimate_result': 'Final output of ESTIMATE'} Inputs Required counts_file (File, required ): A two column headerless TSV file with gene names in the first column and counts (as integers) in the second column. Entries starting with '__' will be discarded. Can be generated with htseq.wdl . gene_lengths_file (File, required ): A two column headered TSV file with gene names (matching those in the counts file) in the first column and feature lengths (as integers) in the second column. Can be generated with calc-gene-lengths.wdl . calc_tpm._runtime (Any, required ) run_estimate._runtime (Any, required ) Optional max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. Defaults calc_tpm.disk_size_gb (Int, default=10) calc_tpm.memory_gb (Int, default=4) calc_tpm.prefix (String, default=basename(counts,\".feature-counts.txt\")) run_estimate.disk_size_gb (Int, default=10) run_estimate.memory_gb (Int, default=4) run_estimate.outfile_name (String, default=basename(gene_expression_file,\".TPM.txt\") + \".ESTIMATE.gct\") Outputs tpm (File) estimate_result (File)","title":"ESTIMATE"},{"location":"workflows/ESTIMATE/#estimate","text":"description Runs the ESTIMATE software package on a feature counts file external_help https://bioinformatics.mdanderson.org/estimate/ outputs {'tpm': 'Transcripts Per Million file', 'estimate_result': 'Final output of ESTIMATE'}","title":"estimate"},{"location":"workflows/ESTIMATE/#inputs","text":"","title":"Inputs"},{"location":"workflows/ESTIMATE/#required","text":"counts_file (File, required ): A two column headerless TSV file with gene names in the first column and counts (as integers) in the second column. Entries starting with '__' will be discarded. Can be generated with htseq.wdl . gene_lengths_file (File, required ): A two column headered TSV file with gene names (matching those in the counts file) in the first column and feature lengths (as integers) in the second column. Can be generated with calc-gene-lengths.wdl . calc_tpm._runtime (Any, required ) run_estimate._runtime (Any, required )","title":"Required"},{"location":"workflows/ESTIMATE/#optional","text":"max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults.","title":"Optional"},{"location":"workflows/ESTIMATE/#defaults","text":"calc_tpm.disk_size_gb (Int, default=10) calc_tpm.memory_gb (Int, default=4) calc_tpm.prefix (String, default=basename(counts,\".feature-counts.txt\")) run_estimate.disk_size_gb (Int, default=10) run_estimate.memory_gb (Int, default=4) run_estimate.outfile_name (String, default=basename(gene_expression_file,\".TPM.txt\") + \".ESTIMATE.gct\")","title":"Defaults"},{"location":"workflows/ESTIMATE/#outputs","text":"tpm (File) estimate_result (File)","title":"Outputs"},{"location":"workflows/bam-to-fastqs/","text":"bam_to_fastqs description Converts an input BAM file to one or more FASTQ files, performing QC checks along the way outputs {'read1s': 'Array of FASTQ files corresponding to either first reads (if paired_end = true ) or all reads (if paired_end = false )', 'read2s': 'Array of FASTQ files corresponding to last reads (if paired_end = true )'} Inputs Required bam (File, required ): BAM file to split into FASTQs bam_to_fastq._runtime (Any, required ) fqlint._runtime (Any, required ) quickcheck._runtime (Any, required ) split._runtime (Any, required ) Optional max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. Defaults paired_end (Boolean, default=true): Is the data paired-end (true) or single-end (false)? use_all_cores (Boolean, default=false): Use all cores for multi-core steps? bam_to_fastq.F (String, default=\"0x900\") bam_to_fastq.G (String, default=\"0\") bam_to_fastq.f (String, default=\"0\") bam_to_fastq.fail_on_unexpected_reads (Boolean, default=false) bam_to_fastq.fast_mode (Boolean, default=true) bam_to_fastq.modify_disk_size_gb (Int, default=0) bam_to_fastq.modify_memory_gb (Int, default=0) bam_to_fastq.ncpu (Int, default=1) bam_to_fastq.output_singletons (Boolean, default=false) bam_to_fastq.prefix (String, default=basename(bam,\".bam\")) bam_to_fastq.store_collated_bam (Boolean, default=false) fqlint.disable_validator_codes (Array[String], default=[]) fqlint.modify_disk_size_gb (Int, default=0) fqlint.modify_memory_gb (Int, default=0) fqlint.paired_read_validation_level (String, default=\"high\") fqlint.panic (Boolean, default=true) fqlint.single_read_validation_level (String, default=\"high\") quickcheck.memory_gb (Int, default=4) quickcheck.modify_disk_size_gb (Int, default=0) split.memory_gb (Int, default=4) split.modify_disk_size_gb (Int, default=0) split.ncpu (Int, default=1) split.prefix (String, default=basename(bam,\".bam\")) split.reject_unaccounted (Boolean, default=true) Outputs read1s (Array[File]) read2s (Array[File?])","title":"Bam to fastqs"},{"location":"workflows/bam-to-fastqs/#bam_to_fastqs","text":"description Converts an input BAM file to one or more FASTQ files, performing QC checks along the way outputs {'read1s': 'Array of FASTQ files corresponding to either first reads (if paired_end = true ) or all reads (if paired_end = false )', 'read2s': 'Array of FASTQ files corresponding to last reads (if paired_end = true )'}","title":"bam_to_fastqs"},{"location":"workflows/bam-to-fastqs/#inputs","text":"","title":"Inputs"},{"location":"workflows/bam-to-fastqs/#required","text":"bam (File, required ): BAM file to split into FASTQs bam_to_fastq._runtime (Any, required ) fqlint._runtime (Any, required ) quickcheck._runtime (Any, required ) split._runtime (Any, required )","title":"Required"},{"location":"workflows/bam-to-fastqs/#optional","text":"max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults.","title":"Optional"},{"location":"workflows/bam-to-fastqs/#defaults","text":"paired_end (Boolean, default=true): Is the data paired-end (true) or single-end (false)? use_all_cores (Boolean, default=false): Use all cores for multi-core steps? bam_to_fastq.F (String, default=\"0x900\") bam_to_fastq.G (String, default=\"0\") bam_to_fastq.f (String, default=\"0\") bam_to_fastq.fail_on_unexpected_reads (Boolean, default=false) bam_to_fastq.fast_mode (Boolean, default=true) bam_to_fastq.modify_disk_size_gb (Int, default=0) bam_to_fastq.modify_memory_gb (Int, default=0) bam_to_fastq.ncpu (Int, default=1) bam_to_fastq.output_singletons (Boolean, default=false) bam_to_fastq.prefix (String, default=basename(bam,\".bam\")) bam_to_fastq.store_collated_bam (Boolean, default=false) fqlint.disable_validator_codes (Array[String], default=[]) fqlint.modify_disk_size_gb (Int, default=0) fqlint.modify_memory_gb (Int, default=0) fqlint.paired_read_validation_level (String, default=\"high\") fqlint.panic (Boolean, default=true) fqlint.single_read_validation_level (String, default=\"high\") quickcheck.memory_gb (Int, default=4) quickcheck.modify_disk_size_gb (Int, default=0) split.memory_gb (Int, default=4) split.modify_disk_size_gb (Int, default=0) split.ncpu (Int, default=1) split.prefix (String, default=basename(bam,\".bam\")) split.reject_unaccounted (Boolean, default=true)","title":"Defaults"},{"location":"workflows/bam-to-fastqs/#outputs","text":"read1s (Array[File]) read2s (Array[File?])","title":"Outputs"},{"location":"workflows/bwa-db-build/","text":"bwa_db_build description Generates a set of genome reference files usable by the BWA aligner from an input reference file in FASTA format. outputs {'reference_fa': 'FASTA format reference file used to generate bwa_db_tar_gz ', 'bwa_db_tar_gz': 'Gzipped tar archive of the BWA reference files. Files are at the root of the archive.'} Inputs Required reference_fa_name (String, required ): Name of output reference FASTA file reference_fa_url (String, required ): URL to retrieve the reference FASTA file from. build_bwa_db._runtime (Any, required ) reference_download._runtime (Any, required ) Optional reference_fa_md5 (String?): Expected md5sum of reference FASTA file Defaults max_retries (Int, default=1): Number of times to retry failed steps. Overrides task level defaults. reference_fa_disk_size_gb (Int, default=10) build_bwa_db.db_name (String, default=\"bwa_db\") build_bwa_db.memory_gb (Int, default=5) build_bwa_db.modify_disk_size_gb (Int, default=0) reference_download.memory_gb (Int, default=4) Outputs reference_fa (File) bwa_db_tar_gz (File)","title":"Bwa db build"},{"location":"workflows/bwa-db-build/#bwa_db_build","text":"description Generates a set of genome reference files usable by the BWA aligner from an input reference file in FASTA format. outputs {'reference_fa': 'FASTA format reference file used to generate bwa_db_tar_gz ', 'bwa_db_tar_gz': 'Gzipped tar archive of the BWA reference files. Files are at the root of the archive.'}","title":"bwa_db_build"},{"location":"workflows/bwa-db-build/#inputs","text":"","title":"Inputs"},{"location":"workflows/bwa-db-build/#required","text":"reference_fa_name (String, required ): Name of output reference FASTA file reference_fa_url (String, required ): URL to retrieve the reference FASTA file from. build_bwa_db._runtime (Any, required ) reference_download._runtime (Any, required )","title":"Required"},{"location":"workflows/bwa-db-build/#optional","text":"reference_fa_md5 (String?): Expected md5sum of reference FASTA file","title":"Optional"},{"location":"workflows/bwa-db-build/#defaults","text":"max_retries (Int, default=1): Number of times to retry failed steps. Overrides task level defaults. reference_fa_disk_size_gb (Int, default=10) build_bwa_db.db_name (String, default=\"bwa_db\") build_bwa_db.memory_gb (Int, default=5) build_bwa_db.modify_disk_size_gb (Int, default=0) reference_download.memory_gb (Int, default=4)","title":"Defaults"},{"location":"workflows/bwa-db-build/#outputs","text":"reference_fa (File) bwa_db_tar_gz (File)","title":"Outputs"},{"location":"workflows/calc-gene-lengths/","text":"calculate_gene_lengths description Calculate gene lengths from a GTF feature file outputs {'gene_lengths': 'A two column headered TSV file with gene names in the first column and feature lengths (as integers) in the second column'} Inputs Required gtf (File, required ): GTF feature file calc_gene_lengths._runtime (Any, required ) Optional max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. Defaults calc_gene_lengths.memory_gb (Int, default=8) calc_gene_lengths.modify_disk_size_gb (Int, default=0) calc_gene_lengths.outfile_name (String, default=basename(gtf,\".gtf.gz\") + \".genelengths.txt\") Outputs gene_lengths (File)","title":"Calc gene lengths"},{"location":"workflows/calc-gene-lengths/#calculate_gene_lengths","text":"description Calculate gene lengths from a GTF feature file outputs {'gene_lengths': 'A two column headered TSV file with gene names in the first column and feature lengths (as integers) in the second column'}","title":"calculate_gene_lengths"},{"location":"workflows/calc-gene-lengths/#inputs","text":"","title":"Inputs"},{"location":"workflows/calc-gene-lengths/#required","text":"gtf (File, required ): GTF feature file calc_gene_lengths._runtime (Any, required )","title":"Required"},{"location":"workflows/calc-gene-lengths/#optional","text":"max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults.","title":"Optional"},{"location":"workflows/calc-gene-lengths/#defaults","text":"calc_gene_lengths.memory_gb (Int, default=8) calc_gene_lengths.modify_disk_size_gb (Int, default=0) calc_gene_lengths.outfile_name (String, default=basename(gtf,\".gtf.gz\") + \".genelengths.txt\")","title":"Defaults"},{"location":"workflows/calc-gene-lengths/#outputs","text":"gene_lengths (File)","title":"Outputs"},{"location":"workflows/dnaseq-standard/","text":"WARNING: this workflow is experimental! Use at your own risk! dnaseq_standard_experimental Inputs Required bam (File, required ) bwa_db (File, required ) bwa_mem._runtime (Any, required ) get_read_groups._runtime (Any, required ) merge._runtime (Any, required ) sort._runtime (Any, required ) validate_input_bam._runtime (Any, required ) bam_to_fastqs.bam_to_fastq._runtime (Any, required ) bam_to_fastqs.fqlint._runtime (Any, required ) bam_to_fastqs.quickcheck._runtime (Any, required ) bam_to_fastqs.split._runtime (Any, required ) Optional max_retries (Int?) merge.new_header (File?) validate_input_bam.reference_fasta (File?) Defaults prefix (String, default=basename(bam,\".bam\")) use_all_cores (Boolean, default=false) validate_input (Boolean, default=true) bwa_mem.memory_gb (Int, default=10) bwa_mem.modify_disk_size_gb (Int, default=0) bwa_mem.ncpu (Int, default=1) bwa_mem.prefix (String, default=sub(basename(read_one_fastq_gz),\"([_.][rR][12])?(.subsampled)?.(fastq|fq)(.gz)?$\",\"\")) get_read_groups.memory_gb (Int, default=4) get_read_groups.modify_disk_size_gb (Int, default=0) merge.attach_rg (Boolean, default=true) merge.combine_rg (Boolean, default=true) merge.memory_gb (Int, default=4) merge.modify_disk_size_gb (Int, default=0) merge.name_sorted (Boolean, default=false) merge.ncpu (Int, default=1) merge.region (String, default=\"\") sort.memory_gb (Int, default=25) sort.modify_disk_size_gb (Int, default=0) sort.prefix (String, default=basename(bam,\".bam\") + \".sorted\") sort.sort_order (String, default=\"coordinate\") validate_input_bam.ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]) validate_input_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_input_bam.max_errors (Int, default=2147483647) validate_input_bam.memory_gb (Int, default=16) validate_input_bam.modify_disk_size_gb (Int, default=0) validate_input_bam.outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") validate_input_bam.succeed_on_errors (Boolean, default=false) validate_input_bam.succeed_on_warnings (Boolean, default=true) validate_input_bam.summary_mode (Boolean, default=false) bam_to_fastqs.bam_to_fastq.F (String, default=\"0x900\") bam_to_fastqs.bam_to_fastq.G (String, default=\"0\") bam_to_fastqs.bam_to_fastq.f (String, default=\"0\") bam_to_fastqs.bam_to_fastq.fail_on_unexpected_reads (Boolean, default=false) bam_to_fastqs.bam_to_fastq.fast_mode (Boolean, default=true) bam_to_fastqs.bam_to_fastq.modify_disk_size_gb (Int, default=0) bam_to_fastqs.bam_to_fastq.modify_memory_gb (Int, default=0) bam_to_fastqs.bam_to_fastq.ncpu (Int, default=1) bam_to_fastqs.bam_to_fastq.output_singletons (Boolean, default=false) bam_to_fastqs.bam_to_fastq.prefix (String, default=basename(bam,\".bam\")) bam_to_fastqs.bam_to_fastq.store_collated_bam (Boolean, default=false) bam_to_fastqs.fqlint.disable_validator_codes (Array[String], default=[]) bam_to_fastqs.fqlint.modify_disk_size_gb (Int, default=0) bam_to_fastqs.fqlint.modify_memory_gb (Int, default=0) bam_to_fastqs.fqlint.paired_read_validation_level (String, default=\"high\") bam_to_fastqs.fqlint.panic (Boolean, default=true) bam_to_fastqs.fqlint.single_read_validation_level (String, default=\"high\") bam_to_fastqs.quickcheck.memory_gb (Int, default=4) bam_to_fastqs.quickcheck.modify_disk_size_gb (Int, default=0) bam_to_fastqs.split.memory_gb (Int, default=4) bam_to_fastqs.split.modify_disk_size_gb (Int, default=0) bam_to_fastqs.split.ncpu (Int, default=1) bam_to_fastqs.split.prefix (String, default=basename(bam,\".bam\")) bam_to_fastqs.split.reject_unaccounted (Boolean, default=true) Outputs validate_input_bam.validate_report (File?) validate_input_bam.validated_bam (File?) get_read_groups.read_groups (Array[String]) bam_to_fastqs.read1s (Array[File]) bam_to_fastqs.read2s (Array[File?]) sort.sorted_bam (Array[File]) sort.sorted_bam_index (Array[File]) sort.sorted_bam_md5 (Array[File]) bwa_mem.bam (Array[File]) merge.merged_bam (File)","title":"Dnaseq standard"},{"location":"workflows/dnaseq-standard/#dnaseq_standard_experimental","text":"","title":"dnaseq_standard_experimental"},{"location":"workflows/dnaseq-standard/#inputs","text":"","title":"Inputs"},{"location":"workflows/dnaseq-standard/#required","text":"bam (File, required ) bwa_db (File, required ) bwa_mem._runtime (Any, required ) get_read_groups._runtime (Any, required ) merge._runtime (Any, required ) sort._runtime (Any, required ) validate_input_bam._runtime (Any, required ) bam_to_fastqs.bam_to_fastq._runtime (Any, required ) bam_to_fastqs.fqlint._runtime (Any, required ) bam_to_fastqs.quickcheck._runtime (Any, required ) bam_to_fastqs.split._runtime (Any, required )","title":"Required"},{"location":"workflows/dnaseq-standard/#optional","text":"max_retries (Int?) merge.new_header (File?) validate_input_bam.reference_fasta (File?)","title":"Optional"},{"location":"workflows/dnaseq-standard/#defaults","text":"prefix (String, default=basename(bam,\".bam\")) use_all_cores (Boolean, default=false) validate_input (Boolean, default=true) bwa_mem.memory_gb (Int, default=10) bwa_mem.modify_disk_size_gb (Int, default=0) bwa_mem.ncpu (Int, default=1) bwa_mem.prefix (String, default=sub(basename(read_one_fastq_gz),\"([_.][rR][12])?(.subsampled)?.(fastq|fq)(.gz)?$\",\"\")) get_read_groups.memory_gb (Int, default=4) get_read_groups.modify_disk_size_gb (Int, default=0) merge.attach_rg (Boolean, default=true) merge.combine_rg (Boolean, default=true) merge.memory_gb (Int, default=4) merge.modify_disk_size_gb (Int, default=0) merge.name_sorted (Boolean, default=false) merge.ncpu (Int, default=1) merge.region (String, default=\"\") sort.memory_gb (Int, default=25) sort.modify_disk_size_gb (Int, default=0) sort.prefix (String, default=basename(bam,\".bam\") + \".sorted\") sort.sort_order (String, default=\"coordinate\") validate_input_bam.ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]) validate_input_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_input_bam.max_errors (Int, default=2147483647) validate_input_bam.memory_gb (Int, default=16) validate_input_bam.modify_disk_size_gb (Int, default=0) validate_input_bam.outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") validate_input_bam.succeed_on_errors (Boolean, default=false) validate_input_bam.succeed_on_warnings (Boolean, default=true) validate_input_bam.summary_mode (Boolean, default=false) bam_to_fastqs.bam_to_fastq.F (String, default=\"0x900\") bam_to_fastqs.bam_to_fastq.G (String, default=\"0\") bam_to_fastqs.bam_to_fastq.f (String, default=\"0\") bam_to_fastqs.bam_to_fastq.fail_on_unexpected_reads (Boolean, default=false) bam_to_fastqs.bam_to_fastq.fast_mode (Boolean, default=true) bam_to_fastqs.bam_to_fastq.modify_disk_size_gb (Int, default=0) bam_to_fastqs.bam_to_fastq.modify_memory_gb (Int, default=0) bam_to_fastqs.bam_to_fastq.ncpu (Int, default=1) bam_to_fastqs.bam_to_fastq.output_singletons (Boolean, default=false) bam_to_fastqs.bam_to_fastq.prefix (String, default=basename(bam,\".bam\")) bam_to_fastqs.bam_to_fastq.store_collated_bam (Boolean, default=false) bam_to_fastqs.fqlint.disable_validator_codes (Array[String], default=[]) bam_to_fastqs.fqlint.modify_disk_size_gb (Int, default=0) bam_to_fastqs.fqlint.modify_memory_gb (Int, default=0) bam_to_fastqs.fqlint.paired_read_validation_level (String, default=\"high\") bam_to_fastqs.fqlint.panic (Boolean, default=true) bam_to_fastqs.fqlint.single_read_validation_level (String, default=\"high\") bam_to_fastqs.quickcheck.memory_gb (Int, default=4) bam_to_fastqs.quickcheck.modify_disk_size_gb (Int, default=0) bam_to_fastqs.split.memory_gb (Int, default=4) bam_to_fastqs.split.modify_disk_size_gb (Int, default=0) bam_to_fastqs.split.ncpu (Int, default=1) bam_to_fastqs.split.prefix (String, default=basename(bam,\".bam\")) bam_to_fastqs.split.reject_unaccounted (Boolean, default=true)","title":"Defaults"},{"location":"workflows/dnaseq-standard/#outputs","text":"validate_input_bam.validate_report (File?) validate_input_bam.validated_bam (File?) get_read_groups.read_groups (Array[String]) bam_to_fastqs.read1s (Array[File]) bam_to_fastqs.read2s (Array[File?]) sort.sorted_bam (Array[File]) sort.sorted_bam_index (Array[File]) sort.sorted_bam_md5 (Array[File]) bwa_mem.bam (Array[File]) merge.merged_bam (File)","title":"Outputs"},{"location":"workflows/make-qc-reference/","text":"make_qc_reference description Downloads and creates all reference files needed to run the quality_check workflow outputs {'reference_fa': 'FASTA format reference file', 'gtf': 'GTF feature file', 'exon_bed': '3 column BED file defining the regions of the exome. Derived from gtf .', 'CDS_bed': '3 column BED file defining the regions of the coding domain. Derived from gtf .', 'kraken_db': 'A complete Kraken2 database'} Inputs Required gtf_name (String, required ): Name of output GTF file gtf_url (String, required ): URL to retrieve the reference GTF file from reference_fa_name (String, required ): Name of output reference FASTA file reference_fa_url (String, required ): URL to retrieve the reference FASTA file from create_library_from_fastas._runtime (Any, required ) download_library._runtime (Any, required ) download_taxonomy._runtime (Any, required ) fastas_download._runtime (Any, required ) gtf_download._runtime (Any, required ) kraken_build_db._runtime (Any, required ) make_coverage_regions_beds._runtime (Any, required ) reference_download._runtime (Any, required ) Optional max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. fastas_download.md5sum (String?) gtf_download.md5sum (String?) reference_download.md5sum (String?) Defaults gtf_disk_size_gb (Int, default=10) kraken_fasta_urls (Array[String], default=[]): URLs for any additional FASTA files in NCBI format to download and include in the Kraken2 database. This allows the addition of individual genomes (or other sequences) of interest. kraken_fastas (Array[File], default=[]): Array of gzipped FASTA files. Each sequence's ID must contain either an NCBI accession number or an explicit assignment of the taxonomy ID using kraken:taxid kraken_fastas_disk_size_gb (Int, default=10) kraken_libraries (Array[String], default=[\"archaea\", \"bacteria\", \"plasmid\", \"viral\", \"human\", \"fungi\", \"protozoa\", \"UniVec_Core\"]); description : List of kraken libraries to download; choices : ['archaea', 'bacteria', 'plasmid', 'viral', 'human', 'fungi', 'plant', 'protozoa', 'nt', 'UniVec', 'UniVec_Core'] protein (Boolean, default=false): Construct a protein database? reference_fa_disk_size_gb (Int, default=10) create_library_from_fastas.memory_gb (Int, default=4) create_library_from_fastas.modify_disk_size_gb (Int, default=0) download_library.memory_gb (Int, default=4) download_library.modify_disk_size_gb (Int, default=0) download_taxonomy.disk_size_gb (Int, default=60) download_taxonomy.memory_gb (Int, default=4) fastas_download.memory_gb (Int, default=4) gtf_download.memory_gb (Int, default=4) kraken_build_db.db_name (String, default=\"kraken2_db\") kraken_build_db.kmer_len (Int, default=if protein then 15 else 35) kraken_build_db.max_db_size_gb (Int, default=-1) kraken_build_db.minimizer_len (Int, default=if protein then 12 else 31) kraken_build_db.minimizer_spaces (Int, default=if protein then 0 else 7) kraken_build_db.modify_disk_size_gb (Int, default=0) kraken_build_db.modify_memory_gb (Int, default=0) kraken_build_db.ncpu (Int, default=1) kraken_build_db.use_all_cores (Boolean, default=false) make_coverage_regions_beds.memory_gb (Int, default=4) make_coverage_regions_beds.modify_disk_size_gb (Int, default=0) reference_download.memory_gb (Int, default=4) Outputs reference_fa (File) gtf (File) exon_bed (File) CDS_bed (File) kraken_db (File)","title":"Make qc reference"},{"location":"workflows/make-qc-reference/#make_qc_reference","text":"description Downloads and creates all reference files needed to run the quality_check workflow outputs {'reference_fa': 'FASTA format reference file', 'gtf': 'GTF feature file', 'exon_bed': '3 column BED file defining the regions of the exome. Derived from gtf .', 'CDS_bed': '3 column BED file defining the regions of the coding domain. Derived from gtf .', 'kraken_db': 'A complete Kraken2 database'}","title":"make_qc_reference"},{"location":"workflows/make-qc-reference/#inputs","text":"","title":"Inputs"},{"location":"workflows/make-qc-reference/#required","text":"gtf_name (String, required ): Name of output GTF file gtf_url (String, required ): URL to retrieve the reference GTF file from reference_fa_name (String, required ): Name of output reference FASTA file reference_fa_url (String, required ): URL to retrieve the reference FASTA file from create_library_from_fastas._runtime (Any, required ) download_library._runtime (Any, required ) download_taxonomy._runtime (Any, required ) fastas_download._runtime (Any, required ) gtf_download._runtime (Any, required ) kraken_build_db._runtime (Any, required ) make_coverage_regions_beds._runtime (Any, required ) reference_download._runtime (Any, required )","title":"Required"},{"location":"workflows/make-qc-reference/#optional","text":"max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. fastas_download.md5sum (String?) gtf_download.md5sum (String?) reference_download.md5sum (String?)","title":"Optional"},{"location":"workflows/make-qc-reference/#defaults","text":"gtf_disk_size_gb (Int, default=10) kraken_fasta_urls (Array[String], default=[]): URLs for any additional FASTA files in NCBI format to download and include in the Kraken2 database. This allows the addition of individual genomes (or other sequences) of interest. kraken_fastas (Array[File], default=[]): Array of gzipped FASTA files. Each sequence's ID must contain either an NCBI accession number or an explicit assignment of the taxonomy ID using kraken:taxid kraken_fastas_disk_size_gb (Int, default=10) kraken_libraries (Array[String], default=[\"archaea\", \"bacteria\", \"plasmid\", \"viral\", \"human\", \"fungi\", \"protozoa\", \"UniVec_Core\"]); description : List of kraken libraries to download; choices : ['archaea', 'bacteria', 'plasmid', 'viral', 'human', 'fungi', 'plant', 'protozoa', 'nt', 'UniVec', 'UniVec_Core'] protein (Boolean, default=false): Construct a protein database? reference_fa_disk_size_gb (Int, default=10) create_library_from_fastas.memory_gb (Int, default=4) create_library_from_fastas.modify_disk_size_gb (Int, default=0) download_library.memory_gb (Int, default=4) download_library.modify_disk_size_gb (Int, default=0) download_taxonomy.disk_size_gb (Int, default=60) download_taxonomy.memory_gb (Int, default=4) fastas_download.memory_gb (Int, default=4) gtf_download.memory_gb (Int, default=4) kraken_build_db.db_name (String, default=\"kraken2_db\") kraken_build_db.kmer_len (Int, default=if protein then 15 else 35) kraken_build_db.max_db_size_gb (Int, default=-1) kraken_build_db.minimizer_len (Int, default=if protein then 12 else 31) kraken_build_db.minimizer_spaces (Int, default=if protein then 0 else 7) kraken_build_db.modify_disk_size_gb (Int, default=0) kraken_build_db.modify_memory_gb (Int, default=0) kraken_build_db.ncpu (Int, default=1) kraken_build_db.use_all_cores (Boolean, default=false) make_coverage_regions_beds.memory_gb (Int, default=4) make_coverage_regions_beds.modify_disk_size_gb (Int, default=0) reference_download.memory_gb (Int, default=4)","title":"Defaults"},{"location":"workflows/make-qc-reference/#outputs","text":"reference_fa (File) gtf (File) exon_bed (File) CDS_bed (File) kraken_db (File)","title":"Outputs"},{"location":"workflows/markdups-post/","text":"MarkDuplicates Post An investigation of all our QC tools was conducted when duplicate marking was introduced to our pipeline. Most tools do not take into consideration whether a read is a duplicate or not. But the tasks called below produce different results depending on whether the input BAM has been duplicate marked or not. markdups_post description Runs QC analyses which are impacted by duplicate marking outputs {'insert_size_metrics': ' *.txt output file of picard collectInsertSizeMetrics ', 'insert_size_metrics_pdf': ' *.pdf output file of picard collectInsertSizeMetrics ', 'flagstat_report': ' samtools flagstat report', 'mosdepth_global_summary': 'Summary of whole genome coverage produced by mosdepth ', 'mosdepth_global_dist': 'Distribution of whole genome coverage produced by mosdepth ', 'mosdepth_region_summary': 'Summaries of coverage corresponding to the regions defined by coverage_beds input, produced by mosdepth ', 'mosdepth_region_dist': 'Distributions of coverage corresponding to the regions defined by coverage_beds input, produced by mosdepth '} Inputs Required markdups_bam (File, required ): Input BAM format file to quality check. Duplicates being marked is not necessary for a successful run of this workflow. markdups_bam_index (File, required ): BAM index file corresponding to the input BAM collect_insert_size_metrics._runtime (Any, required ) flagstat._runtime (Any, required ) regions_coverage._runtime (Any, required ) wg_coverage._runtime (Any, required ) Optional max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. wg_coverage.coverage_bed (File?) Defaults coverage_beds (Array[File], default=[]): An array of 3 column BEDs which are passed to the -b flag of mosdepth, in order to restrict coverage analysis to select regions coverage_labels (Array[String], default=[]): An array of equal length to coverage_beds which determines the prefix label applied to the output files. If omitted, defaults of regions1 , regions2 , etc. will be used. prefix (String, default=basename(markdups_bam,\".bam\")): Prefix for all results files collect_insert_size_metrics.memory_gb (Int, default=8) collect_insert_size_metrics.modify_disk_size_gb (Int, default=0) flagstat.memory_gb (Int, default=5) flagstat.modify_disk_size_gb (Int, default=0) flagstat.ncpu (Int, default=1) flagstat.use_all_cores (Boolean, default=false) regions_coverage.memory_gb (Int, default=8) regions_coverage.min_mapping_quality (Int, default=20) regions_coverage.modify_disk_size_gb (Int, default=0) regions_coverage.use_fast_mode (Boolean, default=true) wg_coverage.memory_gb (Int, default=8) wg_coverage.min_mapping_quality (Int, default=20) wg_coverage.modify_disk_size_gb (Int, default=0) wg_coverage.use_fast_mode (Boolean, default=true) Outputs insert_size_metrics (File) insert_size_metrics_pdf (File) flagstat_report (File) mosdepth_global_summary (File) mosdepth_global_dist (File) mosdepth_region_summary (Array[File]) mosdepth_region_dist (Array[File?])","title":"MarkDuplicates Post"},{"location":"workflows/markdups-post/#markduplicates-post","text":"An investigation of all our QC tools was conducted when duplicate marking was introduced to our pipeline. Most tools do not take into consideration whether a read is a duplicate or not. But the tasks called below produce different results depending on whether the input BAM has been duplicate marked or not.","title":"MarkDuplicates Post"},{"location":"workflows/markdups-post/#markdups_post","text":"description Runs QC analyses which are impacted by duplicate marking outputs {'insert_size_metrics': ' *.txt output file of picard collectInsertSizeMetrics ', 'insert_size_metrics_pdf': ' *.pdf output file of picard collectInsertSizeMetrics ', 'flagstat_report': ' samtools flagstat report', 'mosdepth_global_summary': 'Summary of whole genome coverage produced by mosdepth ', 'mosdepth_global_dist': 'Distribution of whole genome coverage produced by mosdepth ', 'mosdepth_region_summary': 'Summaries of coverage corresponding to the regions defined by coverage_beds input, produced by mosdepth ', 'mosdepth_region_dist': 'Distributions of coverage corresponding to the regions defined by coverage_beds input, produced by mosdepth '}","title":"markdups_post"},{"location":"workflows/markdups-post/#inputs","text":"","title":"Inputs"},{"location":"workflows/markdups-post/#required","text":"markdups_bam (File, required ): Input BAM format file to quality check. Duplicates being marked is not necessary for a successful run of this workflow. markdups_bam_index (File, required ): BAM index file corresponding to the input BAM collect_insert_size_metrics._runtime (Any, required ) flagstat._runtime (Any, required ) regions_coverage._runtime (Any, required ) wg_coverage._runtime (Any, required )","title":"Required"},{"location":"workflows/markdups-post/#optional","text":"max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. wg_coverage.coverage_bed (File?)","title":"Optional"},{"location":"workflows/markdups-post/#defaults","text":"coverage_beds (Array[File], default=[]): An array of 3 column BEDs which are passed to the -b flag of mosdepth, in order to restrict coverage analysis to select regions coverage_labels (Array[String], default=[]): An array of equal length to coverage_beds which determines the prefix label applied to the output files. If omitted, defaults of regions1 , regions2 , etc. will be used. prefix (String, default=basename(markdups_bam,\".bam\")): Prefix for all results files collect_insert_size_metrics.memory_gb (Int, default=8) collect_insert_size_metrics.modify_disk_size_gb (Int, default=0) flagstat.memory_gb (Int, default=5) flagstat.modify_disk_size_gb (Int, default=0) flagstat.ncpu (Int, default=1) flagstat.use_all_cores (Boolean, default=false) regions_coverage.memory_gb (Int, default=8) regions_coverage.min_mapping_quality (Int, default=20) regions_coverage.modify_disk_size_gb (Int, default=0) regions_coverage.use_fast_mode (Boolean, default=true) wg_coverage.memory_gb (Int, default=8) wg_coverage.min_mapping_quality (Int, default=20) wg_coverage.modify_disk_size_gb (Int, default=0) wg_coverage.use_fast_mode (Boolean, default=true)","title":"Defaults"},{"location":"workflows/markdups-post/#outputs","text":"insert_size_metrics (File) insert_size_metrics_pdf (File) flagstat_report (File) mosdepth_global_summary (File) mosdepth_global_dist (File) mosdepth_region_summary (Array[File]) mosdepth_region_dist (Array[File?])","title":"Outputs"},{"location":"workflows/quality-check-standard/","text":"quality_check description Performs comprehensive quality checks, aggregating all analyses and metrics into a final MultiQC report. external_help https://multiqc.info/ outputs {'bam_checksum': 'STDOUT of the md5sum command run on the input BAM that has been redirected to a file', 'validate_sam_file': 'Validation report produced by picard ValidateSamFile . Validation warnings and errors are logged.', 'mark_duplicates_metrics': {'description': 'The METRICS_FILE result of picard MarkDuplicates ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#DuplicationMetrics'}, 'flagstat_report': ' samtools flagstat STDOUT redirected to a file. If mark_duplicates is true , then this result will be generated from the duplicate marked BAM.', 'fastqc_results': 'A gzipped tar archive of all FastQC output files', 'instrument_file': 'TSV file containing the ngsderive isntrument report for the input BAM file', 'read_length_file': 'TSV file containing the ngsderive readlen report for the input BAM file', 'inferred_encoding': 'TSV file containing the ngsderive encoding report for the input BAM file', 'alignment_metrics': {'description': 'The text file output of picard CollectAlignmentSummaryMetrics ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#AlignmentSummaryMetrics'}, 'alignment_metrics_pdf': 'The PDF file output of picard CollectAlignmentSummaryMetrics ', 'insert_size_metrics': {'description': 'The text file output of picard CollectInsertSizeMetrics . If mark_duplicates is true , then this result will be generated from the duplicate marked BAM.', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#InsertSizeMetrics'}, 'insert_size_metrics_pdf': 'The PDF file output of picard CollectInsertSizeMetrics . If mark_duplicates is true , then this result will be generated from the duplicate marked BAM.', 'quality_score_distribution_txt': 'The text file output of picard QualityScoreDistribution ', 'quality_score_distribution_pdf': 'The PDF file output of picard QualityScoreDistribution ', 'phred_scores': 'Headered TSV file containing PHRED score statistics', 'kraken_report': {'description': 'A Kraken2 summary report', 'external_help': 'https://github.com/DerrickWood/kraken2/blob/master/docs/MANUAL.markdown#sample-report-output-format'}, 'mosdepth_global_dist': 'The $prefix.mosdepth.global.dist.txt file contains a cumulative distribution indicating the proportion of total bases that were covered for at least a given coverage value. It does this for each chromosome, and for the whole genome.', 'mosdepth_global_summary': 'A summary of mean depths per chromosome', 'mosdepth_region_dist': 'The $prefix.mosdepth.region.dist.txt file contains a cumulative distribution indicating the proportion of total bases in the region(s) defined by the coverage_bed that were covered for at least a given coverage value. There will be one file in this array for each coverage_beds input file.', 'mosdepth_region_summary': 'A summary of mean depths per chromosome and within specified regions per chromosome. There will be one file in this array for each coverage_beds input file.', 'multiqc_report': 'A gzipped tar archive of all MultiQC output files', 'orig_read_count': 'A TSV report containing the original read count before subsampling', 'kraken_sequences': {'description': 'Detailed Kraken2 output that has been gzipped', 'external_help': 'https://github.com/DerrickWood/kraken2/blob/master/docs/MANUAL.markdown#standard-kraken-output-format'}, 'mosdepth_dups_marked_global_dist': 'The $prefix.mosdepth.global.dist.txt file contains a cumulative distribution indicating the proportion of total bases that were covered for at least a given coverage value. It does this for each chromosome, and for the whole genome. This file is produced from analyzing the duplicate marked BAM (only present if mark_duplicates = true ).', 'mosdepth_dups_marked_global_summary': 'A summary of mean depths per chromosome. This file is produced from analyzing the duplicate marked BAM (only present if mark_duplicates = true ).', 'mosdepth_dups_marked_region_dist': 'The $prefix.mosdepth.region.dist.txt file contains a cumulative distribution indicating the proportion of total bases in the region(s) defined by the coverage_bed that were covered for at least a given coverage value. There will be one file in this array for each coverage_beds input file. This file is produced from analyzing the duplicate marked BAM (only present if mark_duplicates = true ).', 'mosdepth_dups_marked_region_summary': 'A summary of mean depths per chromosome and within specified regions per chromosome. There will be one file in this array for each coverage_beds input file. This file is produced from analyzing the duplicate marked BAM (only present if mark_duplicates = true ).', 'inferred_strandedness': 'TSV file containing the ngsderive strandedness report', 'qualimap_rnaseq_results': 'Gzipped tar archive of all QualiMap output files', 'junction_summary': 'TSV file containing the ngsderive junction-annotation summary', 'junctions': 'TSV file containing a detailed list of annotated junctions', 'IntermediateFiles': 'Any and all files produced as intermediate during pipeline processing. Only output if output_intermediate_files = true .'} Inputs Required bam (File, required ): Input BAM format file to quality check bam_index (File, required ): BAM index file corresponding to the input BAM kraken_db (File, required ): Kraken2 database. Can be generated with make-qc-reference.wdl . Must be a tarball without a root directory. molecule (String, required ); description : Data type; choices : ['DNA', 'RNA'] collate_to_fastq._runtime (Any, required ) collect_alignment_summary_metrics._runtime (Any, required ) collect_insert_size_metrics._runtime (Any, required ) compression_integrity._runtime (Any, required ) compute_checksum._runtime (Any, required ) encoding._runtime (Any, required ) endedness._runtime (Any, required ) fastqc._runtime (Any, required ) flagstat._runtime (Any, required ) fqlint._runtime (Any, required ) global_phred_scores._runtime (Any, required ) instrument._runtime (Any, required ) junction_annotation._runtime (Any, required ) kraken._runtime (Any, required ) markdups._runtime (Any, required ) multiqc._runtime (Any, required ) parse_input._runtime (Any, required ) qualimap_rnaseq._runtime (Any, required ) quality_score_distribution._runtime (Any, required ) quickcheck._runtime (Any, required ) read_length._runtime (Any, required ) regions_coverage._runtime (Any, required ) strandedness._runtime (Any, required ) subsample._runtime (Any, required ) subsample_index._runtime (Any, required ) validate_bam._runtime (Any, required ) wg_coverage._runtime (Any, required ) markdups_post.collect_insert_size_metrics._runtime (Any, required ) markdups_post.flagstat._runtime (Any, required ) markdups_post.regions_coverage._runtime (Any, required ) markdups_post.wg_coverage._runtime (Any, required ) Optional gtf (File?): GTF features file. Gzipped or uncompressed. Required for RNA-Seq data. max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. validate_bam.reference_fasta (File?) wg_coverage.coverage_bed (File?) markdups_post.wg_coverage.coverage_bed (File?) Defaults coverage_beds (Array[File], default=[]): An array of 3 column BEDs which are passed to the -b flag of mosdepth, in order to restrict coverage analysis to select regions coverage_labels (Array[String], default=[]): An array of equal length to coverage_beds which determines the prefix label applied to the output files. If omitted, defaults of regions1 , regions2 , etc. will be used. extra_multiqc_inputs (Array[File], default=[]): An array of additional files to pass directly into MultiQC mark_duplicates (Boolean, default=molecule == \"RNA\"): Mark duplicates before analyses? Note that regardless of this setting, picard MarkDuplicates will be run in order to generate a *.MarkDuplicates.metrics.txt file. However if mark_duplicates is set to false , no BAM will be generated. If set to true , a BAM will be generated and passed to selected downstream analyses. multiqc_config (File, default=\"https://raw.githubusercontent.com/stjudecloud/workflows/main/workflows/qc/inputs/multiqc_config_hg38.yaml\"): YAML file for configuring MultiQC output_intermediate_files (Boolean, default=false): Output intermediate files? FASTQs, if RNA a collated BAM, if mark_duplicates==true a duplicate marked BAM with an index and MD5. WARNING these files can be large. prefix (String, default=basename(bam,\".bam\")): Prefix for all results files subsample_n_reads (Int, default=-1): Only process a random sampling of n reads. Any n <= 0 for processing entire input. Subsampling is done probabalistically so the exact number of reads in the output will have some variation. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. collate_to_fastq.F (String, default=\"0x900\") collate_to_fastq.G (String, default=\"0\") collate_to_fastq.f (String, default=\"0\") collate_to_fastq.fail_on_unexpected_reads (Boolean, default=false) collate_to_fastq.modify_disk_size_gb (Int, default=0) collate_to_fastq.modify_memory_gb (Int, default=0) collate_to_fastq.ncpu (Int, default=1) collate_to_fastq.output_singletons (Boolean, default=false) collect_alignment_summary_metrics.memory_gb (Int, default=8) collect_alignment_summary_metrics.modify_disk_size_gb (Int, default=0) collect_insert_size_metrics.memory_gb (Int, default=8) collect_insert_size_metrics.modify_disk_size_gb (Int, default=0) compression_integrity.memory_gb (Int, default=4) compression_integrity.modify_disk_size_gb (Int, default=0) compute_checksum.memory_gb (Int, default=4) compute_checksum.modify_disk_size_gb (Int, default=0) encoding.memory_gb (Int, default=4) encoding.modify_disk_size_gb (Int, default=0) endedness.calc_rpt (Boolean, default=false) endedness.modify_disk_size_gb (Int, default=0) endedness.modify_memory_gb (Int, default=0) endedness.num_reads (Int, default=-1) endedness.paired_deviance (Float, default=0.0) endedness.round_rpt (Boolean, default=false) endedness.split_by_rg (Boolean, default=false) fastqc.memory_gb (Int, default=4) fastqc.modify_disk_size_gb (Int, default=0) fastqc.ncpu (Int, default=1) flagstat.memory_gb (Int, default=5) flagstat.modify_disk_size_gb (Int, default=0) flagstat.ncpu (Int, default=1) flagstat.use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. fqlint.disable_validator_codes (Array[String], default=[]) fqlint.modify_disk_size_gb (Int, default=0) fqlint.modify_memory_gb (Int, default=0) fqlint.paired_read_validation_level (String, default=\"high\") fqlint.panic (Boolean, default=true) fqlint.single_read_validation_level (String, default=\"high\") global_phred_scores.fast_mode (Boolean, default=true) global_phred_scores.memory_gb (Int, default=4) global_phred_scores.modify_disk_size_gb (Int, default=0) instrument.memory_gb (Int, default=4) instrument.modify_disk_size_gb (Int, default=0) instrument.num_reads (Int, default=10000) junction_annotation.fuzzy_junction_match_range (Int, default=0) junction_annotation.memory_gb (Int, default=56) junction_annotation.min_intron (Int, default=50) junction_annotation.min_mapq (Int, default=30) junction_annotation.min_reads (Int, default=2) junction_annotation.modify_disk_size_gb (Int, default=0) kraken.min_base_quality (Int, default=0) kraken.modify_disk_size_gb (Int, default=0) kraken.modify_memory_gb (Int, default=0) kraken.ncpu (Int, default=1) kraken.store_sequences (Boolean, default=false) kraken.use_names (Boolean, default=true) markdups.memory_gb (Int, default=50) markdups.modify_disk_size_gb (Int, default=0) multiqc.memory_gb (Int, default=4) multiqc.modify_disk_size_gb (Int, default=0) parse_input.disk_size_gb (Int, default=10) parse_input.memory_gb (Int, default=4) qualimap_rnaseq.memory_gb (Int, default=16) qualimap_rnaseq.modify_disk_size_gb (Int, default=0) quality_score_distribution.memory_gb (Int, default=8) quality_score_distribution.modify_disk_size_gb (Int, default=0) quickcheck.memory_gb (Int, default=4) quickcheck.modify_disk_size_gb (Int, default=0) read_length.majority_vote_cutoff (Float, default=0.7) read_length.memory_gb (Int, default=4) read_length.modify_disk_size_gb (Int, default=0) read_length.num_reads (Int, default=-1) regions_coverage.memory_gb (Int, default=8) regions_coverage.min_mapping_quality (Int, default=20) regions_coverage.modify_disk_size_gb (Int, default=0) regions_coverage.use_fast_mode (Boolean, default=true) strandedness.memory_gb (Int, default=4) strandedness.min_mapq (Int, default=30) strandedness.min_reads_per_gene (Int, default=10) strandedness.modify_disk_size_gb (Int, default=0) strandedness.num_genes (Int, default=1000) strandedness.split_by_rg (Boolean, default=false) subsample.memory_gb (Int, default=4) subsample.modify_disk_size_gb (Int, default=0) subsample.ncpu (Int, default=1) subsample_index.memory_gb (Int, default=4) subsample_index.modify_disk_size_gb (Int, default=0) subsample_index.ncpu (Int, default=1) validate_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_bam.max_errors (Int, default=2147483647) validate_bam.memory_gb (Int, default=16) validate_bam.modify_disk_size_gb (Int, default=0) validate_bam.succeed_on_warnings (Boolean, default=true) wg_coverage.memory_gb (Int, default=8) wg_coverage.min_mapping_quality (Int, default=20) wg_coverage.modify_disk_size_gb (Int, default=0) wg_coverage.use_fast_mode (Boolean, default=true) markdups_post.collect_insert_size_metrics.memory_gb (Int, default=8) markdups_post.collect_insert_size_metrics.modify_disk_size_gb (Int, default=0) markdups_post.flagstat.memory_gb (Int, default=5) markdups_post.flagstat.modify_disk_size_gb (Int, default=0) markdups_post.flagstat.ncpu (Int, default=1) markdups_post.flagstat.use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. markdups_post.regions_coverage.memory_gb (Int, default=8) markdups_post.regions_coverage.min_mapping_quality (Int, default=20) markdups_post.regions_coverage.modify_disk_size_gb (Int, default=0) markdups_post.regions_coverage.use_fast_mode (Boolean, default=true) markdups_post.wg_coverage.memory_gb (Int, default=8) markdups_post.wg_coverage.min_mapping_quality (Int, default=20) markdups_post.wg_coverage.modify_disk_size_gb (Int, default=0) markdups_post.wg_coverage.use_fast_mode (Boolean, default=true) Outputs bam_checksum (File) validate_sam_file (File) mark_duplicates_metrics (File) flagstat_report (File) fastqc_results (File) instrument_file (File) read_length_file (File) inferred_encoding (File) inferred_endedness (File) alignment_metrics (File) alignment_metrics_pdf (File) insert_size_metrics (File) insert_size_metrics_pdf (File) quality_score_distribution_txt (File) quality_score_distribution_pdf (File) phred_scores (File) kraken_report (File) mosdepth_global_dist (File) mosdepth_global_summary (File) mosdepth_region_dist (Array[File]) mosdepth_region_summary (Array[File]) multiqc_report (File) orig_read_count (File?) kraken_sequences (File?) mosdepth_dups_marked_global_dist (File?) mosdepth_dups_marked_global_summary (File?) mosdepth_dups_marked_region_summary (Array[File]?) mosdepth_dups_marked_region_dist (Array[File?]?) inferred_strandedness (File?) qualimap_rnaseq_results (File?) junction_summary (File?) junctions (File?) intermediate_files (IntermediateFiles?) parse_input description Parses and validates the quality_check workflow's provided inputs outputs {'check': 'Dummy output to indicate success and to enable call-caching', 'labels': 'An array of labels to use on the result coverage files associated with each coverage BED'} Inputs Required _runtime (Any, required ) coverage_beds_len (Int, required ): Length of the provided coverage_beds array coverage_labels (Array[String], required ): An array of equal length to coverage_beds_len which determines the prefix label applied to coverage output files. If an empty array is supplied, defaults of regions1 , regions2 , etc. will be used. gtf_provided (Boolean, required ): Was a GTF supplied by the user? Must be true if input_molecule = RNA . input_molecule (String, required ): Must be DNA or RNA Defaults disk_size_gb (Int, default=10): Disk space to allocate for task, specified in GB max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB Outputs check (String) labels (Array[String])","title":"Quality check standard"},{"location":"workflows/quality-check-standard/#quality_check","text":"description Performs comprehensive quality checks, aggregating all analyses and metrics into a final MultiQC report. external_help https://multiqc.info/ outputs {'bam_checksum': 'STDOUT of the md5sum command run on the input BAM that has been redirected to a file', 'validate_sam_file': 'Validation report produced by picard ValidateSamFile . Validation warnings and errors are logged.', 'mark_duplicates_metrics': {'description': 'The METRICS_FILE result of picard MarkDuplicates ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#DuplicationMetrics'}, 'flagstat_report': ' samtools flagstat STDOUT redirected to a file. If mark_duplicates is true , then this result will be generated from the duplicate marked BAM.', 'fastqc_results': 'A gzipped tar archive of all FastQC output files', 'instrument_file': 'TSV file containing the ngsderive isntrument report for the input BAM file', 'read_length_file': 'TSV file containing the ngsderive readlen report for the input BAM file', 'inferred_encoding': 'TSV file containing the ngsderive encoding report for the input BAM file', 'alignment_metrics': {'description': 'The text file output of picard CollectAlignmentSummaryMetrics ', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#AlignmentSummaryMetrics'}, 'alignment_metrics_pdf': 'The PDF file output of picard CollectAlignmentSummaryMetrics ', 'insert_size_metrics': {'description': 'The text file output of picard CollectInsertSizeMetrics . If mark_duplicates is true , then this result will be generated from the duplicate marked BAM.', 'external_help': 'http://broadinstitute.github.io/picard/picard-metric-definitions.html#InsertSizeMetrics'}, 'insert_size_metrics_pdf': 'The PDF file output of picard CollectInsertSizeMetrics . If mark_duplicates is true , then this result will be generated from the duplicate marked BAM.', 'quality_score_distribution_txt': 'The text file output of picard QualityScoreDistribution ', 'quality_score_distribution_pdf': 'The PDF file output of picard QualityScoreDistribution ', 'phred_scores': 'Headered TSV file containing PHRED score statistics', 'kraken_report': {'description': 'A Kraken2 summary report', 'external_help': 'https://github.com/DerrickWood/kraken2/blob/master/docs/MANUAL.markdown#sample-report-output-format'}, 'mosdepth_global_dist': 'The $prefix.mosdepth.global.dist.txt file contains a cumulative distribution indicating the proportion of total bases that were covered for at least a given coverage value. It does this for each chromosome, and for the whole genome.', 'mosdepth_global_summary': 'A summary of mean depths per chromosome', 'mosdepth_region_dist': 'The $prefix.mosdepth.region.dist.txt file contains a cumulative distribution indicating the proportion of total bases in the region(s) defined by the coverage_bed that were covered for at least a given coverage value. There will be one file in this array for each coverage_beds input file.', 'mosdepth_region_summary': 'A summary of mean depths per chromosome and within specified regions per chromosome. There will be one file in this array for each coverage_beds input file.', 'multiqc_report': 'A gzipped tar archive of all MultiQC output files', 'orig_read_count': 'A TSV report containing the original read count before subsampling', 'kraken_sequences': {'description': 'Detailed Kraken2 output that has been gzipped', 'external_help': 'https://github.com/DerrickWood/kraken2/blob/master/docs/MANUAL.markdown#standard-kraken-output-format'}, 'mosdepth_dups_marked_global_dist': 'The $prefix.mosdepth.global.dist.txt file contains a cumulative distribution indicating the proportion of total bases that were covered for at least a given coverage value. It does this for each chromosome, and for the whole genome. This file is produced from analyzing the duplicate marked BAM (only present if mark_duplicates = true ).', 'mosdepth_dups_marked_global_summary': 'A summary of mean depths per chromosome. This file is produced from analyzing the duplicate marked BAM (only present if mark_duplicates = true ).', 'mosdepth_dups_marked_region_dist': 'The $prefix.mosdepth.region.dist.txt file contains a cumulative distribution indicating the proportion of total bases in the region(s) defined by the coverage_bed that were covered for at least a given coverage value. There will be one file in this array for each coverage_beds input file. This file is produced from analyzing the duplicate marked BAM (only present if mark_duplicates = true ).', 'mosdepth_dups_marked_region_summary': 'A summary of mean depths per chromosome and within specified regions per chromosome. There will be one file in this array for each coverage_beds input file. This file is produced from analyzing the duplicate marked BAM (only present if mark_duplicates = true ).', 'inferred_strandedness': 'TSV file containing the ngsderive strandedness report', 'qualimap_rnaseq_results': 'Gzipped tar archive of all QualiMap output files', 'junction_summary': 'TSV file containing the ngsderive junction-annotation summary', 'junctions': 'TSV file containing a detailed list of annotated junctions', 'IntermediateFiles': 'Any and all files produced as intermediate during pipeline processing. Only output if output_intermediate_files = true .'}","title":"quality_check"},{"location":"workflows/quality-check-standard/#inputs","text":"","title":"Inputs"},{"location":"workflows/quality-check-standard/#required","text":"bam (File, required ): Input BAM format file to quality check bam_index (File, required ): BAM index file corresponding to the input BAM kraken_db (File, required ): Kraken2 database. Can be generated with make-qc-reference.wdl . Must be a tarball without a root directory. molecule (String, required ); description : Data type; choices : ['DNA', 'RNA'] collate_to_fastq._runtime (Any, required ) collect_alignment_summary_metrics._runtime (Any, required ) collect_insert_size_metrics._runtime (Any, required ) compression_integrity._runtime (Any, required ) compute_checksum._runtime (Any, required ) encoding._runtime (Any, required ) endedness._runtime (Any, required ) fastqc._runtime (Any, required ) flagstat._runtime (Any, required ) fqlint._runtime (Any, required ) global_phred_scores._runtime (Any, required ) instrument._runtime (Any, required ) junction_annotation._runtime (Any, required ) kraken._runtime (Any, required ) markdups._runtime (Any, required ) multiqc._runtime (Any, required ) parse_input._runtime (Any, required ) qualimap_rnaseq._runtime (Any, required ) quality_score_distribution._runtime (Any, required ) quickcheck._runtime (Any, required ) read_length._runtime (Any, required ) regions_coverage._runtime (Any, required ) strandedness._runtime (Any, required ) subsample._runtime (Any, required ) subsample_index._runtime (Any, required ) validate_bam._runtime (Any, required ) wg_coverage._runtime (Any, required ) markdups_post.collect_insert_size_metrics._runtime (Any, required ) markdups_post.flagstat._runtime (Any, required ) markdups_post.regions_coverage._runtime (Any, required ) markdups_post.wg_coverage._runtime (Any, required )","title":"Required"},{"location":"workflows/quality-check-standard/#optional","text":"gtf (File?): GTF features file. Gzipped or uncompressed. Required for RNA-Seq data. max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. validate_bam.reference_fasta (File?) wg_coverage.coverage_bed (File?) markdups_post.wg_coverage.coverage_bed (File?)","title":"Optional"},{"location":"workflows/quality-check-standard/#defaults","text":"coverage_beds (Array[File], default=[]): An array of 3 column BEDs which are passed to the -b flag of mosdepth, in order to restrict coverage analysis to select regions coverage_labels (Array[String], default=[]): An array of equal length to coverage_beds which determines the prefix label applied to the output files. If omitted, defaults of regions1 , regions2 , etc. will be used. extra_multiqc_inputs (Array[File], default=[]): An array of additional files to pass directly into MultiQC mark_duplicates (Boolean, default=molecule == \"RNA\"): Mark duplicates before analyses? Note that regardless of this setting, picard MarkDuplicates will be run in order to generate a *.MarkDuplicates.metrics.txt file. However if mark_duplicates is set to false , no BAM will be generated. If set to true , a BAM will be generated and passed to selected downstream analyses. multiqc_config (File, default=\"https://raw.githubusercontent.com/stjudecloud/workflows/main/workflows/qc/inputs/multiqc_config_hg38.yaml\"): YAML file for configuring MultiQC output_intermediate_files (Boolean, default=false): Output intermediate files? FASTQs, if RNA a collated BAM, if mark_duplicates==true a duplicate marked BAM with an index and MD5. WARNING these files can be large. prefix (String, default=basename(bam,\".bam\")): Prefix for all results files subsample_n_reads (Int, default=-1): Only process a random sampling of n reads. Any n <= 0 for processing entire input. Subsampling is done probabalistically so the exact number of reads in the output will have some variation. use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. collate_to_fastq.F (String, default=\"0x900\") collate_to_fastq.G (String, default=\"0\") collate_to_fastq.f (String, default=\"0\") collate_to_fastq.fail_on_unexpected_reads (Boolean, default=false) collate_to_fastq.modify_disk_size_gb (Int, default=0) collate_to_fastq.modify_memory_gb (Int, default=0) collate_to_fastq.ncpu (Int, default=1) collate_to_fastq.output_singletons (Boolean, default=false) collect_alignment_summary_metrics.memory_gb (Int, default=8) collect_alignment_summary_metrics.modify_disk_size_gb (Int, default=0) collect_insert_size_metrics.memory_gb (Int, default=8) collect_insert_size_metrics.modify_disk_size_gb (Int, default=0) compression_integrity.memory_gb (Int, default=4) compression_integrity.modify_disk_size_gb (Int, default=0) compute_checksum.memory_gb (Int, default=4) compute_checksum.modify_disk_size_gb (Int, default=0) encoding.memory_gb (Int, default=4) encoding.modify_disk_size_gb (Int, default=0) endedness.calc_rpt (Boolean, default=false) endedness.modify_disk_size_gb (Int, default=0) endedness.modify_memory_gb (Int, default=0) endedness.num_reads (Int, default=-1) endedness.paired_deviance (Float, default=0.0) endedness.round_rpt (Boolean, default=false) endedness.split_by_rg (Boolean, default=false) fastqc.memory_gb (Int, default=4) fastqc.modify_disk_size_gb (Int, default=0) fastqc.ncpu (Int, default=1) flagstat.memory_gb (Int, default=5) flagstat.modify_disk_size_gb (Int, default=0) flagstat.ncpu (Int, default=1) flagstat.use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. fqlint.disable_validator_codes (Array[String], default=[]) fqlint.modify_disk_size_gb (Int, default=0) fqlint.modify_memory_gb (Int, default=0) fqlint.paired_read_validation_level (String, default=\"high\") fqlint.panic (Boolean, default=true) fqlint.single_read_validation_level (String, default=\"high\") global_phred_scores.fast_mode (Boolean, default=true) global_phred_scores.memory_gb (Int, default=4) global_phred_scores.modify_disk_size_gb (Int, default=0) instrument.memory_gb (Int, default=4) instrument.modify_disk_size_gb (Int, default=0) instrument.num_reads (Int, default=10000) junction_annotation.fuzzy_junction_match_range (Int, default=0) junction_annotation.memory_gb (Int, default=56) junction_annotation.min_intron (Int, default=50) junction_annotation.min_mapq (Int, default=30) junction_annotation.min_reads (Int, default=2) junction_annotation.modify_disk_size_gb (Int, default=0) kraken.min_base_quality (Int, default=0) kraken.modify_disk_size_gb (Int, default=0) kraken.modify_memory_gb (Int, default=0) kraken.ncpu (Int, default=1) kraken.store_sequences (Boolean, default=false) kraken.use_names (Boolean, default=true) markdups.memory_gb (Int, default=50) markdups.modify_disk_size_gb (Int, default=0) multiqc.memory_gb (Int, default=4) multiqc.modify_disk_size_gb (Int, default=0) parse_input.disk_size_gb (Int, default=10) parse_input.memory_gb (Int, default=4) qualimap_rnaseq.memory_gb (Int, default=16) qualimap_rnaseq.modify_disk_size_gb (Int, default=0) quality_score_distribution.memory_gb (Int, default=8) quality_score_distribution.modify_disk_size_gb (Int, default=0) quickcheck.memory_gb (Int, default=4) quickcheck.modify_disk_size_gb (Int, default=0) read_length.majority_vote_cutoff (Float, default=0.7) read_length.memory_gb (Int, default=4) read_length.modify_disk_size_gb (Int, default=0) read_length.num_reads (Int, default=-1) regions_coverage.memory_gb (Int, default=8) regions_coverage.min_mapping_quality (Int, default=20) regions_coverage.modify_disk_size_gb (Int, default=0) regions_coverage.use_fast_mode (Boolean, default=true) strandedness.memory_gb (Int, default=4) strandedness.min_mapq (Int, default=30) strandedness.min_reads_per_gene (Int, default=10) strandedness.modify_disk_size_gb (Int, default=0) strandedness.num_genes (Int, default=1000) strandedness.split_by_rg (Boolean, default=false) subsample.memory_gb (Int, default=4) subsample.modify_disk_size_gb (Int, default=0) subsample.ncpu (Int, default=1) subsample_index.memory_gb (Int, default=4) subsample_index.modify_disk_size_gb (Int, default=0) subsample_index.ncpu (Int, default=1) validate_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_bam.max_errors (Int, default=2147483647) validate_bam.memory_gb (Int, default=16) validate_bam.modify_disk_size_gb (Int, default=0) validate_bam.succeed_on_warnings (Boolean, default=true) wg_coverage.memory_gb (Int, default=8) wg_coverage.min_mapping_quality (Int, default=20) wg_coverage.modify_disk_size_gb (Int, default=0) wg_coverage.use_fast_mode (Boolean, default=true) markdups_post.collect_insert_size_metrics.memory_gb (Int, default=8) markdups_post.collect_insert_size_metrics.modify_disk_size_gb (Int, default=0) markdups_post.flagstat.memory_gb (Int, default=5) markdups_post.flagstat.modify_disk_size_gb (Int, default=0) markdups_post.flagstat.ncpu (Int, default=1) markdups_post.flagstat.use_all_cores (Boolean, default=false): Use all cores? Recommended for cloud environments. Not recommended for cluster environments. markdups_post.regions_coverage.memory_gb (Int, default=8) markdups_post.regions_coverage.min_mapping_quality (Int, default=20) markdups_post.regions_coverage.modify_disk_size_gb (Int, default=0) markdups_post.regions_coverage.use_fast_mode (Boolean, default=true) markdups_post.wg_coverage.memory_gb (Int, default=8) markdups_post.wg_coverage.min_mapping_quality (Int, default=20) markdups_post.wg_coverage.modify_disk_size_gb (Int, default=0) markdups_post.wg_coverage.use_fast_mode (Boolean, default=true)","title":"Defaults"},{"location":"workflows/quality-check-standard/#outputs","text":"bam_checksum (File) validate_sam_file (File) mark_duplicates_metrics (File) flagstat_report (File) fastqc_results (File) instrument_file (File) read_length_file (File) inferred_encoding (File) inferred_endedness (File) alignment_metrics (File) alignment_metrics_pdf (File) insert_size_metrics (File) insert_size_metrics_pdf (File) quality_score_distribution_txt (File) quality_score_distribution_pdf (File) phred_scores (File) kraken_report (File) mosdepth_global_dist (File) mosdepth_global_summary (File) mosdepth_region_dist (Array[File]) mosdepth_region_summary (Array[File]) multiqc_report (File) orig_read_count (File?) kraken_sequences (File?) mosdepth_dups_marked_global_dist (File?) mosdepth_dups_marked_global_summary (File?) mosdepth_dups_marked_region_summary (Array[File]?) mosdepth_dups_marked_region_dist (Array[File?]?) inferred_strandedness (File?) qualimap_rnaseq_results (File?) junction_summary (File?) junctions (File?) intermediate_files (IntermediateFiles?)","title":"Outputs"},{"location":"workflows/quality-check-standard/#parse_input","text":"description Parses and validates the quality_check workflow's provided inputs outputs {'check': 'Dummy output to indicate success and to enable call-caching', 'labels': 'An array of labels to use on the result coverage files associated with each coverage BED'}","title":"parse_input"},{"location":"workflows/quality-check-standard/#inputs_1","text":"","title":"Inputs"},{"location":"workflows/quality-check-standard/#required_1","text":"_runtime (Any, required ) coverage_beds_len (Int, required ): Length of the provided coverage_beds array coverage_labels (Array[String], required ): An array of equal length to coverage_beds_len which determines the prefix label applied to coverage output files. If an empty array is supplied, defaults of regions1 , regions2 , etc. will be used. gtf_provided (Boolean, required ): Was a GTF supplied by the user? Must be true if input_molecule = RNA . input_molecule (String, required ): Must be DNA or RNA","title":"Required"},{"location":"workflows/quality-check-standard/#defaults_1","text":"disk_size_gb (Int, default=10): Disk space to allocate for task, specified in GB max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task, specified in GB","title":"Defaults"},{"location":"workflows/quality-check-standard/#outputs_1","text":"check (String) labels (Array[String])","title":"Outputs"},{"location":"workflows/scrnaseq-standard/","text":"scRNA-Seq Standard This WDL workflow runs the Cell Ranger scRNA-Seq alignment workflow for St. Jude Cloud. The workflow takes an input BAM file and splits it into FASTQ files for each read in the pair. The read pairs are then passed through Cell Ranger to generate a BAM file and perform quantification. Strandedness is inferred using ngsderive. File validation is performed at several steps, including immediately preceeding output. LICENSING MIT License Copyright 2022-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. scrnaseq_standard Inputs Required bam (File, required ): Input BAM format file to quality check gtf (File, required ): Gzipped GTF feature file transcriptome_tar_gz (File, required ): Database of reference files for Cell Ranger. Can be downloaded from 10x Genomics. compute_checksum._runtime (Any, required ) count._runtime (Any, required ) strandedness._runtime (Any, required ) subsample._runtime (Any, required ) validate_bam._runtime (Any, required ) validate_input_bam._runtime (Any, required ) cell_ranger_bam_to_fastqs.bamtofastq._runtime (Any, required ) cell_ranger_bam_to_fastqs.fqlint._runtime (Any, required ) cell_ranger_bam_to_fastqs.quickcheck._runtime (Any, required ) Optional max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. validate_bam.reference_fasta (File?) validate_input_bam.reference_fasta (File?) Defaults prefix (String, default=basename(bam,\".bam\")): Prefix for output files subsample_n_reads (Int, default=-1): Only process a random sampling of n reads. <= 0 for processing entire input BAM. use_all_cores (Boolean, default=false): Use all cores for multi-core steps? validate_input (Boolean, default=true): Ensure input BAM is well-formed before beginning harmonization? cell_ranger_bam_to_fastqs.cellranger11 (Boolean, default=false) cell_ranger_bam_to_fastqs.gemcode (Boolean, default=false) cell_ranger_bam_to_fastqs.longranger20 (Boolean, default=false) compute_checksum.memory_gb (Int, default=4) compute_checksum.modify_disk_size_gb (Int, default=0) count.memory_gb (Int, default=16) count.modify_disk_size_gb (Int, default=0) count.ncpu (Int, default=1) strandedness.memory_gb (Int, default=4) strandedness.min_mapq (Int, default=30) strandedness.min_reads_per_gene (Int, default=10) strandedness.modify_disk_size_gb (Int, default=0) strandedness.num_genes (Int, default=1000) strandedness.outfile_name (String, default=basename(bam,\".bam\") + \".strandedness.tsv\") strandedness.split_by_rg (Boolean, default=false) subsample.memory_gb (Int, default=4) subsample.modify_disk_size_gb (Int, default=0) subsample.ncpu (Int, default=1) subsample.prefix (String, default=basename(bam,\".bam\")): Prefix for output files validate_bam.ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]) validate_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_bam.max_errors (Int, default=2147483647) validate_bam.memory_gb (Int, default=16) validate_bam.modify_disk_size_gb (Int, default=0) validate_bam.outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") validate_bam.succeed_on_errors (Boolean, default=false) validate_bam.succeed_on_warnings (Boolean, default=true) validate_bam.summary_mode (Boolean, default=false) validate_input_bam.ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]) validate_input_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_input_bam.max_errors (Int, default=2147483647) validate_input_bam.memory_gb (Int, default=16) validate_input_bam.modify_disk_size_gb (Int, default=0) validate_input_bam.outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") validate_input_bam.succeed_on_errors (Boolean, default=false) validate_input_bam.succeed_on_warnings (Boolean, default=true) validate_input_bam.summary_mode (Boolean, default=false) cell_ranger_bam_to_fastqs.bamtofastq.memory_gb (Int, default=40) cell_ranger_bam_to_fastqs.bamtofastq.modify_disk_size_gb (Int, default=0) cell_ranger_bam_to_fastqs.bamtofastq.ncpu (Int, default=1) cell_ranger_bam_to_fastqs.fqlint.disable_validator_codes (Array[String], default=[]) cell_ranger_bam_to_fastqs.fqlint.modify_disk_size_gb (Int, default=0) cell_ranger_bam_to_fastqs.fqlint.modify_memory_gb (Int, default=0) cell_ranger_bam_to_fastqs.fqlint.paired_read_validation_level (String, default=\"high\") cell_ranger_bam_to_fastqs.fqlint.panic (Boolean, default=true) cell_ranger_bam_to_fastqs.fqlint.single_read_validation_level (String, default=\"high\") cell_ranger_bam_to_fastqs.quickcheck.memory_gb (Int, default=4) cell_ranger_bam_to_fastqs.quickcheck.modify_disk_size_gb (Int, default=0) Outputs harmonized_bam (File) bam_checksum (File) bam_index (File) qc (File) barcodes (File) features (File) matrix (File) filtered_gene_h5 (File) raw_gene_h5 (File) raw_barcodes (File) raw_features (File) raw_matrix (File) mol_info_h5 (File) web_summary (File) inferred_strandedness (File)","title":"Scrnaseq standard"},{"location":"workflows/scrnaseq-standard/#licensing","text":"","title":"LICENSING"},{"location":"workflows/scrnaseq-standard/#mit-license","text":"Copyright 2022-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"workflows/scrnaseq-standard/#scrnaseq_standard","text":"","title":"scrnaseq_standard"},{"location":"workflows/scrnaseq-standard/#inputs","text":"","title":"Inputs"},{"location":"workflows/scrnaseq-standard/#required","text":"bam (File, required ): Input BAM format file to quality check gtf (File, required ): Gzipped GTF feature file transcriptome_tar_gz (File, required ): Database of reference files for Cell Ranger. Can be downloaded from 10x Genomics. compute_checksum._runtime (Any, required ) count._runtime (Any, required ) strandedness._runtime (Any, required ) subsample._runtime (Any, required ) validate_bam._runtime (Any, required ) validate_input_bam._runtime (Any, required ) cell_ranger_bam_to_fastqs.bamtofastq._runtime (Any, required ) cell_ranger_bam_to_fastqs.fqlint._runtime (Any, required ) cell_ranger_bam_to_fastqs.quickcheck._runtime (Any, required )","title":"Required"},{"location":"workflows/scrnaseq-standard/#optional","text":"max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. validate_bam.reference_fasta (File?) validate_input_bam.reference_fasta (File?)","title":"Optional"},{"location":"workflows/scrnaseq-standard/#defaults","text":"prefix (String, default=basename(bam,\".bam\")): Prefix for output files subsample_n_reads (Int, default=-1): Only process a random sampling of n reads. <= 0 for processing entire input BAM. use_all_cores (Boolean, default=false): Use all cores for multi-core steps? validate_input (Boolean, default=true): Ensure input BAM is well-formed before beginning harmonization? cell_ranger_bam_to_fastqs.cellranger11 (Boolean, default=false) cell_ranger_bam_to_fastqs.gemcode (Boolean, default=false) cell_ranger_bam_to_fastqs.longranger20 (Boolean, default=false) compute_checksum.memory_gb (Int, default=4) compute_checksum.modify_disk_size_gb (Int, default=0) count.memory_gb (Int, default=16) count.modify_disk_size_gb (Int, default=0) count.ncpu (Int, default=1) strandedness.memory_gb (Int, default=4) strandedness.min_mapq (Int, default=30) strandedness.min_reads_per_gene (Int, default=10) strandedness.modify_disk_size_gb (Int, default=0) strandedness.num_genes (Int, default=1000) strandedness.outfile_name (String, default=basename(bam,\".bam\") + \".strandedness.tsv\") strandedness.split_by_rg (Boolean, default=false) subsample.memory_gb (Int, default=4) subsample.modify_disk_size_gb (Int, default=0) subsample.ncpu (Int, default=1) subsample.prefix (String, default=basename(bam,\".bam\")): Prefix for output files validate_bam.ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]) validate_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_bam.max_errors (Int, default=2147483647) validate_bam.memory_gb (Int, default=16) validate_bam.modify_disk_size_gb (Int, default=0) validate_bam.outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") validate_bam.succeed_on_errors (Boolean, default=false) validate_bam.succeed_on_warnings (Boolean, default=true) validate_bam.summary_mode (Boolean, default=false) validate_input_bam.ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]) validate_input_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_input_bam.max_errors (Int, default=2147483647) validate_input_bam.memory_gb (Int, default=16) validate_input_bam.modify_disk_size_gb (Int, default=0) validate_input_bam.outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") validate_input_bam.succeed_on_errors (Boolean, default=false) validate_input_bam.succeed_on_warnings (Boolean, default=true) validate_input_bam.summary_mode (Boolean, default=false) cell_ranger_bam_to_fastqs.bamtofastq.memory_gb (Int, default=40) cell_ranger_bam_to_fastqs.bamtofastq.modify_disk_size_gb (Int, default=0) cell_ranger_bam_to_fastqs.bamtofastq.ncpu (Int, default=1) cell_ranger_bam_to_fastqs.fqlint.disable_validator_codes (Array[String], default=[]) cell_ranger_bam_to_fastqs.fqlint.modify_disk_size_gb (Int, default=0) cell_ranger_bam_to_fastqs.fqlint.modify_memory_gb (Int, default=0) cell_ranger_bam_to_fastqs.fqlint.paired_read_validation_level (String, default=\"high\") cell_ranger_bam_to_fastqs.fqlint.panic (Boolean, default=true) cell_ranger_bam_to_fastqs.fqlint.single_read_validation_level (String, default=\"high\") cell_ranger_bam_to_fastqs.quickcheck.memory_gb (Int, default=4) cell_ranger_bam_to_fastqs.quickcheck.modify_disk_size_gb (Int, default=0)","title":"Defaults"},{"location":"workflows/scrnaseq-standard/#outputs","text":"harmonized_bam (File) bam_checksum (File) bam_index (File) qc (File) barcodes (File) features (File) matrix (File) filtered_gene_h5 (File) raw_gene_h5 (File) raw_barcodes (File) raw_features (File) raw_matrix (File) mol_info_h5 (File) web_summary (File) inferred_strandedness (File)","title":"Outputs"},{"location":"workflows/star-db-build/","text":"star_db_build description Builds a database suitable for running the STAR alignment program outputs {'reference_fa': 'FASTA format reference file', 'gtf': 'GTF feature file', 'star_db_tar_gz': 'A gzipped TAR file containing the STAR reference files'} Inputs Required gtf_name (String, required ): Name of output GTF file gtf_url (String, required ): URL to retrieve the reference GTF file from reference_fa_name (String, required ): Name of output reference FASTA file reference_fa_url (String, required ): URL to retrieve the reference FASTA file from build_star_db._runtime (Any, required ) gtf_download._runtime (Any, required ) reference_download._runtime (Any, required ) Optional gtf_md5 (String?): Expected md5sum of GTF file max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. reference_fa_md5 (String?): Expected md5sum of reference FASTA file Defaults gtf_disk_size_gb (Int, default=10): Disk space to allocate the GTF download task reference_fa_disk_size_gb (Int, default=10): Disk space to allocate the FASTA download task build_star_db.db_name (String, default=\"star_db\") build_star_db.genomeChrBinNbits (Int, default=18) build_star_db.genomeSAindexNbases (Int, default=14) build_star_db.genomeSAsparseD (Int, default=1) build_star_db.genomeSuffixLengthMax (Int, default=-1) build_star_db.memory_gb (Int, default=50) build_star_db.modify_disk_size_gb (Int, default=0) build_star_db.ncpu (Int, default=1) build_star_db.sjdbGTFchrPrefix (String, default=\"-\") build_star_db.sjdbGTFfeatureExon (String, default=\"exon\") build_star_db.sjdbGTFtagExonParentGene (String, default=\"gene_id\") build_star_db.sjdbGTFtagExonParentGeneName (String, default=\"gene_name\") build_star_db.sjdbGTFtagExonParentGeneType (String, default=\"gene_type gene_biotype\") build_star_db.sjdbGTFtagExonParentTranscript (String, default=\"transcript_id\") build_star_db.sjdbOverhang (Int, default=125) build_star_db.use_all_cores (Boolean, default=false) gtf_download.memory_gb (Int, default=4) reference_download.memory_gb (Int, default=4) Outputs reference_fa (File) gtf (File) star_db_tar_gz (File)","title":"Star db build"},{"location":"workflows/star-db-build/#star_db_build","text":"description Builds a database suitable for running the STAR alignment program outputs {'reference_fa': 'FASTA format reference file', 'gtf': 'GTF feature file', 'star_db_tar_gz': 'A gzipped TAR file containing the STAR reference files'}","title":"star_db_build"},{"location":"workflows/star-db-build/#inputs","text":"","title":"Inputs"},{"location":"workflows/star-db-build/#required","text":"gtf_name (String, required ): Name of output GTF file gtf_url (String, required ): URL to retrieve the reference GTF file from reference_fa_name (String, required ): Name of output reference FASTA file reference_fa_url (String, required ): URL to retrieve the reference FASTA file from build_star_db._runtime (Any, required ) gtf_download._runtime (Any, required ) reference_download._runtime (Any, required )","title":"Required"},{"location":"workflows/star-db-build/#optional","text":"gtf_md5 (String?): Expected md5sum of GTF file max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. reference_fa_md5 (String?): Expected md5sum of reference FASTA file","title":"Optional"},{"location":"workflows/star-db-build/#defaults","text":"gtf_disk_size_gb (Int, default=10): Disk space to allocate the GTF download task reference_fa_disk_size_gb (Int, default=10): Disk space to allocate the FASTA download task build_star_db.db_name (String, default=\"star_db\") build_star_db.genomeChrBinNbits (Int, default=18) build_star_db.genomeSAindexNbases (Int, default=14) build_star_db.genomeSAsparseD (Int, default=1) build_star_db.genomeSuffixLengthMax (Int, default=-1) build_star_db.memory_gb (Int, default=50) build_star_db.modify_disk_size_gb (Int, default=0) build_star_db.ncpu (Int, default=1) build_star_db.sjdbGTFchrPrefix (String, default=\"-\") build_star_db.sjdbGTFfeatureExon (String, default=\"exon\") build_star_db.sjdbGTFtagExonParentGene (String, default=\"gene_id\") build_star_db.sjdbGTFtagExonParentGeneName (String, default=\"gene_name\") build_star_db.sjdbGTFtagExonParentGeneType (String, default=\"gene_type gene_biotype\") build_star_db.sjdbGTFtagExonParentTranscript (String, default=\"transcript_id\") build_star_db.sjdbOverhang (Int, default=125) build_star_db.use_all_cores (Boolean, default=false) gtf_download.memory_gb (Int, default=4) reference_download.memory_gb (Int, default=4)","title":"Defaults"},{"location":"workflows/star-db-build/#outputs","text":"reference_fa (File) gtf (File) star_db_tar_gz (File)","title":"Outputs"}]}