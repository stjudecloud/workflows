{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This repository contains all bioinformatics workflows used on the St. Jude Cloud project. Officially, the repository is in beta \u2014 the project is adding workflows as they are developed and put into production. Resources requirements have been optimized to minimize failures in our computing environment, but they may not reflect the best settings for your use case. Please ensure that you tailor these parameters to fit your needs. \ud83c\udfe0 Homepage Getting Started At the time of writing, all workflows are written in WDL and are tested using Cromwell . We use Oliver to easily interact with the Cromwell server to perform various tasks. Although we do not test outside of Cromwell, we expect that the workflows will work just as well using other runners. The easiest way to get started is to install bioconda and the run the following commands: conda create -n workflows-dev -c conda-forge cromwell -y conda activate workflows-dev git clone git@github.com:stjudecloud/workflows.git cd workflows Any of the workflows in the workflows folder is a good place to start, e.g. cromwell run workflows/qc/make-qc-reference.wdl Repository Structure The repository is laid out as follows: bin - Scripts used by Cromwell configuration settings. Add this to $PATH prior to using configurations in conf with Cromwell. conf - Cromwell configuration files created for various environments that we use across our team. Feel free to use/fork/suggest improvements. docker - Dockerfiles used in our workflows. All docker images are published to the GitHub Container Registy as a part of our CI and are versioned. tools - All tools we have wrapped as individual WDL tasks. workflows - Directory containing all end-to-end bioinformatics workflows. Workflows Available The current workflows exist in this repo with the following statuses: Name Version Description Specification Workflow Status RNA-Seq Standard v2.0.0 Standard RNA-Seq harmonization pipeline. Specification Realign BAM Workflow , FastQ Workflow Build STAR References N/A Build STAR aligner reference files used in RNA-Seq Standard harmonization pipelines. None Workflow Quality Check Standard v1.0.0 Perform ~10 different QC analyses on a BAM file and compile the results using MultiQC . Specification Workflow Build FastQ Screen References N/A Build references used in WGS/WES Quality Check pipeline for running FastQ Screen . None Workflow ESTIMATE v1.0.0 ( beta ) Runs the ESTIMATE software package on a feature counts file. None Workflow Calculate Gene Lengths N/A Produces a gene length file from a GTF. None Workflow Build BWA References N/A Builds reference files used by the BWA aligner . None Workflow BAM to FastQs v1.0.0 Split a BAM file into read groups, then read 1 FastQs and read 2 FastQs. None Workflow Author \ud83d\udc64 St. Jude Cloud Team Website: https://stjude.cloud Github: @stjudecloud Twitter: @StJudeResearch Tests Given that this repo is still new, there are no tests. When we add tests, we will update the README. \ud83e\udd1d Contributing Contributions, issues and feature requests are welcome! Feel free to check issues page . You can also take a look at the contributing guide . \ud83d\udcdd License Copyright \u00a9 2020-Present St. Jude Cloud Team . This project is MIT licensed.","title":"Home"},{"location":"#homepage","text":"","title":"\ud83c\udfe0 Homepage"},{"location":"#getting-started","text":"At the time of writing, all workflows are written in WDL and are tested using Cromwell . We use Oliver to easily interact with the Cromwell server to perform various tasks. Although we do not test outside of Cromwell, we expect that the workflows will work just as well using other runners. The easiest way to get started is to install bioconda and the run the following commands: conda create -n workflows-dev -c conda-forge cromwell -y conda activate workflows-dev git clone git@github.com:stjudecloud/workflows.git cd workflows Any of the workflows in the workflows folder is a good place to start, e.g. cromwell run workflows/qc/make-qc-reference.wdl","title":"Getting Started"},{"location":"#repository-structure","text":"The repository is laid out as follows: bin - Scripts used by Cromwell configuration settings. Add this to $PATH prior to using configurations in conf with Cromwell. conf - Cromwell configuration files created for various environments that we use across our team. Feel free to use/fork/suggest improvements. docker - Dockerfiles used in our workflows. All docker images are published to the GitHub Container Registy as a part of our CI and are versioned. tools - All tools we have wrapped as individual WDL tasks. workflows - Directory containing all end-to-end bioinformatics workflows.","title":"Repository Structure"},{"location":"#workflows-available","text":"The current workflows exist in this repo with the following statuses: Name Version Description Specification Workflow Status RNA-Seq Standard v2.0.0 Standard RNA-Seq harmonization pipeline. Specification Realign BAM Workflow , FastQ Workflow Build STAR References N/A Build STAR aligner reference files used in RNA-Seq Standard harmonization pipelines. None Workflow Quality Check Standard v1.0.0 Perform ~10 different QC analyses on a BAM file and compile the results using MultiQC . Specification Workflow Build FastQ Screen References N/A Build references used in WGS/WES Quality Check pipeline for running FastQ Screen . None Workflow ESTIMATE v1.0.0 ( beta ) Runs the ESTIMATE software package on a feature counts file. None Workflow Calculate Gene Lengths N/A Produces a gene length file from a GTF. None Workflow Build BWA References N/A Builds reference files used by the BWA aligner . None Workflow BAM to FastQs v1.0.0 Split a BAM file into read groups, then read 1 FastQs and read 2 FastQs. None Workflow","title":"Workflows Available"},{"location":"#author","text":"\ud83d\udc64 St. Jude Cloud Team Website: https://stjude.cloud Github: @stjudecloud Twitter: @StJudeResearch","title":"Author"},{"location":"#tests","text":"Given that this repo is still new, there are no tests. When we add tests, we will update the README.","title":"Tests"},{"location":"#contributing","text":"Contributions, issues and feature requests are welcome! Feel free to check issues page . You can also take a look at the contributing guide .","title":"\ud83e\udd1d Contributing"},{"location":"#license","text":"Copyright \u00a9 2020-Present St. Jude Cloud Team . This project is MIT licensed.","title":"\ud83d\udcdd License"},{"location":"build_for_dnanexus/","text":"Building WDL workflows for DNAnexus Obtain dxWDL JAR Retrieve the latest dxWDL JAR release from GitHub: https://github.com/dnanexus/dxWDL/releases Optional workflow parameters for dxWDL -project - Specify a project to compile the workflow. This is optional and otherwise uses the currently selected project. -archive - Archive older versions of the workflow and applets -defaults - Set default options for certain parameters -verbose - Detailed build information -locked - Creates a one stage worklfow that is cleaner in the interface -extras - JSON formatted file with options primarily for the DNAnexus platform settings Build Interactive t-SNE workflow for DNAnexus Commands for building the t-SNE workflows are included below. Your version of dxWDL may differ from the version included below. Several optional parameters are included. -defaults specifies DNAnexus paths to reference data for the workflow. -extras specifies that tasks should be retried by default on failure. Build workflow running htseq-count on BAM input java -jar dxWDL-v1.46.2.jar compile workflows/interactive-tsne/interactive_tsne_from_bams.wdl -project project-FjFfvV89F80QvvxJ8131yzpB -archive -verbose -defaults workflows/interactive-tsne/inputs/defaults_bam.json -extras workflows/interactive-tsne/inputs/extras.json -locked Build workflow from HTSeq counts data java -jar dxWDL-v1.46.2.jar compile workflows/interactive-tsne/interactive_tsne_from_counts.wdl -project project-FjFfvV89F80QvvxJ8131yzpB -archive -verbose -defaults workflows/interactive-tsne/inputs/defaults_counts.json -extras workflows/interactive-tsne/inputs/extras.json -locked Build workflow with RNA-Seq V2 remapping of BAM input java -jar dxWDL-v1.46.2.jar compile workflows/interactive-tsne/interactive-tsne.wdl -project project-FjFfvV89F80QvvxJ8131yzpB -archive -verbose -defaults workflows/interactive-tsne/inputs/defaults.json -extras workflows/interactive-tsne/inputs/extras.json -locked","title":"Building WDL workflows for DNAnexus"},{"location":"build_for_dnanexus/#building-wdl-workflows-for-dnanexus","text":"","title":"Building WDL workflows for DNAnexus"},{"location":"build_for_dnanexus/#obtain-dxwdl-jar","text":"Retrieve the latest dxWDL JAR release from GitHub: https://github.com/dnanexus/dxWDL/releases","title":"Obtain dxWDL JAR"},{"location":"build_for_dnanexus/#optional-workflow-parameters-for-dxwdl","text":"-project - Specify a project to compile the workflow. This is optional and otherwise uses the currently selected project. -archive - Archive older versions of the workflow and applets -defaults - Set default options for certain parameters -verbose - Detailed build information -locked - Creates a one stage worklfow that is cleaner in the interface -extras - JSON formatted file with options primarily for the DNAnexus platform settings","title":"Optional workflow parameters for dxWDL"},{"location":"build_for_dnanexus/#build-interactive-t-sne-workflow-for-dnanexus","text":"Commands for building the t-SNE workflows are included below. Your version of dxWDL may differ from the version included below. Several optional parameters are included. -defaults specifies DNAnexus paths to reference data for the workflow. -extras specifies that tasks should be retried by default on failure.","title":"Build Interactive t-SNE workflow for DNAnexus"},{"location":"build_for_dnanexus/#build-workflow-running-htseq-count-on-bam-input","text":"java -jar dxWDL-v1.46.2.jar compile workflows/interactive-tsne/interactive_tsne_from_bams.wdl -project project-FjFfvV89F80QvvxJ8131yzpB -archive -verbose -defaults workflows/interactive-tsne/inputs/defaults_bam.json -extras workflows/interactive-tsne/inputs/extras.json -locked","title":"Build workflow running htseq-count on BAM input"},{"location":"build_for_dnanexus/#build-workflow-from-htseq-counts-data","text":"java -jar dxWDL-v1.46.2.jar compile workflows/interactive-tsne/interactive_tsne_from_counts.wdl -project project-FjFfvV89F80QvvxJ8131yzpB -archive -verbose -defaults workflows/interactive-tsne/inputs/defaults_counts.json -extras workflows/interactive-tsne/inputs/extras.json -locked","title":"Build workflow from HTSeq counts data"},{"location":"build_for_dnanexus/#build-workflow-with-rna-seq-v2-remapping-of-bam-input","text":"java -jar dxWDL-v1.46.2.jar compile workflows/interactive-tsne/interactive-tsne.wdl -project project-FjFfvV89F80QvvxJ8131yzpB -archive -verbose -defaults workflows/interactive-tsne/inputs/defaults.json -extras workflows/interactive-tsne/inputs/extras.json -locked","title":"Build workflow with RNA-Seq V2 remapping of BAM input"},{"location":"tasks/bwa/","text":"BWA This WDL tool wraps BWA . BWA aligns sequencing reads to a reference genome. bwa_aln author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool maps single-end FastQ files to BAM format using bwa aln. Inputs Required bwadb_tar_gz (File, required ): Gzipped tar archive of the bwa reference files. Files should be at the root of the archive. fastq (File, required ): Input FastQ file to align with bwa Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) memory_gb (Int, default=5) ncpu (Int, default=1) output_bam (String, default=basename(fastq,\".fq.gz\") + \".bam\") read_group (String, default=\"\") use_all_cores (Boolean, default=false) Outputs bam (File) bwa_aln_pe author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool maps paired-end FastQ files to BAM format using bwa aln. Inputs Required bwadb_tar_gz (File, required ): Gzipped tar archive of the bwa reference files. Files should be at the root of the archive. fastq1 (File, required ): Input FastQ read 1 file to align with bwa fastq2 (File, required ): Input FastQ read 2 file to align with bwa Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) memory_gb (Int, default=5) ncpu (Int, default=1) output_bam (String, default=basename(fastq1,\".fq.gz\") + \".bam\") read_group (String, default=\"\") use_all_cores (Boolean, default=false) Outputs bam (File) bwa_mem author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool maps FastQ files to BAM format using bwa mem. Inputs Required bwadb_tar_gz (File, required ): Gzipped tar archive of the bwa reference files. Files should be at the root of the archive. fastq (File, required ): Input FastQ file to align with bwa Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) memory_gb (Int, default=5) ncpu (Int, default=1) output_bam (String, default=basename(fastq,\".fq.gz\") + \".bam\") read_group (String, default=\"\") use_all_cores (Boolean, default=false) Outputs bam (File) build_bwa_db author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool creates a BWA index and returns it as a compressed tar archive. Inputs Required reference_fasta (File, required ): Input reference Fasta file to index with bwa. Should be compressed with gzip. Optional disk_size_gb (Int?) Defaults bwadb_out_name (String, default=\"bwadb.tar.gz\"): Name of the output gzipped tar archive of the bwa reference files. max_retries (Int, default=1) memory_gb (Int, default=5) Outputs bwadb_tar_gz (File) format_rg_for_bwa author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool converts read group records from the BAM-formatted strings to strings expected by bwa. Inputs Required read_group (String, required ): Read group string Defaults max_retries (Int, default=1) Outputs formatted_rg (String)","title":"BWA"},{"location":"tasks/bwa/#bwa","text":"This WDL tool wraps BWA . BWA aligns sequencing reads to a reference genome.","title":"BWA"},{"location":"tasks/bwa/#bwa_aln","text":"author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool maps single-end FastQ files to BAM format using bwa aln.","title":"bwa_aln"},{"location":"tasks/bwa/#inputs","text":"","title":"Inputs"},{"location":"tasks/bwa/#required","text":"bwadb_tar_gz (File, required ): Gzipped tar archive of the bwa reference files. Files should be at the root of the archive. fastq (File, required ): Input FastQ file to align with bwa","title":"Required"},{"location":"tasks/bwa/#optional","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/bwa/#defaults","text":"max_retries (Int, default=1) memory_gb (Int, default=5) ncpu (Int, default=1) output_bam (String, default=basename(fastq,\".fq.gz\") + \".bam\") read_group (String, default=\"\") use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/bwa/#outputs","text":"bam (File)","title":"Outputs"},{"location":"tasks/bwa/#bwa_aln_pe","text":"author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool maps paired-end FastQ files to BAM format using bwa aln.","title":"bwa_aln_pe"},{"location":"tasks/bwa/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/bwa/#required_1","text":"bwadb_tar_gz (File, required ): Gzipped tar archive of the bwa reference files. Files should be at the root of the archive. fastq1 (File, required ): Input FastQ read 1 file to align with bwa fastq2 (File, required ): Input FastQ read 2 file to align with bwa","title":"Required"},{"location":"tasks/bwa/#optional_1","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/bwa/#defaults_1","text":"max_retries (Int, default=1) memory_gb (Int, default=5) ncpu (Int, default=1) output_bam (String, default=basename(fastq1,\".fq.gz\") + \".bam\") read_group (String, default=\"\") use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/bwa/#outputs_1","text":"bam (File)","title":"Outputs"},{"location":"tasks/bwa/#bwa_mem","text":"author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool maps FastQ files to BAM format using bwa mem.","title":"bwa_mem"},{"location":"tasks/bwa/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/bwa/#required_2","text":"bwadb_tar_gz (File, required ): Gzipped tar archive of the bwa reference files. Files should be at the root of the archive. fastq (File, required ): Input FastQ file to align with bwa","title":"Required"},{"location":"tasks/bwa/#optional_2","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/bwa/#defaults_2","text":"max_retries (Int, default=1) memory_gb (Int, default=5) ncpu (Int, default=1) output_bam (String, default=basename(fastq,\".fq.gz\") + \".bam\") read_group (String, default=\"\") use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/bwa/#outputs_2","text":"bam (File)","title":"Outputs"},{"location":"tasks/bwa/#build_bwa_db","text":"author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool creates a BWA index and returns it as a compressed tar archive.","title":"build_bwa_db"},{"location":"tasks/bwa/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/bwa/#required_3","text":"reference_fasta (File, required ): Input reference Fasta file to index with bwa. Should be compressed with gzip.","title":"Required"},{"location":"tasks/bwa/#optional_3","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/bwa/#defaults_3","text":"bwadb_out_name (String, default=\"bwadb.tar.gz\"): Name of the output gzipped tar archive of the bwa reference files. max_retries (Int, default=1) memory_gb (Int, default=5)","title":"Defaults"},{"location":"tasks/bwa/#outputs_3","text":"bwadb_tar_gz (File)","title":"Outputs"},{"location":"tasks/bwa/#format_rg_for_bwa","text":"author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool converts read group records from the BAM-formatted strings to strings expected by bwa.","title":"format_rg_for_bwa"},{"location":"tasks/bwa/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/bwa/#required_4","text":"read_group (String, required ): Read group string","title":"Required"},{"location":"tasks/bwa/#defaults_4","text":"max_retries (Int, default=1)","title":"Defaults"},{"location":"tasks/bwa/#outputs_4","text":"formatted_rg (String)","title":"Outputs"},{"location":"tasks/cellranger/","text":"Cell Ranger This WDL tool wrap the 10x Genomics Cell Ranger tool. Cell Ranger is a tool for handling scRNA-Seq data. count author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool runs Cell Ranger count to generate an aligned BAM and feature counts from scRNA-Seq data. Inputs Required fastqs_tar_gz (File, required ): Path to the FastQ folder archive in .tar.gz format id (String, required ): A unique run ID transcriptome_tar_gz (File, required ): Path to Cell Ranger-compatible transcriptome reference in .tar.gz format Defaults jobmode (String, default=\"local\") max_retries (Int, default=1) memory_gb (Int, default=16) ncpu (Int, default=8) use_all_cores (Boolean, default=false) Outputs bam (File) bam_index (File) qc (File) barcodes (File) features (File) matrix (File) filtered_gene_h5 (File) raw_gene_h5 (File) raw_barcodes (File) raw_features (File) raw_matrix (File) mol_info_h5 (File) web_summary (File) loupe (File) bamtofastq author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool runs the 10x bamtofastq tool to convert Cell Ranger generated BAM files back to FastQ files Inputs Required bam (File, required ): Input BAM to convert to Cell Ranger compatible fastqs Defaults cellranger11 (Boolean, default=false): Convert a BAM produced by Cell Ranger 1.0-1.1 gemcode (Boolean, default=false): Convert a BAM produced from GemCode data (Longranger 1.0 - 1.3) longranger20 (Boolean, default=false): Convert a BAM produced by Longranger 2.0 max_retries (Int, default=1) memory_gb (Int, default=8) ncpu (Int, default=4) use_all_cores (Boolean, default=false) Outputs fastqs (Array[File]) fastqs_archive (File) read1 (Array[File]) read2 (Array[File])","title":"Cellranger"},{"location":"tasks/cellranger/#count","text":"author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool runs Cell Ranger count to generate an aligned BAM and feature counts from scRNA-Seq data.","title":"count"},{"location":"tasks/cellranger/#inputs","text":"","title":"Inputs"},{"location":"tasks/cellranger/#required","text":"fastqs_tar_gz (File, required ): Path to the FastQ folder archive in .tar.gz format id (String, required ): A unique run ID transcriptome_tar_gz (File, required ): Path to Cell Ranger-compatible transcriptome reference in .tar.gz format","title":"Required"},{"location":"tasks/cellranger/#defaults","text":"jobmode (String, default=\"local\") max_retries (Int, default=1) memory_gb (Int, default=16) ncpu (Int, default=8) use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/cellranger/#outputs","text":"bam (File) bam_index (File) qc (File) barcodes (File) features (File) matrix (File) filtered_gene_h5 (File) raw_gene_h5 (File) raw_barcodes (File) raw_features (File) raw_matrix (File) mol_info_h5 (File) web_summary (File) loupe (File)","title":"Outputs"},{"location":"tasks/cellranger/#bamtofastq","text":"author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool runs the 10x bamtofastq tool to convert Cell Ranger generated BAM files back to FastQ files","title":"bamtofastq"},{"location":"tasks/cellranger/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/cellranger/#required_1","text":"bam (File, required ): Input BAM to convert to Cell Ranger compatible fastqs","title":"Required"},{"location":"tasks/cellranger/#defaults_1","text":"cellranger11 (Boolean, default=false): Convert a BAM produced by Cell Ranger 1.0-1.1 gemcode (Boolean, default=false): Convert a BAM produced from GemCode data (Longranger 1.0 - 1.3) longranger20 (Boolean, default=false): Convert a BAM produced by Longranger 2.0 max_retries (Int, default=1) memory_gb (Int, default=8) ncpu (Int, default=4) use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/cellranger/#outputs_1","text":"fastqs (Array[File]) fastqs_archive (File) read1 (Array[File]) read2 (Array[File])","title":"Outputs"},{"location":"tasks/deeptools/","text":"Deeptools This WDL tool wraps the DeepTools tool. DeepTools is a suite of Python tools for analysis of high throughput sequencing analysis. bamCoverage author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool generates a BigWig coverage track using bamCoverage from DeepTools (https://deeptools.readthedocs.io/en/develop/index.html). Inputs Required bam (File, required ): Input BAM format file to generate coverage for bam_index (File, required ) Defaults max_retries (Int, default=1) memory_gb (Int, default=5) ncpu (Int, default=1) prefix (String, default=basename(bam,\".bam\")) use_all_cores (Boolean, default=false) Outputs bigwig (File)","title":"Deeptools"},{"location":"tasks/deeptools/#deeptools","text":"This WDL tool wraps the DeepTools tool. DeepTools is a suite of Python tools for analysis of high throughput sequencing analysis.","title":"Deeptools"},{"location":"tasks/deeptools/#bamcoverage","text":"author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool generates a BigWig coverage track using bamCoverage from DeepTools (https://deeptools.readthedocs.io/en/develop/index.html).","title":"bamCoverage"},{"location":"tasks/deeptools/#inputs","text":"","title":"Inputs"},{"location":"tasks/deeptools/#required","text":"bam (File, required ): Input BAM format file to generate coverage for bam_index (File, required )","title":"Required"},{"location":"tasks/deeptools/#defaults","text":"max_retries (Int, default=1) memory_gb (Int, default=5) ncpu (Int, default=1) prefix (String, default=basename(bam,\".bam\")) use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/deeptools/#outputs","text":"bigwig (File)","title":"Outputs"},{"location":"tasks/estimate/","text":"ESTIMATE This WDL tool wraps the ESTIMATE software package . calc_tpm Inputs Required counts (File, required ): A two column headerless TSV file with gene names in the first column and counts (as integers) in the second column. Entries starting with '__' will be discarded. Can be generated with htseq.wdl . gene_lengths (File, required ): A two column headered TSV file with gene names (matching those in the counts file) in the first column and feature lengths (as integers) in the second column. Can be generated with calc-gene-lengths.wdl . Defaults max_retries (Int, default=1): Number of times to retry in case of failure outfile_name (String, default=basename(counts,\".feature-counts.txt\") + \".TPM.txt\"): Name of the TPM file Outputs tpm_file (File) run_ESTIMATE Inputs Required gene_expression_file (File, required ): A 2 column headered TSV file with 'Gene name' in the first column and gene expression values (as floats) in the second column. Can be generated with the calc_tpm task. Defaults max_retries (Int, default=1): Number of times to retry in case of failure outfile_name (String, default=basename(gene_expression_file,\".TPM.txt\") + \".ESTIMATE.gct\"): Name of the ESTIMATE output file Outputs estimate_file (File)","title":"ESTIMATE"},{"location":"tasks/estimate/#estimate","text":"This WDL tool wraps the ESTIMATE software package .","title":"ESTIMATE"},{"location":"tasks/estimate/#calc_tpm","text":"","title":"calc_tpm"},{"location":"tasks/estimate/#inputs","text":"","title":"Inputs"},{"location":"tasks/estimate/#required","text":"counts (File, required ): A two column headerless TSV file with gene names in the first column and counts (as integers) in the second column. Entries starting with '__' will be discarded. Can be generated with htseq.wdl . gene_lengths (File, required ): A two column headered TSV file with gene names (matching those in the counts file) in the first column and feature lengths (as integers) in the second column. Can be generated with calc-gene-lengths.wdl .","title":"Required"},{"location":"tasks/estimate/#defaults","text":"max_retries (Int, default=1): Number of times to retry in case of failure outfile_name (String, default=basename(counts,\".feature-counts.txt\") + \".TPM.txt\"): Name of the TPM file","title":"Defaults"},{"location":"tasks/estimate/#outputs","text":"tpm_file (File)","title":"Outputs"},{"location":"tasks/estimate/#run_estimate","text":"","title":"run_ESTIMATE"},{"location":"tasks/estimate/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/estimate/#required_1","text":"gene_expression_file (File, required ): A 2 column headered TSV file with 'Gene name' in the first column and gene expression values (as floats) in the second column. Can be generated with the calc_tpm task.","title":"Required"},{"location":"tasks/estimate/#defaults_1","text":"max_retries (Int, default=1): Number of times to retry in case of failure outfile_name (String, default=basename(gene_expression_file,\".TPM.txt\") + \".ESTIMATE.gct\"): Name of the ESTIMATE output file","title":"Defaults"},{"location":"tasks/estimate/#outputs_1","text":"estimate_file (File)","title":"Outputs"},{"location":"tasks/fastq_screen/","text":"FastQ Screen Methods for bootstrapping and running FastQ Screen build_db author Clay McLeod, Andrew Frantz email clay.mcleod@STJUDE.org, andrew.frantz@stjude.org description This WDL tool downloads the FastQ Screen database and archives it. Inputs Defaults max_retries (Int, default=1) tar_filename (String, default=\"fastq-screen-db.tar.gz\") Outputs db (File) fastq_screen author Andrew Frantz, Clay McLeod email andrew.frantz@stjude.org, clay.mcleod@stjude.org description This WDL tool runs FastQ Screen on a sample. Exit code 42 indicates a rare intermittent bug. Job should succeed upon resubmission. Inputs Required db (File, required ): Database for FastQ Screen. Must untar directly to the genome directories. provided_encoding (String, required ) read1 (File, required ) read2 (File, required ) Optional sample_name (String?) Defaults inferred_encoding (String, default=\"\") max_retries (Int, default=1) num_reads (Int, default=0) Outputs raw_data (File) results (File)","title":"FastQ Screen"},{"location":"tasks/fastq_screen/#fastq-screen","text":"Methods for bootstrapping and running FastQ Screen","title":"FastQ Screen"},{"location":"tasks/fastq_screen/#build_db","text":"author Clay McLeod, Andrew Frantz email clay.mcleod@STJUDE.org, andrew.frantz@stjude.org description This WDL tool downloads the FastQ Screen database and archives it.","title":"build_db"},{"location":"tasks/fastq_screen/#inputs","text":"","title":"Inputs"},{"location":"tasks/fastq_screen/#defaults","text":"max_retries (Int, default=1) tar_filename (String, default=\"fastq-screen-db.tar.gz\")","title":"Defaults"},{"location":"tasks/fastq_screen/#outputs","text":"db (File)","title":"Outputs"},{"location":"tasks/fastq_screen/#fastq_screen","text":"author Andrew Frantz, Clay McLeod email andrew.frantz@stjude.org, clay.mcleod@stjude.org description This WDL tool runs FastQ Screen on a sample. Exit code 42 indicates a rare intermittent bug. Job should succeed upon resubmission.","title":"fastq_screen"},{"location":"tasks/fastq_screen/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/fastq_screen/#required","text":"db (File, required ): Database for FastQ Screen. Must untar directly to the genome directories. provided_encoding (String, required ) read1 (File, required ) read2 (File, required )","title":"Required"},{"location":"tasks/fastq_screen/#optional","text":"sample_name (String?)","title":"Optional"},{"location":"tasks/fastq_screen/#defaults_1","text":"inferred_encoding (String, default=\"\") max_retries (Int, default=1) num_reads (Int, default=0)","title":"Defaults"},{"location":"tasks/fastq_screen/#outputs_1","text":"raw_data (File) results (File)","title":"Outputs"},{"location":"tasks/fastqc/","text":"FastQC This WDL tool wraps the FastQC tool. FastQC generates quality control metrics for sequencing pipelines. fastqc author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool generates a FastQC quality control metrics report for the input BAM file. Inputs Required bam (File, required ): Input BAM format file to generate coverage for Defaults max_retries (Int, default=1) memory_gb (Int, default=5) ncpu (Int, default=1) Outputs raw_data (File) results (File)","title":"FastQC"},{"location":"tasks/fastqc/#fastqc","text":"This WDL tool wraps the FastQC tool. FastQC generates quality control metrics for sequencing pipelines.","title":"FastQC"},{"location":"tasks/fastqc/#fastqc_1","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool generates a FastQC quality control metrics report for the input BAM file.","title":"fastqc"},{"location":"tasks/fastqc/#inputs","text":"","title":"Inputs"},{"location":"tasks/fastqc/#required","text":"bam (File, required ): Input BAM format file to generate coverage for","title":"Required"},{"location":"tasks/fastqc/#defaults","text":"max_retries (Int, default=1) memory_gb (Int, default=5) ncpu (Int, default=1)","title":"Defaults"},{"location":"tasks/fastqc/#outputs","text":"raw_data (File) results (File)","title":"Outputs"},{"location":"tasks/fq/","text":"FQ This WDL tool wraps the fq tool . The fq library provides methods for manipulating Illumina generated FastQ files. fqlint author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool performs quality control on the input FastQ pairs to ensure proper formatting. Inputs Required read1 (File, required ): Input FastQ with read one Optional read2 (File?): Input FastQ with read two Defaults max_retries (Int, default=1) memory_gb (Int, default=8) Outputs validated_read1 (File) validated_read2 (File?)","title":"FQ"},{"location":"tasks/fq/#fq","text":"This WDL tool wraps the fq tool . The fq library provides methods for manipulating Illumina generated FastQ files.","title":"FQ"},{"location":"tasks/fq/#fqlint","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool performs quality control on the input FastQ pairs to ensure proper formatting.","title":"fqlint"},{"location":"tasks/fq/#inputs","text":"","title":"Inputs"},{"location":"tasks/fq/#required","text":"read1 (File, required ): Input FastQ with read one","title":"Required"},{"location":"tasks/fq/#optional","text":"read2 (File?): Input FastQ with read two","title":"Optional"},{"location":"tasks/fq/#defaults","text":"max_retries (Int, default=1) memory_gb (Int, default=8)","title":"Defaults"},{"location":"tasks/fq/#outputs","text":"validated_read1 (File) validated_read2 (File?)","title":"Outputs"},{"location":"tasks/htseq/","text":"HTSeq This WDL tool wraps the htseq tool. HTSeq is a Python library for analyzing sequencing data. count author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool performs read counting for a set of features in the input BAM file. Inputs Required bam (File, required ): Input BAM format file to generate coverage for gtf (File, required ): Input genomic features in gzipped GTF format to count reads for strandedness (String, required ); description : ; choices : ['yes', 'reverse', 'no'] Defaults added_memory_gb (Int, default=0): Additional RAM to allocate for task. Default RAM is allocated dynamically based on the BAM size. feature_type (String, default=\"exon\"): Feature type (3rd column in GTF file) to be used, all features of other type are ignored idattr (String, default=\"gene_name\"): GFF attribute to be used as feature ID max_retries (Int, default=1): Number of times to retry in case of failure minaqual (Int, default=10): Skip all reads with alignment quality lower than the given minimum value mode (String, default=\"union\"): Mode to handle reads overlapping more than one feature nonunique (Boolean, default=false): Score reads that align to or are assigned to more than one feature? outfile_name (String, default=basename(bam,\".bam\") + \".feature-counts.txt\"): Name of the feature count file pos_sorted (Boolean, default=true): Is the BAM position sorted (true) or name sorted (false)? secondary_alignments (Boolean, default=false): Score secondary alignments (SAM flag 0x100)? supplementary_alignments (Boolean, default=false): Score supplementary/chimeric alignments (SAM flag 0x800)? Outputs feature_counts (File)","title":"HTSeq"},{"location":"tasks/htseq/#htseq","text":"This WDL tool wraps the htseq tool. HTSeq is a Python library for analyzing sequencing data.","title":"HTSeq"},{"location":"tasks/htseq/#count","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool performs read counting for a set of features in the input BAM file.","title":"count"},{"location":"tasks/htseq/#inputs","text":"","title":"Inputs"},{"location":"tasks/htseq/#required","text":"bam (File, required ): Input BAM format file to generate coverage for gtf (File, required ): Input genomic features in gzipped GTF format to count reads for strandedness (String, required ); description : ; choices : ['yes', 'reverse', 'no']","title":"Required"},{"location":"tasks/htseq/#defaults","text":"added_memory_gb (Int, default=0): Additional RAM to allocate for task. Default RAM is allocated dynamically based on the BAM size. feature_type (String, default=\"exon\"): Feature type (3rd column in GTF file) to be used, all features of other type are ignored idattr (String, default=\"gene_name\"): GFF attribute to be used as feature ID max_retries (Int, default=1): Number of times to retry in case of failure minaqual (Int, default=10): Skip all reads with alignment quality lower than the given minimum value mode (String, default=\"union\"): Mode to handle reads overlapping more than one feature nonunique (Boolean, default=false): Score reads that align to or are assigned to more than one feature? outfile_name (String, default=basename(bam,\".bam\") + \".feature-counts.txt\"): Name of the feature count file pos_sorted (Boolean, default=true): Is the BAM position sorted (true) or name sorted (false)? secondary_alignments (Boolean, default=false): Score secondary alignments (SAM flag 0x100)? supplementary_alignments (Boolean, default=false): Score supplementary/chimeric alignments (SAM flag 0x800)?","title":"Defaults"},{"location":"tasks/htseq/#outputs","text":"feature_counts (File)","title":"Outputs"},{"location":"tasks/kraken/","text":"Kraken2 Methods for bootstrapping and running Kraken2 download_taxonomy author Andrew Frantz email andrew.frantz@stjude.org description This WDL task downloads the NCBI taxonomy which Kraken2 uses to create a tree and taxon map during the database build. Inputs Defaults disk_size_gb (Int, default=60): Disk space to allocate for task max_retries (Int, default=3): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task protein (Boolean, default=false): Construct a protein database? Outputs taxonomy (File) download_library author Andrew Frantz email andrew.frantz@stjude.org description This WDL task downloads a predefined library of reference genomes from NCBI. Detailed organism list for libraries (except nt) available at: https://ftp.ncbi.nlm.nih.gov/genomes/refseq/. Inputs Required library_name (String, required ); description : Library to download. Note that protein must equal true if downloading the nr library, and protein must equal false if downloading the UniVec or UniVec_Core library.; choices : ['archaea', 'bacteria', 'plasmid', 'viral', 'human', 'fungi', 'plant', 'protozoa', 'nt', 'nr', 'UniVec', 'UniVec_Core'] Defaults added_disk_size_gb (Int, default=0): Additional disk space to allocate for task. Default disk size is determined dynamically based on library_name . Note that the default sizes are adequate as of April 2023, but new genomes are constantly being added to the NCBI database. More disk space may be required depending on when in the future this task is run. max_retries (Int, default=3): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task protein (Boolean, default=false): Construct a protein database? Outputs library (File) create_library_from_fastas author Andrew Frantz email andrew.frantz@stjude.org description This WDL task adds custom entries from FASTA files to a Kraken2 DB. Inputs Required fastas (Array[File], required ): Array of gzipped FASTA files. Each FASTA sequence ID must contain either an NCBI accession number or an explicit assignment of the taxonomy ID using kraken:taxid Defaults added_disk_size_gb (Int, default=0): Additional disk space to allocate for task. Default disk size is determined dynamically based on fastas size. max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task protein (Boolean, default=false): Construct a protein database? Outputs custom_library (File) build_db author Andrew Frantz email andrew.frantz@stjude.org description This WDL task builds a custom Kraken2 database. Inputs Required tarballs (Array[File], required ): Tarballs containing the NCBI taxonomy (generated by the download_taxonomy task) and at least one library (generated by the download_library task). Tarballs must not have a root directory. Defaults added_disk_size_gb (Int, default=0): Additional disk space to allocate for task. Default disk size is determined dynamically based on size of the input tarballs . added_memory_gb (Int, default=0): Additional RAM to allocate for task. Default RAM is allocated dynamically based on the database size. db_name (String, default=\"kraken2_db\"): Name for output in compressed, archived format. The suffix .tar.gz will be added. detect_nproc (Boolean, default=false): Use all available cores. Recommended for cloud environments. Not recommended for cluster environments. kmer_len (Int, default=if protein then 15 else 35): K-mer length in bp that will be used to build the database max_db_size_gb (Int, default=-1): Maximum number of GBs for Kraken 2 hash table; if the Kraken 2 estimator determines more would normally be needed, the reference library will be downsampled to fit. max_retries (Int, default=1): Number of times to retry in case of failure minimizer_len (Int, default=if protein then 12 else 31): Minimizer length in bp that will be used to build the database minimizer_spaces (Int, default=if protein then 0 else 7): Number of characters in minimizer that are ignored in comparisons ncpu (Int, default=1): Number of cores to allocate for task protein (Boolean, default=false): Construct a protein database? Outputs built_db (File) kraken author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs Kraken2 on a pair of fastq files. Inputs Required db (File, required ): Kraken2 database. Can be generated with make-qc-reference.wdl . Must be a flat tarball without a root directory. read1 (File, required ): Gzipped FastQ file with 1st reads in pair read2 (File, required ): Gzipped FastQ file with 2nd reads in pair Optional memory_gb (Int?): RAM to allocate for task. If missing will be dynamically allocated based on database size. sample_name (String?): Name for sample. If missing will be inferred by removing the suffix '_R1.fastq.gz' from the read1 filename. Defaults detect_nproc (Boolean, default=false): Use all available cores max_retries (Int, default=1): Number of times to retry in case of failure min_base_quality (Int, default=0): Minimum base quality used in classification ncpu (Int, default=1): Number of cores to allocate for task store_sequences (Boolean, default=false): Store and output main Kraken2 output in addition to the summary report use_names (Boolean, default=true): Print scientific names instead of just taxids Outputs report (File) sequences (File?)","title":"Kraken2"},{"location":"tasks/kraken/#kraken2","text":"Methods for bootstrapping and running Kraken2","title":"Kraken2"},{"location":"tasks/kraken/#download_taxonomy","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL task downloads the NCBI taxonomy which Kraken2 uses to create a tree and taxon map during the database build.","title":"download_taxonomy"},{"location":"tasks/kraken/#inputs","text":"","title":"Inputs"},{"location":"tasks/kraken/#defaults","text":"disk_size_gb (Int, default=60): Disk space to allocate for task max_retries (Int, default=3): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task protein (Boolean, default=false): Construct a protein database?","title":"Defaults"},{"location":"tasks/kraken/#outputs","text":"taxonomy (File)","title":"Outputs"},{"location":"tasks/kraken/#download_library","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL task downloads a predefined library of reference genomes from NCBI. Detailed organism list for libraries (except nt) available at: https://ftp.ncbi.nlm.nih.gov/genomes/refseq/.","title":"download_library"},{"location":"tasks/kraken/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/kraken/#required","text":"library_name (String, required ); description : Library to download. Note that protein must equal true if downloading the nr library, and protein must equal false if downloading the UniVec or UniVec_Core library.; choices : ['archaea', 'bacteria', 'plasmid', 'viral', 'human', 'fungi', 'plant', 'protozoa', 'nt', 'nr', 'UniVec', 'UniVec_Core']","title":"Required"},{"location":"tasks/kraken/#defaults_1","text":"added_disk_size_gb (Int, default=0): Additional disk space to allocate for task. Default disk size is determined dynamically based on library_name . Note that the default sizes are adequate as of April 2023, but new genomes are constantly being added to the NCBI database. More disk space may be required depending on when in the future this task is run. max_retries (Int, default=3): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task protein (Boolean, default=false): Construct a protein database?","title":"Defaults"},{"location":"tasks/kraken/#outputs_1","text":"library (File)","title":"Outputs"},{"location":"tasks/kraken/#create_library_from_fastas","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL task adds custom entries from FASTA files to a Kraken2 DB.","title":"create_library_from_fastas"},{"location":"tasks/kraken/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/kraken/#required_1","text":"fastas (Array[File], required ): Array of gzipped FASTA files. Each FASTA sequence ID must contain either an NCBI accession number or an explicit assignment of the taxonomy ID using kraken:taxid","title":"Required"},{"location":"tasks/kraken/#defaults_2","text":"added_disk_size_gb (Int, default=0): Additional disk space to allocate for task. Default disk size is determined dynamically based on fastas size. max_retries (Int, default=1): Number of times to retry in case of failure memory_gb (Int, default=4): RAM to allocate for task protein (Boolean, default=false): Construct a protein database?","title":"Defaults"},{"location":"tasks/kraken/#outputs_2","text":"custom_library (File)","title":"Outputs"},{"location":"tasks/kraken/#build_db","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL task builds a custom Kraken2 database.","title":"build_db"},{"location":"tasks/kraken/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/kraken/#required_2","text":"tarballs (Array[File], required ): Tarballs containing the NCBI taxonomy (generated by the download_taxonomy task) and at least one library (generated by the download_library task). Tarballs must not have a root directory.","title":"Required"},{"location":"tasks/kraken/#defaults_3","text":"added_disk_size_gb (Int, default=0): Additional disk space to allocate for task. Default disk size is determined dynamically based on size of the input tarballs . added_memory_gb (Int, default=0): Additional RAM to allocate for task. Default RAM is allocated dynamically based on the database size. db_name (String, default=\"kraken2_db\"): Name for output in compressed, archived format. The suffix .tar.gz will be added. detect_nproc (Boolean, default=false): Use all available cores. Recommended for cloud environments. Not recommended for cluster environments. kmer_len (Int, default=if protein then 15 else 35): K-mer length in bp that will be used to build the database max_db_size_gb (Int, default=-1): Maximum number of GBs for Kraken 2 hash table; if the Kraken 2 estimator determines more would normally be needed, the reference library will be downsampled to fit. max_retries (Int, default=1): Number of times to retry in case of failure minimizer_len (Int, default=if protein then 12 else 31): Minimizer length in bp that will be used to build the database minimizer_spaces (Int, default=if protein then 0 else 7): Number of characters in minimizer that are ignored in comparisons ncpu (Int, default=1): Number of cores to allocate for task protein (Boolean, default=false): Construct a protein database?","title":"Defaults"},{"location":"tasks/kraken/#outputs_3","text":"built_db (File)","title":"Outputs"},{"location":"tasks/kraken/#kraken","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs Kraken2 on a pair of fastq files.","title":"kraken"},{"location":"tasks/kraken/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/kraken/#required_3","text":"db (File, required ): Kraken2 database. Can be generated with make-qc-reference.wdl . Must be a flat tarball without a root directory. read1 (File, required ): Gzipped FastQ file with 1st reads in pair read2 (File, required ): Gzipped FastQ file with 2nd reads in pair","title":"Required"},{"location":"tasks/kraken/#optional","text":"memory_gb (Int?): RAM to allocate for task. If missing will be dynamically allocated based on database size. sample_name (String?): Name for sample. If missing will be inferred by removing the suffix '_R1.fastq.gz' from the read1 filename.","title":"Optional"},{"location":"tasks/kraken/#defaults_4","text":"detect_nproc (Boolean, default=false): Use all available cores max_retries (Int, default=1): Number of times to retry in case of failure min_base_quality (Int, default=0): Minimum base quality used in classification ncpu (Int, default=1): Number of cores to allocate for task store_sequences (Boolean, default=false): Store and output main Kraken2 output in addition to the summary report use_names (Boolean, default=true): Print scientific names instead of just taxids","title":"Defaults"},{"location":"tasks/kraken/#outputs_4","text":"report (File) sequences (File?)","title":"Outputs"},{"location":"tasks/md5sum/","text":"This WDL tool wraps the md5sum tool from the GNU core utilities . md5sum is a utility for generating and verifying MD5 hashes. compute_checksum author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool generates an MD5 checksum for the input file. Inputs Required infile (File, required ): Input file to generate MD5 checksum Defaults max_retries (Int, default=1) memory_gb (Int, default=5) outfile_name (String, default=basename(infile) + \".md5\") Outputs md5sum (File)","title":"Md5sum"},{"location":"tasks/md5sum/#compute_checksum","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool generates an MD5 checksum for the input file.","title":"compute_checksum"},{"location":"tasks/md5sum/#inputs","text":"","title":"Inputs"},{"location":"tasks/md5sum/#required","text":"infile (File, required ): Input file to generate MD5 checksum","title":"Required"},{"location":"tasks/md5sum/#defaults","text":"max_retries (Int, default=1) memory_gb (Int, default=5) outfile_name (String, default=basename(infile) + \".md5\")","title":"Defaults"},{"location":"tasks/md5sum/#outputs","text":"md5sum (File)","title":"Outputs"},{"location":"tasks/mosdepth/","text":"Mosdepth This WDL file wraps the mosdepth tool . coverage author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool wraps the Mosdepth tool for calculating coverage Inputs Required bam (File, required ) bam_index (File, required ) Optional coverage_bed (File?) Defaults max_retries (Int, default=1) memory_gb (Int, default=8) min_mapping_quality (Int, default=20) prefix (String, default=basename(bam,'.bam')) use_fast_mode (Boolean, default=true) Outputs summary (File) global_dist (File) region_dist (File?)","title":"Mosdepth"},{"location":"tasks/mosdepth/#mosdepth","text":"This WDL file wraps the mosdepth tool .","title":"Mosdepth"},{"location":"tasks/mosdepth/#coverage","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool wraps the Mosdepth tool for calculating coverage","title":"coverage"},{"location":"tasks/mosdepth/#inputs","text":"","title":"Inputs"},{"location":"tasks/mosdepth/#required","text":"bam (File, required ) bam_index (File, required )","title":"Required"},{"location":"tasks/mosdepth/#optional","text":"coverage_bed (File?)","title":"Optional"},{"location":"tasks/mosdepth/#defaults","text":"max_retries (Int, default=1) memory_gb (Int, default=8) min_mapping_quality (Int, default=20) prefix (String, default=basename(bam,'.bam')) use_fast_mode (Boolean, default=true)","title":"Defaults"},{"location":"tasks/mosdepth/#outputs","text":"summary (File) global_dist (File) region_dist (File?)","title":"Outputs"},{"location":"tasks/multiqc/","text":"MultiQC This WDL tool wraps the MultiQC tool. MultiQC aggregates quality control results for bioinformatics. multiqc author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool generates a MultiQC quality control metrics report summary from input QC result files. Inputs Required input_files (Array[File], required ): An array of files for MultiQC to compile into a report. Invalid files will be gracefully ignored by MultiQC. output_prefix (String, required ): A string for the MultiQC output directory: .multiqc/ and .multiqc.tar.gz Defaults disk_size (Int, default=20) extra_fn_clean_exts (Array[String], default=[]): An array of strings that should be cleaned from sample names by MultiQC max_retries (Int, default=1) memory_gb (Int, default=5) mosdepth_labels (Array[String], default=[]): If passing in multiple runs of mosdepth , an array of strings for labelling the different runs (must match part of the filenames) Outputs multiqc_report (File)","title":"MultiQC"},{"location":"tasks/multiqc/#multiqc","text":"This WDL tool wraps the MultiQC tool. MultiQC aggregates quality control results for bioinformatics.","title":"MultiQC"},{"location":"tasks/multiqc/#multiqc_1","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool generates a MultiQC quality control metrics report summary from input QC result files.","title":"multiqc"},{"location":"tasks/multiqc/#inputs","text":"","title":"Inputs"},{"location":"tasks/multiqc/#required","text":"input_files (Array[File], required ): An array of files for MultiQC to compile into a report. Invalid files will be gracefully ignored by MultiQC. output_prefix (String, required ): A string for the MultiQC output directory: .multiqc/ and .multiqc.tar.gz","title":"Required"},{"location":"tasks/multiqc/#defaults","text":"disk_size (Int, default=20) extra_fn_clean_exts (Array[String], default=[]): An array of strings that should be cleaned from sample names by MultiQC max_retries (Int, default=1) memory_gb (Int, default=5) mosdepth_labels (Array[String], default=[]): If passing in multiple runs of mosdepth , an array of strings for labelling the different runs (must match part of the filenames)","title":"Defaults"},{"location":"tasks/multiqc/#outputs","text":"multiqc_report (File)","title":"Outputs"},{"location":"tasks/ngsderive/","text":"ngsderive This WDL tool wraps the ngsderive package infer_strandedness Inputs Required bam (File, required ) bam_index (File, required ) gtf (File, required ) Defaults max_retries (Int, default=1) memory_gb (Int, default=5) min_mapq (Int, default=30) min_reads_per_gene (Int, default=10) num_genes (Int, default=1000) Outputs strandedness (String) strandedness_file (File) instrument Inputs Required bam (File, required ) Defaults max_retries (Int, default=1) Outputs instrument_file (File) read_length Inputs Required bam (File, required ) bam_index (File, required ) Defaults max_retries (Int, default=1) memory_gb (Int, default=5) Outputs read_length_file (File) encoding Inputs Required ngs_files (Array[File], required ) prefix (String, required ) Defaults max_retries (Int, default=1) memory_gb (Int, default=5) num_samples (Int, default=1000000) Outputs inferred_encoding (String) encoding_file (File) junction_annotation Inputs Required bam (File, required ) bam_index (File, required ) gtf (File, required ) Defaults fuzzy_junction_match_range (Int, default=0) max_retries (Int, default=1) memory_gb (Int, default=35) min_intron (Int, default=50) min_mapq (Int, default=30) min_reads (Int, default=2) prefix (String, default=basename(bam,\".bam\")) Outputs junction_summary (File) junctions (File)","title":"ngsderive"},{"location":"tasks/ngsderive/#ngsderive","text":"This WDL tool wraps the ngsderive package","title":"ngsderive"},{"location":"tasks/ngsderive/#infer_strandedness","text":"","title":"infer_strandedness"},{"location":"tasks/ngsderive/#inputs","text":"","title":"Inputs"},{"location":"tasks/ngsderive/#required","text":"bam (File, required ) bam_index (File, required ) gtf (File, required )","title":"Required"},{"location":"tasks/ngsderive/#defaults","text":"max_retries (Int, default=1) memory_gb (Int, default=5) min_mapq (Int, default=30) min_reads_per_gene (Int, default=10) num_genes (Int, default=1000)","title":"Defaults"},{"location":"tasks/ngsderive/#outputs","text":"strandedness (String) strandedness_file (File)","title":"Outputs"},{"location":"tasks/ngsderive/#instrument","text":"","title":"instrument"},{"location":"tasks/ngsderive/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/ngsderive/#required_1","text":"bam (File, required )","title":"Required"},{"location":"tasks/ngsderive/#defaults_1","text":"max_retries (Int, default=1)","title":"Defaults"},{"location":"tasks/ngsderive/#outputs_1","text":"instrument_file (File)","title":"Outputs"},{"location":"tasks/ngsderive/#read_length","text":"","title":"read_length"},{"location":"tasks/ngsderive/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/ngsderive/#required_2","text":"bam (File, required ) bam_index (File, required )","title":"Required"},{"location":"tasks/ngsderive/#defaults_2","text":"max_retries (Int, default=1) memory_gb (Int, default=5)","title":"Defaults"},{"location":"tasks/ngsderive/#outputs_2","text":"read_length_file (File)","title":"Outputs"},{"location":"tasks/ngsderive/#encoding","text":"","title":"encoding"},{"location":"tasks/ngsderive/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/ngsderive/#required_3","text":"ngs_files (Array[File], required ) prefix (String, required )","title":"Required"},{"location":"tasks/ngsderive/#defaults_3","text":"max_retries (Int, default=1) memory_gb (Int, default=5) num_samples (Int, default=1000000)","title":"Defaults"},{"location":"tasks/ngsderive/#outputs_3","text":"inferred_encoding (String) encoding_file (File)","title":"Outputs"},{"location":"tasks/ngsderive/#junction_annotation","text":"","title":"junction_annotation"},{"location":"tasks/ngsderive/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/ngsderive/#required_4","text":"bam (File, required ) bam_index (File, required ) gtf (File, required )","title":"Required"},{"location":"tasks/ngsderive/#defaults_4","text":"fuzzy_junction_match_range (Int, default=0) max_retries (Int, default=1) memory_gb (Int, default=35) min_intron (Int, default=50) min_mapq (Int, default=30) min_reads (Int, default=2) prefix (String, default=basename(bam,\".bam\"))","title":"Defaults"},{"location":"tasks/ngsderive/#outputs_4","text":"junction_summary (File) junctions (File)","title":"Outputs"},{"location":"tasks/picard/","text":"Picard This WDL tool wraps the PicardTools library . PicardTools is a set of Java tools for manipulating sequencing data. mark_duplicates author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool marks duplicate reads in the input BAM file using Picard. Inputs Required bam (File, required ): Input BAM format file to mark duplicates Defaults max_retries (Int, default=1) memory_gb (Int, default=50) prefix (String, default=basename(bam,\".bam\")) Outputs duplicate_marked_bam (File) validate_bam author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool validates the input BAM file for correct formatting using Picard. Inputs Required bam (File, required ): Input BAM format file to validate Defaults ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]): List of Picard errors and warnings to ignore. Possible values can be found on the GATK website index_validation_stringency_less_exhaustive (Boolean, default=false): Boolean to set INDEX_VALIDATION_STRINGENCY=LESS_EXHAUSTIVE for picard ValidateSamFile max_errors (Int, default=2147483647): Set the value of MAX_OUTPUT for picard ValidateSamFile . The Picard default is 100, a lower number can enable fast fail behavior max_retries (Int, default=1) memory_gb (Int, default=12) outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") succeed_on_errors (Boolean, default=false): Succeed the task even if errors and/or warnings are detected succeed_on_warnings (Boolean, default=true): Succeed the task if warnings are detected and there are no errors. Overridden by succeed_on_errors summary_mode (Boolean, default=false): Boolean to enable SUMMARY mode of picard ValidateSamFile Outputs validate_report (File) validated_bam (File) bam_to_fastq author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool converts the input BAM file into paired FastQ format files. Inputs Required bam (File, required ): Input BAM format file to convert to FastQ Defaults max_retries (Int, default=1): Number of times to retry failed steps memory_gb (Int, default=40) paired (Boolean, default=true): Is the data paired-end (true) or single-end (false)? prefix (String, default=basename(bam,\".bam\")) Outputs read1 (File) read2 (File?) sort author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool sorts the input BAM file. Inputs Required bam (File, required ): Input BAM format file to sort Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) memory_gb (Int, default=25) outfile_name (String, default=basename(bam,\".bam\") + \".sorted.bam\") sort_order (String, default=\"coordinate\") Outputs sorted_bam (File) merge_sam_files author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool merges the input BAM files into a single BAM file. Inputs Required bam (Array[File], required ): Input BAMs to merge Defaults max_retries (Int, default=1) memory_gb (Int, default=40) outfile_name (String, default=\"merged.bam\") sort_order (String, default=\"coordinate\") threading (Boolean, default=true) Outputs merged_bam (File) clean_sam author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool cleans the input BAM file. Cleans soft-clipping beyond end-of-reference, sets MAPQ=0 for unmapped reads Inputs Required bam (File, required ): Input BAM format file to clean Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) memory_gb (Int, default=25) outfile_name (String, default=basename(bam,\".bam\") + \".cleaned.bam\") Outputs cleaned_bam (File) collect_wgs_metrics author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs the picard CollectWgsMetrics command. Inputs Required bam (File, required ): Input BAM format file to calculate WGS metrics for reference_fasta (File, required ) Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) memory_gb (Int, default=12) Outputs wgs_metrics (File) collect_wgs_metrics_with_nonzero_coverage author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs the picard CollectWgsMetricsWithNonZeroCoverage command. Inputs Required bam (File, required ): Input BAM format file to calculate WGS metrics for reference_fasta (File, required ) Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) memory_gb (Int, default=12) Outputs wgs_metrics (File) wgs_metrics_pdf (File) collect_alignment_summary_metrics author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs the picard CollectAlignmentSummaryMetrics command. Inputs Required bam (File, required ): Input BAM format file to calculate alignment metrics for Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) memory_gb (Int, default=8) Outputs alignment_metrics (File) alignment_metrics_pdf (File) collect_gc_bias_metrics author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs the picard CollectGcBiasMetrics command. Inputs Required bam (File, required ): Input BAM format file to calculate GC bias metrics for reference_fasta (File, required ) Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) memory_gb (Int, default=8) Outputs gc_bias_metrics (File) gc_bias_metrics_pdf (File) collect_insert_size_metrics author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs the picard CollectInsertSizeMetrics command. Inputs Required bam (File, required ): Input BAM format file to calculate insert size metrics for Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) memory_gb (Int, default=8) Outputs insert_size_metrics (File) insert_size_metrics_pdf (File) quality_score_distribution author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs the picard QualityScoreDistribution command. Inputs Required bam (File, required ): Input BAM format file to calculate quality score distribution for Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) memory_gb (Int, default=8) Outputs quality_score_distribution_txt (File) quality_score_distribution_pdf (File)","title":"Picard"},{"location":"tasks/picard/#picard","text":"This WDL tool wraps the PicardTools library . PicardTools is a set of Java tools for manipulating sequencing data.","title":"Picard"},{"location":"tasks/picard/#mark_duplicates","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool marks duplicate reads in the input BAM file using Picard.","title":"mark_duplicates"},{"location":"tasks/picard/#inputs","text":"","title":"Inputs"},{"location":"tasks/picard/#required","text":"bam (File, required ): Input BAM format file to mark duplicates","title":"Required"},{"location":"tasks/picard/#defaults","text":"max_retries (Int, default=1) memory_gb (Int, default=50) prefix (String, default=basename(bam,\".bam\"))","title":"Defaults"},{"location":"tasks/picard/#outputs","text":"duplicate_marked_bam (File)","title":"Outputs"},{"location":"tasks/picard/#validate_bam","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool validates the input BAM file for correct formatting using Picard.","title":"validate_bam"},{"location":"tasks/picard/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/picard/#required_1","text":"bam (File, required ): Input BAM format file to validate","title":"Required"},{"location":"tasks/picard/#defaults_1","text":"ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]): List of Picard errors and warnings to ignore. Possible values can be found on the GATK website index_validation_stringency_less_exhaustive (Boolean, default=false): Boolean to set INDEX_VALIDATION_STRINGENCY=LESS_EXHAUSTIVE for picard ValidateSamFile max_errors (Int, default=2147483647): Set the value of MAX_OUTPUT for picard ValidateSamFile . The Picard default is 100, a lower number can enable fast fail behavior max_retries (Int, default=1) memory_gb (Int, default=12) outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") succeed_on_errors (Boolean, default=false): Succeed the task even if errors and/or warnings are detected succeed_on_warnings (Boolean, default=true): Succeed the task if warnings are detected and there are no errors. Overridden by succeed_on_errors summary_mode (Boolean, default=false): Boolean to enable SUMMARY mode of picard ValidateSamFile","title":"Defaults"},{"location":"tasks/picard/#outputs_1","text":"validate_report (File) validated_bam (File)","title":"Outputs"},{"location":"tasks/picard/#bam_to_fastq","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool converts the input BAM file into paired FastQ format files.","title":"bam_to_fastq"},{"location":"tasks/picard/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/picard/#required_2","text":"bam (File, required ): Input BAM format file to convert to FastQ","title":"Required"},{"location":"tasks/picard/#defaults_2","text":"max_retries (Int, default=1): Number of times to retry failed steps memory_gb (Int, default=40) paired (Boolean, default=true): Is the data paired-end (true) or single-end (false)? prefix (String, default=basename(bam,\".bam\"))","title":"Defaults"},{"location":"tasks/picard/#outputs_2","text":"read1 (File) read2 (File?)","title":"Outputs"},{"location":"tasks/picard/#sort","text":"author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool sorts the input BAM file.","title":"sort"},{"location":"tasks/picard/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/picard/#required_3","text":"bam (File, required ): Input BAM format file to sort","title":"Required"},{"location":"tasks/picard/#optional","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/picard/#defaults_3","text":"max_retries (Int, default=1) memory_gb (Int, default=25) outfile_name (String, default=basename(bam,\".bam\") + \".sorted.bam\") sort_order (String, default=\"coordinate\")","title":"Defaults"},{"location":"tasks/picard/#outputs_3","text":"sorted_bam (File)","title":"Outputs"},{"location":"tasks/picard/#merge_sam_files","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool merges the input BAM files into a single BAM file.","title":"merge_sam_files"},{"location":"tasks/picard/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/picard/#required_4","text":"bam (Array[File], required ): Input BAMs to merge","title":"Required"},{"location":"tasks/picard/#defaults_4","text":"max_retries (Int, default=1) memory_gb (Int, default=40) outfile_name (String, default=\"merged.bam\") sort_order (String, default=\"coordinate\") threading (Boolean, default=true)","title":"Defaults"},{"location":"tasks/picard/#outputs_4","text":"merged_bam (File)","title":"Outputs"},{"location":"tasks/picard/#clean_sam","text":"author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool cleans the input BAM file. Cleans soft-clipping beyond end-of-reference, sets MAPQ=0 for unmapped reads","title":"clean_sam"},{"location":"tasks/picard/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/picard/#required_5","text":"bam (File, required ): Input BAM format file to clean","title":"Required"},{"location":"tasks/picard/#optional_1","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/picard/#defaults_5","text":"max_retries (Int, default=1) memory_gb (Int, default=25) outfile_name (String, default=basename(bam,\".bam\") + \".cleaned.bam\")","title":"Defaults"},{"location":"tasks/picard/#outputs_5","text":"cleaned_bam (File)","title":"Outputs"},{"location":"tasks/picard/#collect_wgs_metrics","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs the picard CollectWgsMetrics command.","title":"collect_wgs_metrics"},{"location":"tasks/picard/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/picard/#required_6","text":"bam (File, required ): Input BAM format file to calculate WGS metrics for reference_fasta (File, required )","title":"Required"},{"location":"tasks/picard/#optional_2","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/picard/#defaults_6","text":"max_retries (Int, default=1) memory_gb (Int, default=12)","title":"Defaults"},{"location":"tasks/picard/#outputs_6","text":"wgs_metrics (File)","title":"Outputs"},{"location":"tasks/picard/#collect_wgs_metrics_with_nonzero_coverage","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs the picard CollectWgsMetricsWithNonZeroCoverage command.","title":"collect_wgs_metrics_with_nonzero_coverage"},{"location":"tasks/picard/#inputs_7","text":"","title":"Inputs"},{"location":"tasks/picard/#required_7","text":"bam (File, required ): Input BAM format file to calculate WGS metrics for reference_fasta (File, required )","title":"Required"},{"location":"tasks/picard/#optional_3","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/picard/#defaults_7","text":"max_retries (Int, default=1) memory_gb (Int, default=12)","title":"Defaults"},{"location":"tasks/picard/#outputs_7","text":"wgs_metrics (File) wgs_metrics_pdf (File)","title":"Outputs"},{"location":"tasks/picard/#collect_alignment_summary_metrics","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs the picard CollectAlignmentSummaryMetrics command.","title":"collect_alignment_summary_metrics"},{"location":"tasks/picard/#inputs_8","text":"","title":"Inputs"},{"location":"tasks/picard/#required_8","text":"bam (File, required ): Input BAM format file to calculate alignment metrics for","title":"Required"},{"location":"tasks/picard/#optional_4","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/picard/#defaults_8","text":"max_retries (Int, default=1) memory_gb (Int, default=8)","title":"Defaults"},{"location":"tasks/picard/#outputs_8","text":"alignment_metrics (File) alignment_metrics_pdf (File)","title":"Outputs"},{"location":"tasks/picard/#collect_gc_bias_metrics","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs the picard CollectGcBiasMetrics command.","title":"collect_gc_bias_metrics"},{"location":"tasks/picard/#inputs_9","text":"","title":"Inputs"},{"location":"tasks/picard/#required_9","text":"bam (File, required ): Input BAM format file to calculate GC bias metrics for reference_fasta (File, required )","title":"Required"},{"location":"tasks/picard/#optional_5","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/picard/#defaults_9","text":"max_retries (Int, default=1) memory_gb (Int, default=8)","title":"Defaults"},{"location":"tasks/picard/#outputs_9","text":"gc_bias_metrics (File) gc_bias_metrics_pdf (File)","title":"Outputs"},{"location":"tasks/picard/#collect_insert_size_metrics","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs the picard CollectInsertSizeMetrics command.","title":"collect_insert_size_metrics"},{"location":"tasks/picard/#inputs_10","text":"","title":"Inputs"},{"location":"tasks/picard/#required_10","text":"bam (File, required ): Input BAM format file to calculate insert size metrics for","title":"Required"},{"location":"tasks/picard/#optional_6","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/picard/#defaults_10","text":"max_retries (Int, default=1) memory_gb (Int, default=8)","title":"Defaults"},{"location":"tasks/picard/#outputs_10","text":"insert_size_metrics (File) insert_size_metrics_pdf (File)","title":"Outputs"},{"location":"tasks/picard/#quality_score_distribution","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL tool runs the picard QualityScoreDistribution command.","title":"quality_score_distribution"},{"location":"tasks/picard/#inputs_11","text":"","title":"Inputs"},{"location":"tasks/picard/#required_11","text":"bam (File, required ): Input BAM format file to calculate quality score distribution for","title":"Required"},{"location":"tasks/picard/#optional_7","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/picard/#defaults_11","text":"max_retries (Int, default=1) memory_gb (Int, default=8)","title":"Defaults"},{"location":"tasks/picard/#outputs_11","text":"quality_score_distribution_txt (File) quality_score_distribution_pdf (File)","title":"Outputs"},{"location":"tasks/qualimap/","text":"QualiMap This WDL tool wraps the QualiMap tool. QualiMap computes metrics to facilitate evaluation of sequencing data. bamqc author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool runs QualiMap's bamqc tool on the input BAM file. It has been deprecated in our pipeline due to memory leak issues. Use at your own risk, for some samples can consume over 1TB of RAM. Inputs Required bam (File, required ): Input BAM format file to run qualimap bamqc on Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) memory_gb (Int, default=32) ncpu (Int, default=1) Outputs results (File) rnaseq author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool generates runs QualiMap's rnaseq tool on the input BAM file. Inputs Required bam (File, required ): Input BAM format file to run qualimap rnaseq on gtf (File, required ): GTF features file strandedness (String, required ): Strandedness protocol used to generate the RNA-Seq data; Choices : ['strand-specific-reverse', 'strand-specific-forward', 'non-strand-specific'] Optional disk_size_gb (Int?): Disk space to allocate for task. Default is determined dynamically based on BAM and GTF sizes. Defaults max_retries (Int, default=1) memory_gb (Int, default=16): RAM to allocate for task name_sorted (Boolean, default=false): Is the BAM name sorted? paired_end (Boolean, default=true): Is the BAM paired end? Outputs raw_summary (File) raw_coverage (File) results (File)","title":"QualiMap"},{"location":"tasks/qualimap/#qualimap","text":"This WDL tool wraps the QualiMap tool. QualiMap computes metrics to facilitate evaluation of sequencing data.","title":"QualiMap"},{"location":"tasks/qualimap/#bamqc","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool runs QualiMap's bamqc tool on the input BAM file. It has been deprecated in our pipeline due to memory leak issues. Use at your own risk, for some samples can consume over 1TB of RAM.","title":"bamqc"},{"location":"tasks/qualimap/#inputs","text":"","title":"Inputs"},{"location":"tasks/qualimap/#required","text":"bam (File, required ): Input BAM format file to run qualimap bamqc on","title":"Required"},{"location":"tasks/qualimap/#optional","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/qualimap/#defaults","text":"max_retries (Int, default=1) memory_gb (Int, default=32) ncpu (Int, default=1)","title":"Defaults"},{"location":"tasks/qualimap/#outputs","text":"results (File)","title":"Outputs"},{"location":"tasks/qualimap/#rnaseq","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool generates runs QualiMap's rnaseq tool on the input BAM file.","title":"rnaseq"},{"location":"tasks/qualimap/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/qualimap/#required_1","text":"bam (File, required ): Input BAM format file to run qualimap rnaseq on gtf (File, required ): GTF features file strandedness (String, required ): Strandedness protocol used to generate the RNA-Seq data; Choices : ['strand-specific-reverse', 'strand-specific-forward', 'non-strand-specific']","title":"Required"},{"location":"tasks/qualimap/#optional_1","text":"disk_size_gb (Int?): Disk space to allocate for task. Default is determined dynamically based on BAM and GTF sizes.","title":"Optional"},{"location":"tasks/qualimap/#defaults_1","text":"max_retries (Int, default=1) memory_gb (Int, default=16): RAM to allocate for task name_sorted (Boolean, default=false): Is the BAM name sorted? paired_end (Boolean, default=true): Is the BAM paired end?","title":"Defaults"},{"location":"tasks/qualimap/#outputs_1","text":"raw_summary (File) raw_coverage (File) results (File)","title":"Outputs"},{"location":"tasks/samtools/","text":"SAMtools This WDL tool wraps the SAMtools package . SAMtools provides utlities for manipulating SAM format sequence alignments. quickcheck author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool runs Samtools quickcheck on the input BAM file. This checks that the BAM file appears to be intact, e.g. header exists, at least one sequence is present, and the end-of-file marker exists. Inputs Required bam (File, required ): Input BAM format file to quickcheck Defaults max_retries (Int, default=1) Outputs checked_bam (File) split author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool runs Samtools split on the input BAM file. This splits the BAM by read group into one or more output files. It optionally errors if there are reads present that do not belong to a read group. Inputs Required bam (File, required ): Input BAM format file to split Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) ncpu (Int, default=1) prefix (String, default=basename(bam,\".bam\")) reject_unaccounted (Boolean, default=true): If true, error if there are reads present that do not have read group information. use_all_cores (Boolean, default=false) Outputs split_bams (Array[File]) flagstat author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool generates a samtools flagstat report for the input BAM file. Inputs Required bam (File, required ): Input BAM format file to generate flagstat for Defaults max_retries (Int, default=1) memory_gb (Int, default=5) outfile_name (String, default=basename(bam,\".bam\") + \".flagstat.txt\") Outputs flagstat_report (File) index author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool runs Samtools flagstat on the input BAM file. Produces statistics about the alignments based on the bit flags set in the BAM. Inputs Required bam (File, required ): Input BAM format file to index Defaults max_retries (Int, default=1) memory_gb (Int, default=15) ncpu (Int, default=1) outfile_name (String, default=basename(bam) + \".bai\") use_all_cores (Boolean, default=false) Outputs bam_index (File) subsample Inputs Required bam (File, required ) Defaults desired_reads (Int, default=500000) max_retries (Int, default=1) ncpu (Int, default=1) outfile_name (String, default=basename(bam,\".bam\") + \".subsampled.bam\") use_all_cores (Boolean, default=false) Outputs sampled_bam (File) merge Inputs Required bams (Array[File], required ) Optional new_header (File?) Defaults attach_rg (Boolean, default=true) max_retries (Int, default=1) ncpu (Int, default=1) outfile_name (String, default=basename(bams[0],\".bam\") + \".merged.bam\") use_all_cores (Boolean, default=false) Outputs merged_bam (File) addreplacerg author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool runs Samtools addreplacerg on the input BAM file. This adds an existing read group record to reads in the BAM lacking read group tags. Inputs Required bam (File, required ): Input BAM format file to add read group information read_group_id (String, required ): Existing read group ID in BAM to add to reads Defaults max_retries (Int, default=1) ncpu (Int, default=1) outfile_name (String, default=basename(bam,\".bam\") + \".read_group.bam\") use_all_cores (Boolean, default=false) Outputs tagged_bam (File)","title":"SAMtools"},{"location":"tasks/samtools/#samtools","text":"This WDL tool wraps the SAMtools package . SAMtools provides utlities for manipulating SAM format sequence alignments.","title":"SAMtools"},{"location":"tasks/samtools/#quickcheck","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool runs Samtools quickcheck on the input BAM file. This checks that the BAM file appears to be intact, e.g. header exists, at least one sequence is present, and the end-of-file marker exists.","title":"quickcheck"},{"location":"tasks/samtools/#inputs","text":"","title":"Inputs"},{"location":"tasks/samtools/#required","text":"bam (File, required ): Input BAM format file to quickcheck","title":"Required"},{"location":"tasks/samtools/#defaults","text":"max_retries (Int, default=1)","title":"Defaults"},{"location":"tasks/samtools/#outputs","text":"checked_bam (File)","title":"Outputs"},{"location":"tasks/samtools/#split","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool runs Samtools split on the input BAM file. This splits the BAM by read group into one or more output files. It optionally errors if there are reads present that do not belong to a read group.","title":"split"},{"location":"tasks/samtools/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_1","text":"bam (File, required ): Input BAM format file to split","title":"Required"},{"location":"tasks/samtools/#optional","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/samtools/#defaults_1","text":"max_retries (Int, default=1) ncpu (Int, default=1) prefix (String, default=basename(bam,\".bam\")) reject_unaccounted (Boolean, default=true): If true, error if there are reads present that do not have read group information. use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/samtools/#outputs_1","text":"split_bams (Array[File])","title":"Outputs"},{"location":"tasks/samtools/#flagstat","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool generates a samtools flagstat report for the input BAM file.","title":"flagstat"},{"location":"tasks/samtools/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_2","text":"bam (File, required ): Input BAM format file to generate flagstat for","title":"Required"},{"location":"tasks/samtools/#defaults_2","text":"max_retries (Int, default=1) memory_gb (Int, default=5) outfile_name (String, default=basename(bam,\".bam\") + \".flagstat.txt\")","title":"Defaults"},{"location":"tasks/samtools/#outputs_2","text":"flagstat_report (File)","title":"Outputs"},{"location":"tasks/samtools/#index","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool runs Samtools flagstat on the input BAM file. Produces statistics about the alignments based on the bit flags set in the BAM.","title":"index"},{"location":"tasks/samtools/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_3","text":"bam (File, required ): Input BAM format file to index","title":"Required"},{"location":"tasks/samtools/#defaults_3","text":"max_retries (Int, default=1) memory_gb (Int, default=15) ncpu (Int, default=1) outfile_name (String, default=basename(bam) + \".bai\") use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/samtools/#outputs_3","text":"bam_index (File)","title":"Outputs"},{"location":"tasks/samtools/#subsample","text":"","title":"subsample"},{"location":"tasks/samtools/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_4","text":"bam (File, required )","title":"Required"},{"location":"tasks/samtools/#defaults_4","text":"desired_reads (Int, default=500000) max_retries (Int, default=1) ncpu (Int, default=1) outfile_name (String, default=basename(bam,\".bam\") + \".subsampled.bam\") use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/samtools/#outputs_4","text":"sampled_bam (File)","title":"Outputs"},{"location":"tasks/samtools/#merge","text":"","title":"merge"},{"location":"tasks/samtools/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_5","text":"bams (Array[File], required )","title":"Required"},{"location":"tasks/samtools/#optional_1","text":"new_header (File?)","title":"Optional"},{"location":"tasks/samtools/#defaults_5","text":"attach_rg (Boolean, default=true) max_retries (Int, default=1) ncpu (Int, default=1) outfile_name (String, default=basename(bams[0],\".bam\") + \".merged.bam\") use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/samtools/#outputs_5","text":"merged_bam (File)","title":"Outputs"},{"location":"tasks/samtools/#addreplacerg","text":"author Andrew Thrasher email andrew.thrasher@stjude.org description This WDL tool runs Samtools addreplacerg on the input BAM file. This adds an existing read group record to reads in the BAM lacking read group tags.","title":"addreplacerg"},{"location":"tasks/samtools/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/samtools/#required_6","text":"bam (File, required ): Input BAM format file to add read group information read_group_id (String, required ): Existing read group ID in BAM to add to reads","title":"Required"},{"location":"tasks/samtools/#defaults_6","text":"max_retries (Int, default=1) ncpu (Int, default=1) outfile_name (String, default=basename(bam,\".bam\") + \".read_group.bam\") use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/samtools/#outputs_6","text":"tagged_bam (File)","title":"Outputs"},{"location":"tasks/star/","text":"STAR This WDL tool wraps the STAR aligner . STAR is an RNA-Seq aligner. build_star_db author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool runs STAR's build command to generate a STAR format reference for alignment. Inputs Required gtf (File, required ): GTF format feature file reference_fasta (File, required ): The FASTA format reference file for the genome Optional disk_size_gb (Int?) Defaults max_retries (Int, default=1) memory_gb (Int, default=50) ncpu (Int, default=1) stardb_dir_name (String, default=\"stardb\") use_all_cores (Boolean, default=false) Outputs stardb_out (File) alignment author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool runs the STAR aligner on a set of RNA-Seq FastQ files. Inputs Required output_prefix (String, required ) read_one_fastqs (Array[File], required ): An array of FastQ files containing read one information stardb_tar_gz (File, required ): A gzipped TAR file containing the STAR reference files. The name of the root directory which was archived must match the archive's filename without the .tar.gz extension. Optional disk_size_gb (Int?) read_groups (String?): A string containing the read group information to output in the BAM file. If including multiple read group fields per-read group, they should be space delimited. Read groups should be comma separated, with a space on each side (e.g. ' , '). The ID field must come first for each read group and must match the basename of a fastq file (up to the first period). Example: ID:rg1 PU:flowcell1.lane1 SM:sample1 PL:illumina LB:sample1_lib1 , ID:rg2 PU:flowcell1.lane2 SM:sample1 PL:illumina LB:sample1_lib1 Defaults max_retries (Int, default=1) memory_gb (Int, default=50) ncpu (Int, default=1) read_two_fastqs (Array[File], default=[]): An array of FastQ files containing read two information use_all_cores (Boolean, default=false) Outputs star_log (File) star_bam (File)","title":"STAR"},{"location":"tasks/star/#star","text":"This WDL tool wraps the STAR aligner . STAR is an RNA-Seq aligner.","title":"STAR"},{"location":"tasks/star/#build_star_db","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool runs STAR's build command to generate a STAR format reference for alignment.","title":"build_star_db"},{"location":"tasks/star/#inputs","text":"","title":"Inputs"},{"location":"tasks/star/#required","text":"gtf (File, required ): GTF format feature file reference_fasta (File, required ): The FASTA format reference file for the genome","title":"Required"},{"location":"tasks/star/#optional","text":"disk_size_gb (Int?)","title":"Optional"},{"location":"tasks/star/#defaults","text":"max_retries (Int, default=1) memory_gb (Int, default=50) ncpu (Int, default=1) stardb_dir_name (String, default=\"stardb\") use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/star/#outputs","text":"stardb_out (File)","title":"Outputs"},{"location":"tasks/star/#alignment","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool runs the STAR aligner on a set of RNA-Seq FastQ files.","title":"alignment"},{"location":"tasks/star/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/star/#required_1","text":"output_prefix (String, required ) read_one_fastqs (Array[File], required ): An array of FastQ files containing read one information stardb_tar_gz (File, required ): A gzipped TAR file containing the STAR reference files. The name of the root directory which was archived must match the archive's filename without the .tar.gz extension.","title":"Required"},{"location":"tasks/star/#optional_1","text":"disk_size_gb (Int?) read_groups (String?): A string containing the read group information to output in the BAM file. If including multiple read group fields per-read group, they should be space delimited. Read groups should be comma separated, with a space on each side (e.g. ' , '). The ID field must come first for each read group and must match the basename of a fastq file (up to the first period). Example: ID:rg1 PU:flowcell1.lane1 SM:sample1 PL:illumina LB:sample1_lib1 , ID:rg2 PU:flowcell1.lane2 SM:sample1 PL:illumina LB:sample1_lib1","title":"Optional"},{"location":"tasks/star/#defaults_1","text":"max_retries (Int, default=1) memory_gb (Int, default=50) ncpu (Int, default=1) read_two_fastqs (Array[File], default=[]): An array of FastQ files containing read two information use_all_cores (Boolean, default=false)","title":"Defaults"},{"location":"tasks/star/#outputs_1","text":"star_log (File) star_bam (File)","title":"Outputs"},{"location":"tasks/util/","text":"Utilities This WDL tool includes custom scripts to parse and reformat task output as part of a workflow as well as generic tasks. download author Clay McLeod email clay.mcleod@stjude.org description This WDL tool uses wget to download a file from a remote URL to the local filesystem Inputs Required outfile_name (String, required ): Name of the output file url (String, required ): URL of the file to download Optional md5sum (String?) Defaults disk_size_gb (Int, default=10) max_retries (Int, default=1) Outputs outfile (File) get_read_groups author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool is a utility to get read group information from a BAM file and write it out to as a string Inputs Required bam (File, required ): Input BAM format file to get read groups from Defaults format_for_star (Boolean, default=true) max_retries (Int, default=1) Outputs read_groups_file (File) split_string Inputs Required input_string (String, required ) Defaults delimiter (String, default=\" , \") disk_size (Int, default=1) max_retries (Int, default=1) Outputs split_strings_file (File) split_strings (Array[String]) calc_gene_lengths Inputs Required gtf (File, required ): GTF feature file Defaults max_retries (Int, default=1): Number of times to retry in case of failure outfile_name (String, default=basename(gtf,\".gtf.gz\") + \".genelengths.txt\"): Name of the gene lengths file Outputs gene_lengths (File) qc_summary author Andrew Frantz email andrew.frantz@stjude.org description This WDL task pulls out keys metrics that can provide a high level overview of the sample, without needing to examine the entire MultiQC report. Currently, these key metrics come from Qualimap and ngsderive. Inputs Required multiqc_tar_gz (File, required ) Defaults disk_size (Int, default=1) max_retries (Int, default=1) outfile_name (String, default=basename(multiqc_tar_gz,\".multiqc.tar.gz\") + \".qc_summary.json\") Outputs summary (File) compression_integrity Inputs Required bam (File, required ) Defaults max_retries (Int, default=1) Outputs check (String) add_to_bam_header Inputs Required additional_header (String, required ) input_bam (File, required ) Defaults max_retries (Int, default=1) output_bam_name (String, default=basename(input_bam,\".bam\") + \".reheader.bam\") Outputs updated_header (File) header_lines (Array[String]) reheadered_bam (File) unpack_tarball Inputs Required tarball (File, required ) Defaults extra_disk_gb (Int, default=0) max_retries (Int, default=1) Outputs tarball_contents (Array[File]) make_coverage_regions_beds author Andrew Frantz email andrew.frantz@stjude.org description This WDL task takes in a GTF file, converts it to BED, then filters it down to two 3 column BED files: one of only 'exons', one of only 'CDS' regions Inputs Required gtf (File, required ) Defaults max_retries (Int, default=1) Outputs exon_bed (File) CDS_bed (File)","title":"Utilities"},{"location":"tasks/util/#utilities","text":"This WDL tool includes custom scripts to parse and reformat task output as part of a workflow as well as generic tasks.","title":"Utilities"},{"location":"tasks/util/#download","text":"author Clay McLeod email clay.mcleod@stjude.org description This WDL tool uses wget to download a file from a remote URL to the local filesystem","title":"download"},{"location":"tasks/util/#inputs","text":"","title":"Inputs"},{"location":"tasks/util/#required","text":"outfile_name (String, required ): Name of the output file url (String, required ): URL of the file to download","title":"Required"},{"location":"tasks/util/#optional","text":"md5sum (String?)","title":"Optional"},{"location":"tasks/util/#defaults","text":"disk_size_gb (Int, default=10) max_retries (Int, default=1)","title":"Defaults"},{"location":"tasks/util/#outputs","text":"outfile (File)","title":"Outputs"},{"location":"tasks/util/#get_read_groups","text":"author Andrew Thrasher, Andrew Frantz email andrew.thrasher@stjude.org, andrew.frantz@stjude.org description This WDL tool is a utility to get read group information from a BAM file and write it out to as a string","title":"get_read_groups"},{"location":"tasks/util/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/util/#required_1","text":"bam (File, required ): Input BAM format file to get read groups from","title":"Required"},{"location":"tasks/util/#defaults_1","text":"format_for_star (Boolean, default=true) max_retries (Int, default=1)","title":"Defaults"},{"location":"tasks/util/#outputs_1","text":"read_groups_file (File)","title":"Outputs"},{"location":"tasks/util/#split_string","text":"","title":"split_string"},{"location":"tasks/util/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/util/#required_2","text":"input_string (String, required )","title":"Required"},{"location":"tasks/util/#defaults_2","text":"delimiter (String, default=\" , \") disk_size (Int, default=1) max_retries (Int, default=1)","title":"Defaults"},{"location":"tasks/util/#outputs_2","text":"split_strings_file (File) split_strings (Array[String])","title":"Outputs"},{"location":"tasks/util/#calc_gene_lengths","text":"","title":"calc_gene_lengths"},{"location":"tasks/util/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/util/#required_3","text":"gtf (File, required ): GTF feature file","title":"Required"},{"location":"tasks/util/#defaults_3","text":"max_retries (Int, default=1): Number of times to retry in case of failure outfile_name (String, default=basename(gtf,\".gtf.gz\") + \".genelengths.txt\"): Name of the gene lengths file","title":"Defaults"},{"location":"tasks/util/#outputs_3","text":"gene_lengths (File)","title":"Outputs"},{"location":"tasks/util/#qc_summary","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL task pulls out keys metrics that can provide a high level overview of the sample, without needing to examine the entire MultiQC report. Currently, these key metrics come from Qualimap and ngsderive.","title":"qc_summary"},{"location":"tasks/util/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/util/#required_4","text":"multiqc_tar_gz (File, required )","title":"Required"},{"location":"tasks/util/#defaults_4","text":"disk_size (Int, default=1) max_retries (Int, default=1) outfile_name (String, default=basename(multiqc_tar_gz,\".multiqc.tar.gz\") + \".qc_summary.json\")","title":"Defaults"},{"location":"tasks/util/#outputs_4","text":"summary (File)","title":"Outputs"},{"location":"tasks/util/#compression_integrity","text":"","title":"compression_integrity"},{"location":"tasks/util/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/util/#required_5","text":"bam (File, required )","title":"Required"},{"location":"tasks/util/#defaults_5","text":"max_retries (Int, default=1)","title":"Defaults"},{"location":"tasks/util/#outputs_5","text":"check (String)","title":"Outputs"},{"location":"tasks/util/#add_to_bam_header","text":"","title":"add_to_bam_header"},{"location":"tasks/util/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/util/#required_6","text":"additional_header (String, required ) input_bam (File, required )","title":"Required"},{"location":"tasks/util/#defaults_6","text":"max_retries (Int, default=1) output_bam_name (String, default=basename(input_bam,\".bam\") + \".reheader.bam\")","title":"Defaults"},{"location":"tasks/util/#outputs_6","text":"updated_header (File) header_lines (Array[String]) reheadered_bam (File)","title":"Outputs"},{"location":"tasks/util/#unpack_tarball","text":"","title":"unpack_tarball"},{"location":"tasks/util/#inputs_7","text":"","title":"Inputs"},{"location":"tasks/util/#required_7","text":"tarball (File, required )","title":"Required"},{"location":"tasks/util/#defaults_7","text":"extra_disk_gb (Int, default=0) max_retries (Int, default=1)","title":"Defaults"},{"location":"tasks/util/#outputs_7","text":"tarball_contents (Array[File])","title":"Outputs"},{"location":"tasks/util/#make_coverage_regions_beds","text":"author Andrew Frantz email andrew.frantz@stjude.org description This WDL task takes in a GTF file, converts it to BED, then filters it down to two 3 column BED files: one of only 'exons', one of only 'CDS' regions","title":"make_coverage_regions_beds"},{"location":"tasks/util/#inputs_8","text":"","title":"Inputs"},{"location":"tasks/util/#required_8","text":"gtf (File, required )","title":"Required"},{"location":"tasks/util/#defaults_8","text":"max_retries (Int, default=1)","title":"Defaults"},{"location":"tasks/util/#outputs_8","text":"exon_bed (File) CDS_bed (File)","title":"Outputs"},{"location":"workflows/10x-bam-to-fastqs/","text":"Cell Ranger Bam to FastQs This WDL workflow converts an input BAM file to a set of FastQ files. It performs QC checks along the way to validate the input and output. Output: read1s an array of files with the first read in the pair read2s an array of files with the second read in the pair fastqs an array of files sufficient for localizing in Cell Ranger's expected format fastqs_archive a compressed archive comtaining the array of FastQ files LICENSING: MIT License Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. cell_ranger_bam_to_fastqs Inputs Required bam (File, required ): BAM file to split into FastQs. Optional max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. fqlint_single.read2 (File?) Defaults bam_to_fastq_memory_gb (Int, default=40): How much memory to provide while converting to FastQs. cellranger11 (Boolean, default=false): Convert a BAM produced by Cell Ranger 1.0-1.1 gemcode (Boolean, default=false): Convert a BAM produced from GemCode data (Longranger 1.0 - 1.3) longranger20 (Boolean, default=false): Convert a BAM produced by Longranger 2.0 paired (Boolean, default=true): Is the data paired-end (true) or single-end (false)? use_all_cores (Boolean, default=false): Use all cores for multi-core steps? bamtofastq.ncpu (Int, default=4) bamtofastq.use_all_cores (Boolean, default=false): Use all cores for multi-core steps? fqlint_pair.memory_gb (Int, default=8) fqlint_single.memory_gb (Int, default=8) Outputs fastqs (Array[File]) fastqs_archive (File) read1s (Array[File]) read2s (Array[File]) parse_input Inputs Required cellranger11 (Boolean, required ) gemcode (Boolean, required ) longranger20 (Boolean, required ) Outputs input_check (String)","title":"Cell Ranger Bam to FastQs"},{"location":"workflows/10x-bam-to-fastqs/#cell-ranger-bam-to-fastqs","text":"This WDL workflow converts an input BAM file to a set of FastQ files. It performs QC checks along the way to validate the input and output.","title":"Cell Ranger Bam to FastQs"},{"location":"workflows/10x-bam-to-fastqs/#output","text":"read1s an array of files with the first read in the pair read2s an array of files with the second read in the pair fastqs an array of files sufficient for localizing in Cell Ranger's expected format fastqs_archive a compressed archive comtaining the array of FastQ files","title":"Output:"},{"location":"workflows/10x-bam-to-fastqs/#licensing","text":"","title":"LICENSING:"},{"location":"workflows/10x-bam-to-fastqs/#mit-license","text":"Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"workflows/10x-bam-to-fastqs/#cell_ranger_bam_to_fastqs","text":"","title":"cell_ranger_bam_to_fastqs"},{"location":"workflows/10x-bam-to-fastqs/#inputs","text":"","title":"Inputs"},{"location":"workflows/10x-bam-to-fastqs/#required","text":"bam (File, required ): BAM file to split into FastQs.","title":"Required"},{"location":"workflows/10x-bam-to-fastqs/#optional","text":"max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. fqlint_single.read2 (File?)","title":"Optional"},{"location":"workflows/10x-bam-to-fastqs/#defaults","text":"bam_to_fastq_memory_gb (Int, default=40): How much memory to provide while converting to FastQs. cellranger11 (Boolean, default=false): Convert a BAM produced by Cell Ranger 1.0-1.1 gemcode (Boolean, default=false): Convert a BAM produced from GemCode data (Longranger 1.0 - 1.3) longranger20 (Boolean, default=false): Convert a BAM produced by Longranger 2.0 paired (Boolean, default=true): Is the data paired-end (true) or single-end (false)? use_all_cores (Boolean, default=false): Use all cores for multi-core steps? bamtofastq.ncpu (Int, default=4) bamtofastq.use_all_cores (Boolean, default=false): Use all cores for multi-core steps? fqlint_pair.memory_gb (Int, default=8) fqlint_single.memory_gb (Int, default=8)","title":"Defaults"},{"location":"workflows/10x-bam-to-fastqs/#outputs","text":"fastqs (Array[File]) fastqs_archive (File) read1s (Array[File]) read2s (Array[File])","title":"Outputs"},{"location":"workflows/10x-bam-to-fastqs/#parse_input","text":"","title":"parse_input"},{"location":"workflows/10x-bam-to-fastqs/#inputs_1","text":"","title":"Inputs"},{"location":"workflows/10x-bam-to-fastqs/#required_1","text":"cellranger11 (Boolean, required ) gemcode (Boolean, required ) longranger20 (Boolean, required )","title":"Required"},{"location":"workflows/10x-bam-to-fastqs/#outputs_1","text":"input_check (String)","title":"Outputs"},{"location":"workflows/ESTIMATE/","text":"ESTIMATE Runs the ESTIMATE software package on a feature counts file. LICENSING: MIT License Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ESTIMATE Inputs Required counts_file (File, required ) gene_lengths_file (File, required ) Optional max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. Defaults calc_tpm.outfile_name (String, default=basename(counts,\".feature-counts.txt\") + \".TPM.txt\") run_ESTIMATE.outfile_name (String, default=basename(gene_expression_file,\".TPM.txt\") + \".ESTIMATE.gct\") Outputs tpm (File) estimate_out (File)","title":"ESTIMATE"},{"location":"workflows/ESTIMATE/#estimate","text":"Runs the ESTIMATE software package on a feature counts file.","title":"ESTIMATE"},{"location":"workflows/ESTIMATE/#licensing","text":"","title":"LICENSING:"},{"location":"workflows/ESTIMATE/#mit-license","text":"Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"workflows/ESTIMATE/#estimate_1","text":"","title":"ESTIMATE"},{"location":"workflows/ESTIMATE/#inputs","text":"","title":"Inputs"},{"location":"workflows/ESTIMATE/#required","text":"counts_file (File, required ) gene_lengths_file (File, required )","title":"Required"},{"location":"workflows/ESTIMATE/#optional","text":"max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults.","title":"Optional"},{"location":"workflows/ESTIMATE/#defaults","text":"calc_tpm.outfile_name (String, default=basename(counts,\".feature-counts.txt\") + \".TPM.txt\") run_ESTIMATE.outfile_name (String, default=basename(gene_expression_file,\".TPM.txt\") + \".ESTIMATE.gct\")","title":"Defaults"},{"location":"workflows/ESTIMATE/#outputs","text":"tpm (File) estimate_out (File)","title":"Outputs"},{"location":"workflows/bam-to-fastqs/","text":"Bam to FastQs This WDL workflow converts an input BAM file to a set of FastQ files for read 1 and read 2. It performs QC checks along the way to validate the input and output. Output: read1s an array of files with the first read in the pair read2s an array of files with the second read in the pair LICENSING: MIT License Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. bam_to_fastqs Inputs Required bam (File, required ): BAM file to split into FastQs Optional max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. fqlint_single.read2 (File?) split.disk_size_gb (Int?) Defaults paired (Boolean, default=true): Is the data paired-end (true) or single-end (false)? use_all_cores (Boolean, default=false): Use all cores for multi-core steps? bam_to_fastq.memory_gb (Int, default=40) bam_to_fastq.prefix (String, default=basename(bam,\".bam\")) fqlint_pair.memory_gb (Int, default=8) fqlint_single.memory_gb (Int, default=8) split.ncpu (Int, default=1) split.prefix (String, default=basename(bam,\".bam\")) split.reject_unaccounted (Boolean, default=true) Outputs read1s (Array[File]) read2s (Array[File?])","title":"Bam to FastQs"},{"location":"workflows/bam-to-fastqs/#bam-to-fastqs","text":"This WDL workflow converts an input BAM file to a set of FastQ files for read 1 and read 2. It performs QC checks along the way to validate the input and output.","title":"Bam to FastQs"},{"location":"workflows/bam-to-fastqs/#output","text":"read1s an array of files with the first read in the pair read2s an array of files with the second read in the pair","title":"Output:"},{"location":"workflows/bam-to-fastqs/#licensing","text":"","title":"LICENSING:"},{"location":"workflows/bam-to-fastqs/#mit-license","text":"Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"workflows/bam-to-fastqs/#bam_to_fastqs","text":"","title":"bam_to_fastqs"},{"location":"workflows/bam-to-fastqs/#inputs","text":"","title":"Inputs"},{"location":"workflows/bam-to-fastqs/#required","text":"bam (File, required ): BAM file to split into FastQs","title":"Required"},{"location":"workflows/bam-to-fastqs/#optional","text":"max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. fqlint_single.read2 (File?) split.disk_size_gb (Int?)","title":"Optional"},{"location":"workflows/bam-to-fastqs/#defaults","text":"paired (Boolean, default=true): Is the data paired-end (true) or single-end (false)? use_all_cores (Boolean, default=false): Use all cores for multi-core steps? bam_to_fastq.memory_gb (Int, default=40) bam_to_fastq.prefix (String, default=basename(bam,\".bam\")) fqlint_pair.memory_gb (Int, default=8) fqlint_single.memory_gb (Int, default=8) split.ncpu (Int, default=1) split.prefix (String, default=basename(bam,\".bam\")) split.reject_unaccounted (Boolean, default=true)","title":"Defaults"},{"location":"workflows/bam-to-fastqs/#outputs","text":"read1s (Array[File]) read2s (Array[File?])","title":"Outputs"},{"location":"workflows/bwa-db-build/","text":"BWA DB build This WDL workflow generates a set of genome reference files usable by the BWA aligner from an input reference file in FASTA format. Output reference_fa the reference FASTA file bwadb_tar_gz the BWA reference folder in .tar.gz format LICENSING MIT License Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. bwa_db_build Inputs Required reference_fa_name (String, required ): Name of output reference FASTA file reference_fa_url (String, required ): URL to retrieve the reference FASTA file from. Optional build_bwa_db.disk_size_gb (Int?) reference_download.md5sum (String?) Defaults build_bwa_db.max_retries (Int, default=1) build_bwa_db.memory_gb (Int, default=5) reference_download.disk_size_gb (Int, default=10) reference_download.max_retries (Int, default=1) Outputs reference_fa (File) bwadb_tar_gz (File)","title":"BWA DB build"},{"location":"workflows/bwa-db-build/#bwa-db-build","text":"This WDL workflow generates a set of genome reference files usable by the BWA aligner from an input reference file in FASTA format.","title":"BWA DB build"},{"location":"workflows/bwa-db-build/#output","text":"reference_fa the reference FASTA file bwadb_tar_gz the BWA reference folder in .tar.gz format","title":"Output"},{"location":"workflows/bwa-db-build/#licensing","text":"","title":"LICENSING"},{"location":"workflows/bwa-db-build/#mit-license","text":"Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"workflows/bwa-db-build/#bwa_db_build","text":"","title":"bwa_db_build"},{"location":"workflows/bwa-db-build/#inputs","text":"","title":"Inputs"},{"location":"workflows/bwa-db-build/#required","text":"reference_fa_name (String, required ): Name of output reference FASTA file reference_fa_url (String, required ): URL to retrieve the reference FASTA file from.","title":"Required"},{"location":"workflows/bwa-db-build/#optional","text":"build_bwa_db.disk_size_gb (Int?) reference_download.md5sum (String?)","title":"Optional"},{"location":"workflows/bwa-db-build/#defaults","text":"build_bwa_db.max_retries (Int, default=1) build_bwa_db.memory_gb (Int, default=5) reference_download.disk_size_gb (Int, default=10) reference_download.max_retries (Int, default=1)","title":"Defaults"},{"location":"workflows/bwa-db-build/#outputs","text":"reference_fa (File) bwadb_tar_gz (File)","title":"Outputs"},{"location":"workflows/calc-gene-lengths/","text":"Calculate Gene Lengths Calculates gene lengths from a GTF file. LICENSING: MIT License Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. calc_gene_lengths Inputs Required gtf (File, required ): GTF feature file Optional max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. Defaults calc.outfile_name (String, default=basename(gtf,\".gtf.gz\") + \".genelengths.txt\") Outputs gene_lengths (File)","title":"Calculate Gene Lengths"},{"location":"workflows/calc-gene-lengths/#calculate-gene-lengths","text":"Calculates gene lengths from a GTF file.","title":"Calculate Gene Lengths"},{"location":"workflows/calc-gene-lengths/#licensing","text":"","title":"LICENSING:"},{"location":"workflows/calc-gene-lengths/#mit-license","text":"Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"workflows/calc-gene-lengths/#calc_gene_lengths","text":"","title":"calc_gene_lengths"},{"location":"workflows/calc-gene-lengths/#inputs","text":"","title":"Inputs"},{"location":"workflows/calc-gene-lengths/#required","text":"gtf (File, required ): GTF feature file","title":"Required"},{"location":"workflows/calc-gene-lengths/#optional","text":"max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults.","title":"Optional"},{"location":"workflows/calc-gene-lengths/#defaults","text":"calc.outfile_name (String, default=basename(gtf,\".gtf.gz\") + \".genelengths.txt\")","title":"Defaults"},{"location":"workflows/calc-gene-lengths/#outputs","text":"gene_lengths (File)","title":"Outputs"},{"location":"workflows/make-qc-reference/","text":"Make QC Reference Download/create all the reference files needed for quality-check-standard.wdl . This includes: a reference FASTA, a GTF, the database used by Kraken2, and exonic/coding regions BEDs for use in restricting mosdepth coverage analysis to selected regions. LICENSING: MIT License Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. make_qc_reference Inputs Required gtf_name (String, required ): Name of output GTF file gtf_url (String, required ): URL to retrieve the reference GTF file from reference_fa_name (String, required ): Name of output reference FASTA file reference_fa_url (String, required ): URL to retrieve the reference FASTA file from Optional max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. fastas_download.md5sum (String?) gtf_download.md5sum (String?) reference_download.md5sum (String?) Defaults kraken_fasta_urls (Array[String], default=[]): URLs for any additional FASTA files in NCBI format to download and include in the Kraken2 database. This allows the addition of individual genomes (or other sequences) of interest. kraken_fastas (Array[File], default=[]): Array of gzipped FASTA files. Each sequence's ID must contain either an NCBI accession number or an explicit assignment of the taxonomy ID using kraken:taxid kraken_libraries (Array[String], default=[\"archaea\", \"bacteria\", \"plasmid\", \"viral\", \"human\", \"fungi\", \"protozoa\", \"UniVec_Core\"]); description : List of kraken libraries to download; choices : ['archaea', 'bacteria', 'plasmid', 'viral', 'human', 'fungi', 'plant', 'protozoa', 'nt', 'UniVec', 'UniVec_Core'] protein (Boolean, default=false): Construct a protein database? create_library_from_fastas.added_disk_size_gb (Int, default=0) create_library_from_fastas.memory_gb (Int, default=4) download_library.added_disk_size_gb (Int, default=0) download_library.memory_gb (Int, default=4) download_taxonomy.disk_size_gb (Int, default=60) download_taxonomy.memory_gb (Int, default=4) fastas_download.disk_size_gb (Int, default=10) gtf_download.disk_size_gb (Int, default=10) kraken_build_db.added_disk_size_gb (Int, default=0) kraken_build_db.added_memory_gb (Int, default=0) kraken_build_db.db_name (String, default=\"kraken2_db\") kraken_build_db.detect_nproc (Boolean, default=false) kraken_build_db.kmer_len (Int, default=if protein then 15 else 35) kraken_build_db.max_db_size_gb (Int, default=-1) kraken_build_db.minimizer_len (Int, default=if protein then 12 else 31) kraken_build_db.minimizer_spaces (Int, default=if protein then 0 else 7) kraken_build_db.ncpu (Int, default=1) reference_download.disk_size_gb (Int, default=10) Outputs reference_fa (File) gtf (File) exon_bed (File) CDS_bed (File) kraken_db (File)","title":"Make QC Reference"},{"location":"workflows/make-qc-reference/#make-qc-reference","text":"Download/create all the reference files needed for quality-check-standard.wdl . This includes: a reference FASTA, a GTF, the database used by Kraken2, and exonic/coding regions BEDs for use in restricting mosdepth coverage analysis to selected regions.","title":"Make QC Reference"},{"location":"workflows/make-qc-reference/#licensing","text":"","title":"LICENSING:"},{"location":"workflows/make-qc-reference/#mit-license","text":"Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"workflows/make-qc-reference/#make_qc_reference","text":"","title":"make_qc_reference"},{"location":"workflows/make-qc-reference/#inputs","text":"","title":"Inputs"},{"location":"workflows/make-qc-reference/#required","text":"gtf_name (String, required ): Name of output GTF file gtf_url (String, required ): URL to retrieve the reference GTF file from reference_fa_name (String, required ): Name of output reference FASTA file reference_fa_url (String, required ): URL to retrieve the reference FASTA file from","title":"Required"},{"location":"workflows/make-qc-reference/#optional","text":"max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. fastas_download.md5sum (String?) gtf_download.md5sum (String?) reference_download.md5sum (String?)","title":"Optional"},{"location":"workflows/make-qc-reference/#defaults","text":"kraken_fasta_urls (Array[String], default=[]): URLs for any additional FASTA files in NCBI format to download and include in the Kraken2 database. This allows the addition of individual genomes (or other sequences) of interest. kraken_fastas (Array[File], default=[]): Array of gzipped FASTA files. Each sequence's ID must contain either an NCBI accession number or an explicit assignment of the taxonomy ID using kraken:taxid kraken_libraries (Array[String], default=[\"archaea\", \"bacteria\", \"plasmid\", \"viral\", \"human\", \"fungi\", \"protozoa\", \"UniVec_Core\"]); description : List of kraken libraries to download; choices : ['archaea', 'bacteria', 'plasmid', 'viral', 'human', 'fungi', 'plant', 'protozoa', 'nt', 'UniVec', 'UniVec_Core'] protein (Boolean, default=false): Construct a protein database? create_library_from_fastas.added_disk_size_gb (Int, default=0) create_library_from_fastas.memory_gb (Int, default=4) download_library.added_disk_size_gb (Int, default=0) download_library.memory_gb (Int, default=4) download_taxonomy.disk_size_gb (Int, default=60) download_taxonomy.memory_gb (Int, default=4) fastas_download.disk_size_gb (Int, default=10) gtf_download.disk_size_gb (Int, default=10) kraken_build_db.added_disk_size_gb (Int, default=0) kraken_build_db.added_memory_gb (Int, default=0) kraken_build_db.db_name (String, default=\"kraken2_db\") kraken_build_db.detect_nproc (Boolean, default=false) kraken_build_db.kmer_len (Int, default=if protein then 15 else 35) kraken_build_db.max_db_size_gb (Int, default=-1) kraken_build_db.minimizer_len (Int, default=if protein then 12 else 31) kraken_build_db.minimizer_spaces (Int, default=if protein then 0 else 7) kraken_build_db.ncpu (Int, default=1) reference_download.disk_size_gb (Int, default=10)","title":"Defaults"},{"location":"workflows/make-qc-reference/#outputs","text":"reference_fa (File) gtf (File) exon_bed (File) CDS_bed (File) kraken_db (File)","title":"Outputs"},{"location":"workflows/quality-check-standard/","text":"Quality Check Standard This workflow runs a variety of quality checking software on any BAM file. It can be WGS, WES, or Transcriptome data. The results are aggregated and run through MultiQC . LICENSING MIT License Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. quality_check Inputs Required bam (File, required ): Input BAM format file to quality check bam_index (File, required ): BAM index file corresponding to the input BAM kraken_db (File, required ): Kraken2 database. Can be generated with make-qc-reference.wdl . Must be a flat tarball without a root directory. molecule (String, required ); description : Data type; choices : ['DNA', 'RNA'] reference_fasta (File, required ): Reference genome in FASTA format Optional gtf (File?): Gzipped GTF features file. Required for RNA-Seq data max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. star_log (File?): Log file generated by the RNA-Seq aligner STAR. Will be added to MultiQC report. collect_alignment_summary_metrics.disk_size_gb (Int?) collect_gc_bias_metrics.disk_size_gb (Int?) collect_insert_size_metrics.disk_size_gb (Int?) picard_sort.disk_size_gb (Int?) qualimap_rnaseq.disk_size_gb (Int?) quality_score_distribution.disk_size_gb (Int?) run_kraken.memory_gb (Int?) run_kraken.sample_name (String?) wg_coverage.coverage_bed (File?) Defaults coverage_beds (Array[File], default=[]): An array of 3 column BEDs which are passed to the -b flag of mosdepth, in order to restrict coverage analysis to select regions coverage_labels (Array[String], default=[]): An array of equal length to coverage_beds which determines the prefix label applied to the output files. If omitted, defaults of regions1 , regions2 , etc. will be used. strandedness (String, default=\"\"); description : Strandedness protocol of the RNA-Seq experiment. Only used for RNA-Seq data. If unspecified, strandedness will be inferred by ngsderive . If specified, user supplied strandedness will be used by qualimap rnaseq .; choices : ['', 'Stranded-Reverse', 'Stranded-Forward', 'Unstranded'] bam_to_fastq.memory_gb (Int, default=40) bam_to_fastq.paired (Boolean, default=true) bam_to_fastq.prefix (String, default=basename(bam,\".bam\")) collect_alignment_summary_metrics.memory_gb (Int, default=8) collect_gc_bias_metrics.memory_gb (Int, default=8) collect_insert_size_metrics.memory_gb (Int, default=8) compute_checksum.memory_gb (Int, default=5) compute_checksum.outfile_name (String, default=basename(infile) + \".md5\") fastqc.memory_gb (Int, default=5) fastqc.ncpu (Int, default=1) fqlint.memory_gb (Int, default=8) junction_annotation.fuzzy_junction_match_range (Int, default=0) junction_annotation.memory_gb (Int, default=35) junction_annotation.min_intron (Int, default=50) junction_annotation.min_mapq (Int, default=30) junction_annotation.min_reads (Int, default=2) junction_annotation.prefix (String, default=basename(bam,\".bam\")) multiqc.disk_size (Int, default=20) multiqc.memory_gb (Int, default=5) ngsderive_encoding.memory_gb (Int, default=5) ngsderive_encoding.num_samples (Int, default=1000000) ngsderive_read_length.memory_gb (Int, default=5) ngsderive_strandedness.memory_gb (Int, default=5) ngsderive_strandedness.min_mapq (Int, default=30) ngsderive_strandedness.min_reads_per_gene (Int, default=10) ngsderive_strandedness.num_genes (Int, default=1000) picard_sort.memory_gb (Int, default=25) picard_sort.outfile_name (String, default=basename(bam,\".bam\") + \".sorted.bam\") qualimap_rnaseq.memory_gb (Int, default=16) qualimap_rnaseq.paired_end (Boolean, default=true) quality_score_distribution.memory_gb (Int, default=8) regions_coverage.memory_gb (Int, default=8) regions_coverage.min_mapping_quality (Int, default=20) regions_coverage.use_fast_mode (Boolean, default=true) run_kraken.detect_nproc (Boolean, default=false) run_kraken.min_base_quality (Int, default=0) run_kraken.ncpu (Int, default=1) run_kraken.store_sequences (Boolean, default=false) run_kraken.use_names (Boolean, default=true) samtools_flagstat.memory_gb (Int, default=5) samtools_flagstat.outfile_name (String, default=basename(bam,\".bam\") + \".flagstat.txt\") validate_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_bam.max_errors (Int, default=2147483647) validate_bam.memory_gb (Int, default=12) validate_bam.outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") validate_bam.succeed_on_warnings (Boolean, default=true) wg_coverage.memory_gb (Int, default=8) wg_coverage.min_mapping_quality (Int, default=20) wg_coverage.use_fast_mode (Boolean, default=true) Outputs bam_checksum (File) validate_sam_file (File) flagstat (File) fastqc_results (File) instrument_file (File) read_length_file (File) inferred_encoding (File) alignment_metrics (File) alignment_metrics_pdf (File) gc_bias_metrics (File) gc_bias_metrics_pdf (File) insert_size_metrics (File) insert_size_metrics_pdf (File) quality_score_distribution_txt (File) quality_score_distribution_pdf (File) kraken_report (File) mosdepth_global_dist (File) mosdepth_global_summary (File) multiqc_zip (File) kraken_sequences (File?) mosdepth_region_dist (Array[File]) mosdepth_region_summary (Array[File]) inferred_strandedness (File?) qualimap_rnaseq_results (File?) junction_summary (File?) junctions (File?) parse_input Inputs Required coverage_beds_len (Int, required ) coverage_labels (Array[String], required ) gtf_provided (Boolean, required ) input_molecule (String, required ) input_strand (String, required ) Outputs check (String) labels (Array[String])","title":"Quality Check Standard"},{"location":"workflows/quality-check-standard/#quality-check-standard","text":"This workflow runs a variety of quality checking software on any BAM file. It can be WGS, WES, or Transcriptome data. The results are aggregated and run through MultiQC .","title":"Quality Check Standard"},{"location":"workflows/quality-check-standard/#licensing","text":"","title":"LICENSING"},{"location":"workflows/quality-check-standard/#mit-license","text":"Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"workflows/quality-check-standard/#quality_check","text":"","title":"quality_check"},{"location":"workflows/quality-check-standard/#inputs","text":"","title":"Inputs"},{"location":"workflows/quality-check-standard/#required","text":"bam (File, required ): Input BAM format file to quality check bam_index (File, required ): BAM index file corresponding to the input BAM kraken_db (File, required ): Kraken2 database. Can be generated with make-qc-reference.wdl . Must be a flat tarball without a root directory. molecule (String, required ); description : Data type; choices : ['DNA', 'RNA'] reference_fasta (File, required ): Reference genome in FASTA format","title":"Required"},{"location":"workflows/quality-check-standard/#optional","text":"gtf (File?): Gzipped GTF features file. Required for RNA-Seq data max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. star_log (File?): Log file generated by the RNA-Seq aligner STAR. Will be added to MultiQC report. collect_alignment_summary_metrics.disk_size_gb (Int?) collect_gc_bias_metrics.disk_size_gb (Int?) collect_insert_size_metrics.disk_size_gb (Int?) picard_sort.disk_size_gb (Int?) qualimap_rnaseq.disk_size_gb (Int?) quality_score_distribution.disk_size_gb (Int?) run_kraken.memory_gb (Int?) run_kraken.sample_name (String?) wg_coverage.coverage_bed (File?)","title":"Optional"},{"location":"workflows/quality-check-standard/#defaults","text":"coverage_beds (Array[File], default=[]): An array of 3 column BEDs which are passed to the -b flag of mosdepth, in order to restrict coverage analysis to select regions coverage_labels (Array[String], default=[]): An array of equal length to coverage_beds which determines the prefix label applied to the output files. If omitted, defaults of regions1 , regions2 , etc. will be used. strandedness (String, default=\"\"); description : Strandedness protocol of the RNA-Seq experiment. Only used for RNA-Seq data. If unspecified, strandedness will be inferred by ngsderive . If specified, user supplied strandedness will be used by qualimap rnaseq .; choices : ['', 'Stranded-Reverse', 'Stranded-Forward', 'Unstranded'] bam_to_fastq.memory_gb (Int, default=40) bam_to_fastq.paired (Boolean, default=true) bam_to_fastq.prefix (String, default=basename(bam,\".bam\")) collect_alignment_summary_metrics.memory_gb (Int, default=8) collect_gc_bias_metrics.memory_gb (Int, default=8) collect_insert_size_metrics.memory_gb (Int, default=8) compute_checksum.memory_gb (Int, default=5) compute_checksum.outfile_name (String, default=basename(infile) + \".md5\") fastqc.memory_gb (Int, default=5) fastqc.ncpu (Int, default=1) fqlint.memory_gb (Int, default=8) junction_annotation.fuzzy_junction_match_range (Int, default=0) junction_annotation.memory_gb (Int, default=35) junction_annotation.min_intron (Int, default=50) junction_annotation.min_mapq (Int, default=30) junction_annotation.min_reads (Int, default=2) junction_annotation.prefix (String, default=basename(bam,\".bam\")) multiqc.disk_size (Int, default=20) multiqc.memory_gb (Int, default=5) ngsderive_encoding.memory_gb (Int, default=5) ngsderive_encoding.num_samples (Int, default=1000000) ngsderive_read_length.memory_gb (Int, default=5) ngsderive_strandedness.memory_gb (Int, default=5) ngsderive_strandedness.min_mapq (Int, default=30) ngsderive_strandedness.min_reads_per_gene (Int, default=10) ngsderive_strandedness.num_genes (Int, default=1000) picard_sort.memory_gb (Int, default=25) picard_sort.outfile_name (String, default=basename(bam,\".bam\") + \".sorted.bam\") qualimap_rnaseq.memory_gb (Int, default=16) qualimap_rnaseq.paired_end (Boolean, default=true) quality_score_distribution.memory_gb (Int, default=8) regions_coverage.memory_gb (Int, default=8) regions_coverage.min_mapping_quality (Int, default=20) regions_coverage.use_fast_mode (Boolean, default=true) run_kraken.detect_nproc (Boolean, default=false) run_kraken.min_base_quality (Int, default=0) run_kraken.ncpu (Int, default=1) run_kraken.store_sequences (Boolean, default=false) run_kraken.use_names (Boolean, default=true) samtools_flagstat.memory_gb (Int, default=5) samtools_flagstat.outfile_name (String, default=basename(bam,\".bam\") + \".flagstat.txt\") validate_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_bam.max_errors (Int, default=2147483647) validate_bam.memory_gb (Int, default=12) validate_bam.outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") validate_bam.succeed_on_warnings (Boolean, default=true) wg_coverage.memory_gb (Int, default=8) wg_coverage.min_mapping_quality (Int, default=20) wg_coverage.use_fast_mode (Boolean, default=true)","title":"Defaults"},{"location":"workflows/quality-check-standard/#outputs","text":"bam_checksum (File) validate_sam_file (File) flagstat (File) fastqc_results (File) instrument_file (File) read_length_file (File) inferred_encoding (File) alignment_metrics (File) alignment_metrics_pdf (File) gc_bias_metrics (File) gc_bias_metrics_pdf (File) insert_size_metrics (File) insert_size_metrics_pdf (File) quality_score_distribution_txt (File) quality_score_distribution_pdf (File) kraken_report (File) mosdepth_global_dist (File) mosdepth_global_summary (File) multiqc_zip (File) kraken_sequences (File?) mosdepth_region_dist (Array[File]) mosdepth_region_summary (Array[File]) inferred_strandedness (File?) qualimap_rnaseq_results (File?) junction_summary (File?) junctions (File?)","title":"Outputs"},{"location":"workflows/quality-check-standard/#parse_input","text":"","title":"parse_input"},{"location":"workflows/quality-check-standard/#inputs_1","text":"","title":"Inputs"},{"location":"workflows/quality-check-standard/#required_1","text":"coverage_beds_len (Int, required ) coverage_labels (Array[String], required ) gtf_provided (Boolean, required ) input_molecule (String, required ) input_strand (String, required )","title":"Required"},{"location":"workflows/quality-check-standard/#outputs_1","text":"check (String) labels (Array[String])","title":"Outputs"},{"location":"workflows/scrnaseq-standard/","text":"scRNA-Seq Standard This WDL workflow runs the Cell Ranger scRNA-Seq alignment workflow for St. Jude Cloud. The workflow takes an input BAM file and splits it into FastQ files for each read in the pair. The read pairs are then passed through Cell Ranger to generate a BAM file and perform quantification. Strandedness is inferred using ngsderive. File validation is performed at several steps, including immediately preceeding output. LICENSING MIT License Copyright 2022-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. scrnaseq_standard Inputs Required bam (File, required ): Input BAM format file to quality check gtf (File, required ): Gzipped GTF feature file transcriptome_tar_gz (File, required ): Database of reference files for Cell Ranger. Can be downloaded from 10x Genomics. Optional max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. cell_ranger_bam_to_fastqs.fqlint_single.read2 (File?) Defaults output_prefix (String, default=basename(bam,\".bam\")): Prefix for output files strandedness (String, default=\"\"); description : Strandedness protocol of the RNA-Seq experiment. If unspecified, strandedness will be inferred by ngsderive .; choices : ['', 'Stranded-Reverse', 'Stranded-Forward', 'Unstranded'] subsample_n_reads (Int, default=-1): Only process a random sampling of n reads. <= 0 for processing entire input BAM. use_all_cores (Boolean, default=false): Use all cores for multi-core steps? validate_input (Boolean, default=true) cell_ranger_bam_to_fastqs.bam_to_fastq_memory_gb (Int, default=40) cell_ranger_bam_to_fastqs.cellranger11 (Boolean, default=false) cell_ranger_bam_to_fastqs.gemcode (Boolean, default=false) cell_ranger_bam_to_fastqs.longranger20 (Boolean, default=false) cell_ranger_bam_to_fastqs.paired (Boolean, default=true) compute_checksum.memory_gb (Int, default=5) compute_checksum.outfile_name (String, default=basename(infile) + \".md5\") count.jobmode (String, default=\"local\") count.memory_gb (Int, default=16) count.ncpu (Int, default=8) ngsderive_strandedness.memory_gb (Int, default=5) ngsderive_strandedness.min_mapq (Int, default=30) ngsderive_strandedness.min_reads_per_gene (Int, default=10) ngsderive_strandedness.num_genes (Int, default=1000) subsample.ncpu (Int, default=1) subsample.outfile_name (String, default=basename(bam,\".bam\") + \".subsampled.bam\") validate_bam.ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]) validate_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_bam.max_errors (Int, default=2147483647) validate_bam.memory_gb (Int, default=12) validate_bam.outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") validate_bam.succeed_on_errors (Boolean, default=false) validate_bam.succeed_on_warnings (Boolean, default=true) validate_bam.summary_mode (Boolean, default=false) validate_input_bam.ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]) validate_input_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_input_bam.max_errors (Int, default=2147483647) validate_input_bam.memory_gb (Int, default=12) validate_input_bam.outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") validate_input_bam.succeed_on_errors (Boolean, default=false) validate_input_bam.succeed_on_warnings (Boolean, default=true) validate_input_bam.summary_mode (Boolean, default=false) cell_ranger_bam_to_fastqs.bamtofastq.ncpu (Int, default=4) cell_ranger_bam_to_fastqs.bamtofastq.use_all_cores (Boolean, default=false): Use all cores for multi-core steps? cell_ranger_bam_to_fastqs.fqlint_pair.memory_gb (Int, default=8) cell_ranger_bam_to_fastqs.fqlint_single.memory_gb (Int, default=8) Outputs harmonized_bam (File) bam_checksum (File) bam_index (File) qc (File) barcodes (File) features (File) matrix (File) filtered_gene_h5 (File) raw_gene_h5 (File) raw_barcodes (File) raw_features (File) raw_matrix (File) mol_info_h5 (File) web_summary (File) inferred_strandedness (File) parse_input Inputs Required input_strand (String, required ) Outputs input_check (String)","title":"Scrnaseq standard"},{"location":"workflows/scrnaseq-standard/#licensing","text":"","title":"LICENSING"},{"location":"workflows/scrnaseq-standard/#mit-license","text":"Copyright 2022-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"workflows/scrnaseq-standard/#scrnaseq_standard","text":"","title":"scrnaseq_standard"},{"location":"workflows/scrnaseq-standard/#inputs","text":"","title":"Inputs"},{"location":"workflows/scrnaseq-standard/#required","text":"bam (File, required ): Input BAM format file to quality check gtf (File, required ): Gzipped GTF feature file transcriptome_tar_gz (File, required ): Database of reference files for Cell Ranger. Can be downloaded from 10x Genomics.","title":"Required"},{"location":"workflows/scrnaseq-standard/#optional","text":"max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. cell_ranger_bam_to_fastqs.fqlint_single.read2 (File?)","title":"Optional"},{"location":"workflows/scrnaseq-standard/#defaults","text":"output_prefix (String, default=basename(bam,\".bam\")): Prefix for output files strandedness (String, default=\"\"); description : Strandedness protocol of the RNA-Seq experiment. If unspecified, strandedness will be inferred by ngsderive .; choices : ['', 'Stranded-Reverse', 'Stranded-Forward', 'Unstranded'] subsample_n_reads (Int, default=-1): Only process a random sampling of n reads. <= 0 for processing entire input BAM. use_all_cores (Boolean, default=false): Use all cores for multi-core steps? validate_input (Boolean, default=true) cell_ranger_bam_to_fastqs.bam_to_fastq_memory_gb (Int, default=40) cell_ranger_bam_to_fastqs.cellranger11 (Boolean, default=false) cell_ranger_bam_to_fastqs.gemcode (Boolean, default=false) cell_ranger_bam_to_fastqs.longranger20 (Boolean, default=false) cell_ranger_bam_to_fastqs.paired (Boolean, default=true) compute_checksum.memory_gb (Int, default=5) compute_checksum.outfile_name (String, default=basename(infile) + \".md5\") count.jobmode (String, default=\"local\") count.memory_gb (Int, default=16) count.ncpu (Int, default=8) ngsderive_strandedness.memory_gb (Int, default=5) ngsderive_strandedness.min_mapq (Int, default=30) ngsderive_strandedness.min_reads_per_gene (Int, default=10) ngsderive_strandedness.num_genes (Int, default=1000) subsample.ncpu (Int, default=1) subsample.outfile_name (String, default=basename(bam,\".bam\") + \".subsampled.bam\") validate_bam.ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]) validate_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_bam.max_errors (Int, default=2147483647) validate_bam.memory_gb (Int, default=12) validate_bam.outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") validate_bam.succeed_on_errors (Boolean, default=false) validate_bam.succeed_on_warnings (Boolean, default=true) validate_bam.summary_mode (Boolean, default=false) validate_input_bam.ignore_list (Array[String], default=[\"MISSING_PLATFORM_VALUE\", \"INVALID_PLATFORM_VALUE\", \"INVALID_MAPPING_QUALITY\"]) validate_input_bam.index_validation_stringency_less_exhaustive (Boolean, default=false) validate_input_bam.max_errors (Int, default=2147483647) validate_input_bam.memory_gb (Int, default=12) validate_input_bam.outfile_name (String, default=basename(bam,\".bam\") + \".ValidateSamFile.txt\") validate_input_bam.succeed_on_errors (Boolean, default=false) validate_input_bam.succeed_on_warnings (Boolean, default=true) validate_input_bam.summary_mode (Boolean, default=false) cell_ranger_bam_to_fastqs.bamtofastq.ncpu (Int, default=4) cell_ranger_bam_to_fastqs.bamtofastq.use_all_cores (Boolean, default=false): Use all cores for multi-core steps? cell_ranger_bam_to_fastqs.fqlint_pair.memory_gb (Int, default=8) cell_ranger_bam_to_fastqs.fqlint_single.memory_gb (Int, default=8)","title":"Defaults"},{"location":"workflows/scrnaseq-standard/#outputs","text":"harmonized_bam (File) bam_checksum (File) bam_index (File) qc (File) barcodes (File) features (File) matrix (File) filtered_gene_h5 (File) raw_gene_h5 (File) raw_barcodes (File) raw_features (File) raw_matrix (File) mol_info_h5 (File) web_summary (File) inferred_strandedness (File)","title":"Outputs"},{"location":"workflows/scrnaseq-standard/#parse_input","text":"","title":"parse_input"},{"location":"workflows/scrnaseq-standard/#inputs_1","text":"","title":"Inputs"},{"location":"workflows/scrnaseq-standard/#required_1","text":"input_strand (String, required )","title":"Required"},{"location":"workflows/scrnaseq-standard/#outputs_1","text":"input_check (String)","title":"Outputs"},{"location":"workflows/star-db-build/","text":"STAR DB build This WDL workflow generates a set of genome reference files usable by the STAR aligner from an input reference file in FASTA format. Output reference_fa the reference FASTA file gtf the reference GTF file stardb_tar_gz the STAR DB folder in .tar.gz format LICENSING MIT License Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. star_db_build Inputs Required gtf_name (String, required ): Name of output GTF file gtf_url (String, required ): URL to retrieve the reference GTF file from reference_fa_name (String, required ): Name of output reference FASTA file reference_fa_url (String, required ): URL to retrieve the reference FASTA file from Optional gtf_md5 (String?): Expected md5sum of GTF file max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. reference_fa_md5 (String?): Expected md5sum of reference FASTA file build_star_db.disk_size_gb (Int?) Defaults build_star_db.memory_gb (Int, default=50) build_star_db.ncpu (Int, default=1) build_star_db.stardb_dir_name (String, default=\"stardb\") build_star_db.use_all_cores (Boolean, default=false) gtf_download.disk_size_gb (Int, default=10) reference_download.disk_size_gb (Int, default=10) Outputs reference_fa (File) gtf (File) stardb_tar_gz (File)","title":"STAR DB build"},{"location":"workflows/star-db-build/#star-db-build","text":"This WDL workflow generates a set of genome reference files usable by the STAR aligner from an input reference file in FASTA format.","title":"STAR DB build"},{"location":"workflows/star-db-build/#output","text":"reference_fa the reference FASTA file gtf the reference GTF file stardb_tar_gz the STAR DB folder in .tar.gz format","title":"Output"},{"location":"workflows/star-db-build/#licensing","text":"","title":"LICENSING"},{"location":"workflows/star-db-build/#mit-license","text":"Copyright 2020-Present St. Jude Children's Research Hospital Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"workflows/star-db-build/#star_db_build","text":"","title":"star_db_build"},{"location":"workflows/star-db-build/#inputs","text":"","title":"Inputs"},{"location":"workflows/star-db-build/#required","text":"gtf_name (String, required ): Name of output GTF file gtf_url (String, required ): URL to retrieve the reference GTF file from reference_fa_name (String, required ): Name of output reference FASTA file reference_fa_url (String, required ): URL to retrieve the reference FASTA file from","title":"Required"},{"location":"workflows/star-db-build/#optional","text":"gtf_md5 (String?): Expected md5sum of GTF file max_retries (Int?): Number of times to retry failed steps. Overrides task level defaults. reference_fa_md5 (String?): Expected md5sum of reference FASTA file build_star_db.disk_size_gb (Int?)","title":"Optional"},{"location":"workflows/star-db-build/#defaults","text":"build_star_db.memory_gb (Int, default=50) build_star_db.ncpu (Int, default=1) build_star_db.stardb_dir_name (String, default=\"stardb\") build_star_db.use_all_cores (Boolean, default=false) gtf_download.disk_size_gb (Int, default=10) reference_download.disk_size_gb (Int, default=10)","title":"Defaults"},{"location":"workflows/star-db-build/#outputs","text":"reference_fa (File) gtf (File) stardb_tar_gz (File)","title":"Outputs"}]}