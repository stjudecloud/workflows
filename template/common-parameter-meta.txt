    memory_gb: "RAM to allocate for task"
    disk_size_gb: "Disk space to allocate for task"
    modify_memory_gb: "Add to or subtract from dynamic memory allocation. Default memory is determined by the size of the inputs."
    modify_disk_size_gb: "Add to or subtract from dynamic disk space allocation. Default disk size is determined by the size of the inputs."
    ncpu: "Number of cores to allocate for task"
    detect_nproc: "Use all available cores? Recommended for cloud environments. Not recommended for cluster environments."
    max_retries: "<for a task>Number of times to retry in case of failure"
    max_retries: "<for a workflow>Number of times to retry failed steps. Overrides task level defaults."
    outfile_name: "Name for the <type of file> file"
    prefix: "Prefix for the <type of file> file. The extension `<extension>` will be added."
    gtf: "GTF features file"
    bam: "Input BAM format file to <brief description of task>"
    bam_index: "BAM index file corresponding to the input BAM"
    bai: "NOT ALLOWED. Use `bam_index`."
    reference_fasta: "Reference genome in FASTA format"
    strandedness: {
        description: "Strandedness protocol of the RNA-Seq experiment. If unspecified, strandedness will be inferred by `ngsderive`."
        choices: [
            '',
            'Stranded-Reverse',
            'Stranded-Forward',
            'Unstranded'
        ]
    },
    read_one_fastq: "Gzipped FastQ file with 1st reads in pair"
    read_two_fastq: "Gzipped FastQ file with 2nd reads in pair"
    read1: "NOT ALLOWED. Use `read_one_fastq`."
    read2: "NOT ALLOWED. Use `read_two_fastq`."
    read_one_fastqs: "Array of gzipped FastQ files with 1st reads in pair"
    read_two_fastqs: "Array of gzipped FastQ files with 2nd reads in pair"
    r1_fastqs: "NOT ALLOWED. Use `read_one_fastqs`."
    r2_fastqs: "NOT ALLOWED. Use `read_two_fastqs`."
    paired_end: "Is the data paired-end?"
    paired: "NOT ALLOWED. Use `paired_end`."
    subsample_n_reads: "Only process a random sampling of `n` reads. Any `n`<=`0` for processing entire input."