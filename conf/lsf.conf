include required(classpath("application"))

call-caching {
  enabled = true
}

database {
  profile = "slick.jdbc.HsqldbProfile$"
  db {
    driver = "org.hsqldb.jdbcDriver"
    url = """
    jdbc:hsqldb:file:cromwell-executions/cromwell-db/cromwell-db;
    shutdown=false;
    hsqldb.default_table_type=cached;hsqldb.tx=mvcc;
    hsqldb.result_max_memory_rows=10000;
    hsqldb.large_data=true;
    hsqldb.applog=1;
    hsqldb.lob_compressed=true;
    hsqldb.script_format=3
    """
    connectionTimeout = 120000
    numThreads = 1
   }
}

backend {
  default = LSF
  providers {
    LSF {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        runtime-attributes = """
        Int cpu = 1
        Int hosts = 1
        Float? memory_mb = 4096
        String lsf_queue = "standard"
        String? lsf_job_group
        String? docker 
        """

        submit = """
          bsub \
            -q ~{lsf_queue} \
            -n ~{cpu} \
            ~{"-g " + lsf_job_group} \
            -R "rusage[mem=~{round(round(memory_mb)/cpu)}] span[hosts=~{hosts}]" \
            -J ~{job_name} \
            -cwd ~{cwd} \
            -o ~{out} \
            -e ~{err} \
            /usr/bin/env bash ~{script}
        """

        submit-docker = """
          bsub \
            -q ~{lsf_queue} \
            -n ~{cpu} \
            ~{"-g " + lsf_job_group} \
            -R "rusage[mem=~{round(round(memory_mb)/cpu)}] span[hosts=~{hosts}]" \
            -J ~{job_name} \
            -cwd ~{cwd} \
            -o ~{cwd}/execution/stdout.lsf \
            -e ~{cwd}/execution/stderr.lsf \
            "singularity exec --bind ~{cwd}:~{docker_cwd} docker://~{docker} ~{job_shell} ~{script}"
        """


        kill = "bkill ~{job_id}"
        check-alive = "bjobs ~{job_id}"
        job-id-regex = "Job <(\\d+)>.*"

        exit-code-timeout-seconds = 120
      }
    }
  }
}
